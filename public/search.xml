<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>诗篇：情有感</title>
      <link href="/2021/12/17/%E8%AF%97%E7%AF%87%EF%BC%9A%E6%83%85%E6%9C%89%E6%84%9F/"/>
      <url>/2021/12/17/%E8%AF%97%E7%AF%87%EF%BC%9A%E6%83%85%E6%9C%89%E6%84%9F/</url>
      
        <content type="html"><![CDATA[<blockquote class="blockquote-center">            <i class="fa fa-quote-left"></i>            <h3 id="情有感"><a href="#情有感" class="headerlink" title="情有感"></a>情有感</h3><p>半影哀鸿寄妾伤，孤衣破镜弄眉妆；<br>陈姻落尽双娥泪，忆最倾心爱未央。</p>            <i class="fa fa-quote-right"></i>          </blockquote>]]></content>
      
      
      <categories>
          
          <category> 文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学试题二：高中篇</title>
      <link href="/2021/12/17/%E6%95%B0%E5%AD%A6%E8%AF%95%E9%A2%982/"/>
      <url>/2021/12/17/%E6%95%B0%E5%AD%A6%E8%AF%95%E9%A2%982/</url>
      
        <content type="html"><![CDATA[<p>$1. $ $f(x)=3ax^2 + 2bx + c$，若$a+b+c=0, f(0)f(1)&gt;0$，求证：<br/><br>（1）方程$f(x)=0$有实根；<br/><br>（2）$-2 &lt; \frac{b}{a} &lt; -1$；<br/><br>（3）设$x_1,x_2$是方程$f(x)=0$的两个实根，则$\frac{\sqrt 3}{3} &lt; |x_1 - x_2| &lt; \frac{2}{3}$。</p><a id="more"></a><p>$2. $ 已知$ f(x) $是定义在$[-1,1]$的奇函数，且$ f(1)=1 $，若$ a, b \in [-1, 1], a+b \ne 0 $，有$\displaystyle \frac{f(a)+f(b)}{a+b} &gt;0 $ 恒成立， <br/><br>（1）判断$f(x)$在$[-1,1]$的单调性。 <br/><br>（2）若$f(x) \le m^2-2am+1$，对所有$x \in [-1, 1], a \in [-1, 1]$恒成立，求$m$的取值范围。</p><p>$3. $ 设实数$a,b,c$满足</p><script type="math/tex; mode=display">    \left\{  \begin{aligned}        & a^2 - bc -8a + 7 = 0 \\        & b^2 + c^2 + bc - 6a + 6 = 0    \end{aligned}    \right.</script><p>求$a$的取值范围。</p><p>$4. $ 已知$a,b,c$都不是小于$1$的实数，满足$a \cdot b \cdot c = 10$，并且$a^{\lg a} \cdot b^{\lg b} \cdot c^{\lg c} \ge 0$，求$a+b+c$的值。</p><p>$5. $ 函数$f(x)$的定义域为$[0, +\infty)$，且满足 <br/><br>（1）$f(x)$在$(0, +\infty)$上递增； <br/><br>（2）对$x&gt;0$，均有$f(f(x)+\frac{1}{x})=1$<br>求$f(1)$。</p><p>$6. $ $f(x+3)f(1-x)=0$有$5$个实数根，则这$5$个根之和为？</p><p>$7. $ $\triangle ABC$中，点$G$为中线$AM$的中点，过点$G$作$PQ$分别交$AB,AC$于点$P,Q$，若$AP=hAB, AQ=kAC$，$\triangle APQ$的面积为$S$，$\triangle ABC$的面积为$T$，求 <br/><br>（1）$\displaystyle \frac{1}{h} + \frac{1}{k}$的值； <br/><br>（2）$\displaystyle \frac{S}{T}$的最小值。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.5irsesusr580.webp" width="30%"></p><p>$8. $ $a,b,c$为非负数，求$\displaystyle f(a,b,c)=\frac{c}{a}+\frac{a}{b+c}+\frac{b}{c}$的最小值？</p><p>$9. $ 求$\displaystyle \sqrt{\frac{4x+3}{x+1}} + \sqrt{\frac{5x+6}{x+1}}$的定义域和值域。</p><p>$10. $ 不等式$\sqrt{x} \ge ax + \frac{3}{2}$的解集为$(4,b)$，则实数$a,b$为？</p><p>$11. $ 正方体$ABCD-A_1B_1C_1D_1$的棱长为1，对角线$BD_1$的截面面积记为$S$，则$S$的取值范围是？</p><p>$12. $ 已知$\sin \alpha + \sin \beta = \sqrt 2, \cos \alpha + \cos \beta = \frac{2\sqrt 3}{3}$，求$\tan \alpha \tan \beta$的值。</p><p>$13. $ $\triangle ABC$中，内角$A,B,C$满足$2 \sin B = \sin A + \sin C$，求$5 \cos A - 4 \cos A \cos C + 5 \cos C$的值。</p><p>$14. $ 已知$\displaystyle \frac{\sin^2 \gamma}{\sin^2 \alpha} = 1 - \frac{\tan (\alpha - \beta)}{\tan \alpha}$，求证$\tan^2 \gamma = \tan \alpha \tan \beta$。</p><p>$15. $ 已知正方形$ABCD$的边长为$1$，$P,Q$分别是$AD,AB$上的点，$\triangle APQ$的周长为$2$，求$\angle PCQ$。</p><p>$16. $ 在$\triangle ABC$中，$AB=AC$，点$D$是$BC$的中点，点$E$是从点$D$作$AC$的垂线的垂足，点$F$是$DE$的中点，证明$AF \perp BE$。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.6ykaxfxmny80.webp" width="25%"></p><p>$17. $ 已知点$P$是$\triangle ABC$内一点，且$\overrightarrow{AP} = \frac{2}{5} \overrightarrow{AB} + \frac{1}{3} \overrightarrow{AC}$，则$\triangle ABP$和$\triangle ABC$的面积之比为？</p><p>$18. $ 在$Rt\triangle ABC$中，斜边$BC=a$，若长为$2a$的线段$PQ$以$A$为中点，问$\overrightarrow{PQ}$与$\overrightarrow{BC}$的夹角$\theta$取何值时，$\overrightarrow{BP} \cdot \overrightarrow{CQ}$的值最大，并求出这个最大值。</p><p>$19. $ 已知$\triangle ABC$三内角满足$2B=A+C$，求$\sin^2 A + \sin^2 C$的取值范围。</p><p>$20. $ 已知$f(\theta) = \cos^2 \theta + \cos^2 (\theta + \alpha) + \cos^2 (\theta + \beta)$，是否存在满足$0\le \alpha &lt; \beta &lt; \pi$的$\alpha, \beta$使得$f(\theta)$的取值不随$\theta$的变化而变化，如果存在，求出$\alpha, \beta$的值，若不存在，请说明理由。</p><p>$21. $ </p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandasecharts使用示例</title>
      <link href="/2021/12/17/pandasecharts%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B/"/>
      <url>/2021/12/17/pandasecharts%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/gamersover/pandasecharts" target="_blank" rel="noopener">pandasecharts</a>是一款基于pandas和pyecharts的可视化工具，该文档适用于版本&gt;=0.4.1。</p><h4 id="Bar柱状图"><a href="#Bar柱状图" class="headerlink" title="Bar柱状图"></a>Bar柱状图</h4><a id="more"></a><details><summary>展开</summary><iframe src="https://nbviewer.org/github/gamersover/gamersover.github.io/blob/hexo/source/_ipynotebook_html/bar_examples.html" frameBorder="0" width=1080px height=11300px></iframe></details><h4 id="Bar3d柱状图"><a href="#Bar3d柱状图" class="headerlink" title="Bar3d柱状图"></a>Bar3d柱状图</h4><details><summary>展开</summary><iframe src="https://nbviewer.org/github/gamersover/gamersover.github.io/blob/hexo/source/_ipynotebook_html/bar3d_examples.html" frameBorder="0" width=1080px height=1200px></iframe></details><h4 id="Line折线图"><a href="#Line折线图" class="headerlink" title="Line折线图"></a>Line折线图</h4><details><summary>展开</summary><iframe src="https://nbviewer.org/github/gamersover/gamersover.github.io/blob/hexo/source/_ipynotebook_html/line_examples.html" frameBorder="0" width=1080px height=7200px></iframe></details><h4 id="Line3d折线图"><a href="#Line3d折线图" class="headerlink" title="Line3d折线图"></a>Line3d折线图</h4><details><summary>展开</summary><iframe src="https://nbviewer.org/github/gamersover/gamersover.github.io/blob/hexo/source/_ipynotebook_html/line3d_examples.html" frameBorder="0" width=1080px height=1300px></iframe></details><h4 id="Scatter折线图"><a href="#Scatter折线图" class="headerlink" title="Scatter折线图"></a>Scatter折线图</h4><details><summary>展开</summary><iframe src="https://nbviewer.org/github/gamersover/gamersover.github.io/blob/hexo/source/_ipynotebook_html/scatter_examples.html" frameBorder="0" width=1080px height=5800px></iframe></details><h4 id="Scatter3d折线图"><a href="#Scatter3d折线图" class="headerlink" title="Scatter3d折线图"></a>Scatter3d折线图</h4><details><summary>展开</summary><iframe src="https://nbviewer.org/github/gamersover/gamersover.github.io/blob/hexo/source/_ipynotebook_html/scatter3d_examples.html" frameBorder="0" width=1080px height=1800px></iframe></details><h4 id="Pie饼图"><a href="#Pie饼图" class="headerlink" title="Pie饼图"></a>Pie饼图</h4><details><summary>展开</summary><iframe src="https://nbviewer.org/github/gamersover/gamersover.github.io/blob/hexo/source/_ipynotebook_html/pie_examples.html" frameBorder="0" width=1080px height=7800px></iframe></details><h4 id="Boxplot箱形图"><a href="#Boxplot箱形图" class="headerlink" title="Boxplot箱形图"></a>Boxplot箱形图</h4><details><summary>展开</summary><iframe src="https://nbviewer.org/github/gamersover/gamersover.github.io/blob/hexo/source/_ipynotebook_html/boxplot_examples.html" frameBorder="0" width=1080px height=4600px></iframe></details><h4 id="Funnel漏斗图"><a href="#Funnel漏斗图" class="headerlink" title="Funnel漏斗图"></a>Funnel漏斗图</h4><details><summary>展开</summary><iframe src="https://nbviewer.org/github/gamersover/gamersover.github.io/blob/hexo/source/_ipynotebook_html/funnel_examples.html" frameBorder="0" width=1080px height=3700px></iframe></details><h4 id="Geo地理图"><a href="#Geo地理图" class="headerlink" title="Geo地理图"></a>Geo地理图</h4><details><summary>展开</summary><iframe src="https://nbviewer.org/github/gamersover/gamersover.github.io/blob/hexo/source/_ipynotebook_html/geo_examples.html" frameBorder="0" width=1080px height=4200px></iframe></details><h4 id="Map地图"><a href="#Map地图" class="headerlink" title="Map地图"></a>Map地图</h4><details><summary>展开</summary><iframe src="https://nbviewer.org/github/gamersover/gamersover.github.io/blob/hexo/source/_ipynotebook_html/map_examples.html" frameBorder="0" width=1080px height=3700px></iframe></details>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 可视化 </tag>
            
            <tag> pandasecharts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>诗篇：死有感</title>
      <link href="/2021/10/05/%E8%AF%97%E7%AF%87%EF%BC%9A%E6%AD%BB%E6%9C%89%E6%84%9F/"/>
      <url>/2021/10/05/%E8%AF%97%E7%AF%87%EF%BC%9A%E6%AD%BB%E6%9C%89%E6%84%9F/</url>
      
        <content type="html"><![CDATA[<blockquote class="blockquote-center">            <i class="fa fa-quote-left"></i>            <h3 id="死有感"><a href="#死有感" class="headerlink" title="死有感"></a>死有感</h3><p>深秋叶落谢花飞，几许忧愁几许悲；<br>好雨清风终散去，夕阳皓月暂轮回。<br>焉无万紫争奇艳，更有千红斗正魁；<br>待到新春初霁后，凭风会自百花归。</p>            <i class="fa fa-quote-right"></i>          </blockquote>]]></content>
      
      
      <categories>
          
          <category> 文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>诗篇：生有感</title>
      <link href="/2021/08/17/%E8%AF%97%E7%AF%87%EF%BC%9A%E7%94%9F%E6%9C%89%E6%84%9F/"/>
      <url>/2021/08/17/%E8%AF%97%E7%AF%87%EF%BC%9A%E7%94%9F%E6%9C%89%E6%84%9F/</url>
      
        <content type="html"><![CDATA[<blockquote class="blockquote-center">            <i class="fa fa-quote-left"></i>            <h3 id="生有感"><a href="#生有感" class="headerlink" title="生有感"></a>生有感</h3><p>魄净七重日，魂安一处沙；<br>平生趋富贵，暮世系荣华。<br>善水出坚木，春泥育毅花；<br>文章传万载，绿叶蔓青崖。</p>            <i class="fa fa-quote-right"></i>          </blockquote>]]></content>
      
      
      <categories>
          
          <category> 文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微积分在几何上的应用一：弧长，旋转曲面的面积与体积</title>
      <link href="/2021/08/11/%E5%BE%AE%E7%A7%AF%E5%88%86%E5%9C%A8%E5%87%A0%E4%BD%95%E4%B8%8A%E7%9A%84%E5%BA%94%E7%94%A81/"/>
      <url>/2021/08/11/%E5%BE%AE%E7%A7%AF%E5%88%86%E5%9C%A8%E5%87%A0%E4%BD%95%E4%B8%8A%E7%9A%84%E5%BA%94%E7%94%A81/</url>
      
        <content type="html"><![CDATA[<h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>设$\mathbb{R}^2$上的曲线$\Gamma$由极坐标方程</p><script type="math/tex; mode=display">    r = r(\theta) \quad (\boldsymbol{\alpha} \le \theta \le \boldsymbol{\beta})</script><p>表示，从而由此曲线和射线</p><script type="math/tex; mode=display">    \theta = \alpha, \quad \theta = \beta</script><p>围城的区域的面积$S$为</p><script type="math/tex; mode=display">    S = \frac{1}{2} \int_{\alpha}^{\beta} r^2 (\theta) \mathrm{d}(\theta)</script></blockquote><a id="more"></a><p>证：对$\theta$的变化范围$[\alpha, \beta]$作一分割</p><script type="math/tex; mode=display">    \alpha = \theta_1 < \theta_2 < \cdots < \theta_n = \beta</script><p>任取$\xi_i \in [\theta_{i-1}, \theta_{i}] (i=1,2,\cdots,n)$，从而夹在$\theta = \theta_{i-1}, \theta = \theta_i$与$r = r(\theta)$之间的区域的面积，在$\Delta \theta_i = \theta_{i} - \theta_{i-1}$很小时可表示为</p><script type="math/tex; mode=display">    \Delta S_i \approx \frac{1}{2} r^2(\theta_{i}) \Delta \theta_i</script><p>令$\max \limits_{1 \le i \le n} \Delta \theta_i \to 0$，得到</p><script type="math/tex; mode=display">    S = \frac{1}{2} \int_{\alpha}^{\beta} r^2 (\theta) \mathrm{d}(\theta)</script><p>Q.E.D.</p><h4 id="引理1"><a href="#引理1" class="headerlink" title="引理1"></a>引理1</h4><blockquote><p>设$x(t), y(t), z(t)$在$[\alpha, \beta]$上有连续的导函数，取$t$的一个分割</p><script type="math/tex; mode=display">    \pi: \alpha = t_0 < t_1 < \cdots < t_n = \beta</script><p>那么有</p><script type="math/tex; mode=display">    \lim \limits_{\Vert \pi \Vert \to 0} \sum_{i=1}^n \sqrt{(x^\prime(\xi_i))^2 + (y^\prime(\eta_i))^2 + (z^\prime(\zeta_i))^2} \Delta t_i= \int_{\alpha}^{\beta} \sqrt{(x^\prime(t))^2 + (y^\prime(t))^2 + (z^\prime(t))^2} \mathrm{d}t</script><p>其中$\xi_i, \eta_i, \zeta_i$分别为$x, y, z$函数的值点，即$\xi_i,\eta_i,\zeta_i \in [t_{i-1}, t_i]$。</p></blockquote><p>证： 由三角不等式</p><script type="math/tex; mode=display">    | \Vert \boldsymbol{a} \Vert - \Vert \boldsymbol{b} \Vert|  \le  \Vert \boldsymbol{a} - \boldsymbol{b} \Vert</script><p>得</p><script type="math/tex; mode=display">    \begin{aligned}    & \left| \sqrt {(x^\prime(\xi_i))^2 + (y^\prime(\xi_i))^2 + (z^\prime(\xi_i))^2} - \sqrt {(x^\prime(\xi_i))^2 + (y^\prime(\eta_i))^2 + (z^\prime(\zeta_i))^2} \right| \\    & \le \sqrt {(y^\prime(\xi_i) - y^\prime(\eta_i))^2 + (z^\prime(\xi_i) - z^\prime(\zeta_i))^2} \\    & \le |y^\prime(\xi_i) - y^\prime(\eta_i)| + |z^\prime(\xi_i) - z^\prime(\zeta_i)|    \end{aligned}</script><p>由于$y^\prime(t)$与$z^\prime(t)$在$[\alpha, \beta]$上连续，从而一致连续，因此对任意的$\varepsilon &gt; 0$，存在$\delta_1 &gt; 0$，当$\Vert \pi \Vert &lt; \delta_1$时，</p><script type="math/tex; mode=display">    \left\{         \begin{aligned}            |y^\prime(\xi_i) - y^\prime(\eta_i)| < \frac{\varepsilon}{4(\beta - \alpha)} \\            |z^\prime(\xi_i) - z^\prime(\zeta_i)| < \frac{\varepsilon}{4(\beta - \alpha)} \\        \end{aligned}    \right.</script><p>对$i=1,2,\cdots,n$都成立，令</p><script type="math/tex; mode=display">    \begin{aligned}    I = \int_{\alpha}^{\beta} \sqrt{(x^\prime(t))^2 + (y^\prime(t))^2 + (z^\prime(t))^2} \mathrm{d}t \\    S = \sum_{i=1}^n \sqrt {(x^\prime(\xi_i))^2 + (y^\prime(\xi_i))^2 + (z^\prime(\xi_i))^2} \Delta t_i    \end{aligned}</script><p>由积分的定义可知，对上述$\varepsilon$，存在$\delta_2 &gt; 0$，当$\Vert \pi \Vert \le \delta_2$时，有</p><script type="math/tex; mode=display">    |S - I| < \frac{\varepsilon}{2}</script><p>而不论$\xi_i \in [t_{i-1}, t_i] (i=1,2,\cdots,n)$如何选取，当$\Vert \pi \Vert &lt; \min(\delta_1, \delta_2)$时，有</p><script type="math/tex; mode=display">    \begin{aligned}    & |\sum_{i=1}^n \sqrt {(x^\prime(\xi_i))^2 + (y^\prime(\eta_i))^2 + (z^\prime(\zeta_i))^2} \Delta t_i- I| \\    & \le |\sum_{i=1}^n \sqrt {(x^\prime(\xi_i))^2 + (y^\prime(\eta_i))^2 + (z^\prime(\zeta_i))^2} \Delta t_i - S| + |S - I| \\    & < \sum_{i=1}^n (|y^\prime(\xi_i) - y^\prime(\eta_i)| + |z^\prime(\xi_i) - z^\prime(\zeta_i)|) \Delta t_i + \frac{\varepsilon}{2} \\    & < \left( \frac{\varepsilon}{4(\beta - \alpha)}  + \frac{\varepsilon}{4(\beta - \alpha)} \right) \sum_{i=1}^n \Delta t_i + \frac{\varepsilon}{2} \\    & = \varepsilon    \end{aligned}</script><p>Q.E.D.</p><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>设$\mathbb{R}^3$的曲线$\Gamma$的参数方程为</p><script type="math/tex; mode=display">    \left\{        \begin{aligned}            x = x(t), \\            y = y(t), \\            z = z(t),        \end{aligned}    \right.    \quad (\alpha \le t \le \beta)</script><p>或用向量形式表示为</p><script type="math/tex; mode=display">    \boldsymbol{r} = \boldsymbol{r}(t) \quad (\alpha \le t \le \beta)</script><p>其中$x(t), y(t), z(t)$在$[\alpha, \beta]$上有连续的导数，点$A = \boldsymbol{r}(\alpha)$与$B = \boldsymbol{r}(\beta)$分别是$\Gamma$的起点与终点。则该曲线的弧长公式为</p><script type="math/tex; mode=display">    s(\Gamma) = \int_{\alpha}^{\beta} \sqrt{(x^\prime(t))^2 + (y^\prime(t))^2 + (z^\prime(t))^2}</script></blockquote><p>证：沿$A$到$B$的方向在$\Gamma$上取$n+1$个点：</p><script type="math/tex; mode=display">    A = A_0, A_1, A_2, \cdots, A_n = B</script><p>并把这$n$条线段之和$\sum_{i=1}^n |A_{i-1}A_i|$作为$\Gamma$弧长的一个近似值，可知当分割点越来越细时，近似值的极限就是弧长。设点$A_i$对应着参数值$t_i (i=0,1,2,\cdots,n)$，则</p><script type="math/tex; mode=display">    \alpha = t_0 < t_1 < t_2 < \cdots < t_n = \beta</script><p>记为分割$\pi$，从而</p><script type="math/tex; mode=display">    \begin{aligned}    |A_{i-1}A_i| &= \Vert \boldsymbol{r}(t_i) - \boldsymbol{r}(t_{i-1}) \Vert \\    &= \sqrt {((x(t_i) - x(t_{i-1}))^2 + (y(t_i) - y(t_{i-1}))^2 + (z(t_i) - z(t_{i-1}))^2)} \\    &= \sqrt {(x^\prime(\xi_i))^2 + (y^\prime(\eta_i))^2 + (z^\prime(\zeta_i))^2} \Delta t_i    \end{aligned}</script><p>其中$\xi_i,\eta_i, \zeta_i \in (t_{i-1}, t_i)$，又由于$x^\prime, y^\prime, z^\prime$都是连续函数，所以存在一个常数$K$，使得</p><script type="math/tex; mode=display">    |A_{i-1}A_i| \le K \Delta t_i \le K \Vert \pi \Vert</script><p>所以</p><script type="math/tex; mode=display">    \max \limits_{1 \le i \le n} | A_{i-1}A_i | \le K \Vert \pi \Vert</script><p>这表明，将分割$\pi$无限加细，对应的曲线$\Gamma$上的分割也会无限加细，从而$\Gamma$的弧长为</p><script type="math/tex; mode=display">    \lim \limits_{\Vert \pi \Vert \to 0} \sum_{i=1}^n \sqrt{(x^\prime(\xi_i))^2 + (y^\prime(\eta_i))^2 + (z^\prime(\zeta_i))^2}</script><p>再由<a href="#引理1">引理1</a>可知，弧长</p><script type="math/tex; mode=display">    S(\Gamma) = \int_{\alpha}^{\beta} \sqrt {(x^\prime(t))^2 + (y^\prime(t))^2 + (z^\prime(t))^2} \mathrm{d} t</script><p>Q.E.D.</p><h4 id="定理3"><a href="#定理3" class="headerlink" title="定理3"></a>定理3</h4><blockquote><p>（1）设$y = f(x) \ge 0$是区间$[a,b]$上的一条连续曲线，让这条曲线绕$x$轴旋转一周，得到的旋转体的体积公式为</p><script type="math/tex; mode=display">    V = \pi \int_a^b f^2(x) \mathrm{d} x</script><p>（2）设曲线$\Gamma$</p><script type="math/tex; mode=display">    x= x(t), y = y(t) \quad (\alpha \le t \le \beta)</script><p>是一条在上半平面不自交的$C^1$类曲线，让这条曲线绕$Ox$轴旋转一周，生成的旋转曲面的面积为</p><script type="math/tex; mode=display">    S = 2\pi \int_{\alpha}^{\beta} y(t) \sqrt {(x^\prime(t))^2 + (y^\prime(t))^2} \mathrm{d} t</script></blockquote><p>证：（1）作区间$[a,b]$的一个分割</p><script type="math/tex; mode=display">    \pi: a = x_0 < x_1 < \cdots < x_n = b</script><p>将旋转体介于平面$x = x_{k-1}, x= x_{k}$之间的体积记为$V_k$，任取$\xi_k \in [x_{k-1}, x_k]$，则</p><script type="math/tex; mode=display">    V_k \approx \pi f^2(\xi_k) \Delta x_k</script><p>从而</p><script type="math/tex; mode=display">    V = \lim \limits_{\Vert \pi \Vert \to 0} \sum_{k=1}^n \pi f^2(\xi_k) \Delta x_k = \pi \int_a^b f^2(x) \mathrm{d} x</script><p>（2）在$\Gamma$上取$n+1$个点</p><script type="math/tex; mode=display">    A_0,A_1,\cdots,A_n</script><p>从而对应的参数区间$[\alpha, \beta]$也有分点</p><script type="math/tex; mode=display">    \alpha = t_0 < t_1 < \cdots < t_n = \beta</script><p>这时曲线上的第$i$段$A_{i-1}A_i$的弧长可近似为</p><script type="math/tex; mode=display">    \sqrt {(x^\prime(\xi_i))^2 + (y^\prime(\eta_i))^2} \Delta t_i</script><p>其中$\xi_i, \eta_i \in [t_{i-1}, t_i]$，由这段曲线弧旋转而成的曲面面积可表示为</p><script type="math/tex; mode=display">    \Delta S_i \approx 2 \pi y(\zeta_i) \sqrt {(x^\prime(\xi_i))^2 + (y^\prime(\eta_i))^2} \Delta t_i</script><p>其中$\zeta_i \in [t_{i-1}, t_i]$，所以旋转曲面的总面积可表示为</p><script type="math/tex; mode=display">    S \approx \sum_{i=1}^n 2\pi y(\zeta_i) \sqrt {(x^\prime(\xi_i))^2 + (y^\prime(\eta_i))^2} \Delta t_i</script><p>当$\Vert \pi \Vert \to 0$时，利用类似<a href="#引理1">引理1</a>的证法，可得</p><script type="math/tex; mode=display">    S = \lim \limits_{\Vert \pi \Vert \to 0} \sum_{i=1}^n 2\pi y(\zeta_i) \sqrt {(x^\prime(\xi_i))^2 + (y^\prime(\eta_i))^2} \Delta t_i = 2\pi \int_{\alpha}^{\beta} y(t) \sqrt {(x^\prime(t))^2 + (y^\prime(t))^2} \mathrm{d} t</script><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数导数 </tag>
            
            <tag> 函数积分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微积分在几何上的应用二：曲线的切线与曲面的切平面</title>
      <link href="/2021/08/11/%E5%BE%AE%E7%A7%AF%E5%88%86%E5%9C%A8%E5%87%A0%E4%BD%95%E4%B8%8A%E7%9A%84%E5%BA%94%E7%94%A82/"/>
      <url>/2021/08/11/%E5%BE%AE%E7%A7%AF%E5%88%86%E5%9C%A8%E5%87%A0%E4%BD%95%E4%B8%8A%E7%9A%84%E5%BA%94%E7%94%A82/</url>
      
        <content type="html"><![CDATA[<h4 id="定义1"><a href="#定义1" class="headerlink" title="定义1"></a>定义1</h4><blockquote><p>设空间曲线段$\Gamma$有参数方程</p><script type="math/tex; mode=display">    \left\{         \begin{aligned}            x = x(t), \\            y = y(t), \\            z = z(t)        \end{aligned}    \right.    \quad (\alpha \le t \le \beta)</script><p>或用向量形式表示为</p><script type="math/tex; mode=display">    \boldsymbol{r} = \boldsymbol{r}(t) \quad (\alpha \le t \le \beta)</script><p>其中$x(t),y(t),z(t)$都在区间$I = [\alpha, \beta]$上连续可导，且满足条件</p><script type="math/tex; mode=display">    (x^\prime(t))^2 + (y^\prime(t))^2 + (z^\prime(t))^2 \ne 0 \quad (\alpha \le t \le \beta)</script><p>称满足这些条件的曲线为光滑曲线。</p></blockquote><a id="more"></a><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>设光滑曲线$\Gamma$上有一点$P_0(x(t_0), y(t_0), z(t_0))$，则曲线$\Gamma$在$P_0$处的切线方程为</p><script type="math/tex; mode=display">    \frac{x - x(t_0)}{x^\prime(t_0)} = \frac{y - y(t_0)}{y^(t_0)} = \frac{z - z(t_0)}{z^\prime(t_0))}</script></blockquote><p>证：切线方向的一个向量为</p><script type="math/tex; mode=display">    \boldsymbol{r}^\prime(t) = \lim \limits_{t \to 0} \frac{\boldsymbol{r}(t) - \boldsymbol{r}(t_0)}{t - t_0} = (x^\prime(t_0), y^\prime(t_0), z^\prime(t_0))</script><p>称为曲线$\Gamma$在点$P_0$出的切向量，又由于切线过点$P_0$，所以切线方程为</p><script type="math/tex; mode=display">    \frac{x - x(t_0)}{x^\prime(t_0)} = \frac{y - y(t_0)}{y^(t_0)} = \frac{z - z(t_0)}{z^\prime(t_0))}</script><p>Q.E.D.</p><h4 id="定义2"><a href="#定义2" class="headerlink" title="定义2"></a>定义2</h4><blockquote><p>设$\Gamma: \boldsymbol{r} = \boldsymbol{r}(t)(\alpha \le t \le \beta)$是一段光滑曲线，$\boldsymbol{r}^\prime(t_0)$与$\boldsymbol{r}^\prime(t_0 + \Delta t)$之间的夹角记为$\Delta \theta$，$\boldsymbol{r}(t_0)$与$\boldsymbol{r}(t_0 + \Delta t)$之间的弧长记为$\Delta s$，如果$\lim \limits_{\Delta t \to 0} |\Delta \theta / \Delta s|$存在，就称此极限为$\Gamma$在$\boldsymbol{r}(t_0)$处的曲率，记为</p><script type="math/tex; mode=display">    k(t_0) = \lim \limits_{\Delta t \to 0} \frac{\Delta \theta}{\Delta s}</script></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数导数 </tag>
            
            <tag> 切线 </tag>
            
            <tag> 切平面 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数积分十二：$n$重积分</title>
      <link href="/2021/08/02/%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%8612/"/>
      <url>/2021/08/02/%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%8612/</url>
      
        <content type="html"><![CDATA[<h4 id="定义1"><a href="#定义1" class="headerlink" title="定义1"></a>定义1</h4><blockquote><p>定义$f: I \to \mathbb{R}$，其中$I$是$\mathbb{R}^n$中的一个闭长方体，即$I = I_1 \times I_2 \times \cdots I_n$，其中$i_i=[a_i, b_i] (i=1,2,\cdots,n)$是$\mathbb{R}$中的有界闭区间。$I$的$n$维体积定义为</p><script type="math/tex; mode=display">    \mu(I) = \prod_{i=1}^n (b_i - a_i)</script><p>用平行于各个坐标平面的$n$组超平面对$I$进行划分，得到有限多个小的子长方体，不妨设为$k$个，这称为$I$的一个分割$\pi$，这时可以定义Riemann和</p><script type="math/tex; mode=display">    \sum_{i=1}^k f(\boldsymbol{\xi_i}) \mu(I_i)</script><p>其中$\boldsymbol{\xi_i} \in I_i$，$\mu(I_i)$表示子长方体$I_i$的体积。</p></blockquote><a id="more"></a><p>有了定义1，仿照二重积分，三重积分的推理方法，可以定义和证明相似的定理。比如可以记$\Vert \pi \Vert$为这些子长方体的对角线的长度的最大值，若$\Vert \pi \Vert \to 0$时，上式的Riemann和极限存在且不依赖于子长方体中值点的选取，则称该极限为$f$在$I$上的积分，记作</p><script type="math/tex; mode=display">    \idotsint \limits_I f(x_1, x_2, \cdots, x_n) \mathrm{d} x_1 \mathrm{d} x_2 \cdots \mathrm{d} x_n</script><p>也记为</p><script type="math/tex; mode=display">    \int_I f \mathrm{d} \mu</script><p>这时称$f$在$I$上可积，而且若$f$在$I$可积，那么$f$在$I$上必有界。包括上和，下和以及可积性的充分必要条件都与前面二重积分的结论一样，以及$I$上的$n$重积分计算，也可以化为累次积分来进行，这时共有$n!$中不同的顺序。关于$n$重积分的Lebesgue定理，也可以引入零测集与零体积集的概念，可以证明：一个有界点集有体积的充分必要条件是它的边界是零体积集。同理，$n$重积分也可以化为一个$n-1$重积分和一个定积分来计算。</p><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>设$V \subset \mathbb{R}^n$是有体积的有界闭集，有界函数$f: V \to \mathbb{R}$连续，<br/><br>（1）如果<br>$V = \{ \boldsymbol{x} = (x_1, x_2,\cdots,x_n) \in \mathbb{R}^n \}$，当$(x_1, x_2, \cdots, x_{n-1}） \in D \subset \mathbb{R}^{n-1}$时，</p><script type="math/tex; mode=display">    \varphi_1(x_1, x_2, \cdots, x_{n-1}) \le x_n \le \varphi_2(x_1, x_2, \cdots,x_{n-1})</script><p>其中$\varphi_1, \varphi_2$是$D$上的连续函数，那么</p><script type="math/tex; mode=display">    \int_V f \mathrm{d} \mu = \idotsint \limits_D \mathrm{d} x_1 \mathrm{d} x_2 \mathrm{d} x_{n-1} \int_{\varphi_1(x_1, x_2, \cdots, x_{n-1})}^{\varphi_2(x_1, x_2, \cdots, x_{n-1})} f(x_1, x_2,\cdots,x_{n-1}, x_n) \mathrm{d} x_n</script><p>（2）如果<br>$V = \{ \boldsymbol{x} = (x_1, x_2, \cdots, x_{n}) \in \mathbb{R}^n\}$，当$x_n \in [a, b]$时, </p><script type="math/tex; mode=display">    (x_1,x_2,\cdots, x_{n-1}) \in D_{x_n} \in \mathbb{R}^{n-1}</script><p>那么</p><script type="math/tex; mode=display">    \int_V f \mathrm{d} \mu = \int_a^b \mathrm{d} x_n \idotsint \limits_{D_{x_n}} f(x_1, x_2,\cdots,x_n) \mathrm{d} x_1 \mathrm{d} x_2 \cdots \mathrm{d} x_{n-1}</script><p>（3）当然，也可把$n$重积分化成一个$k (1 \le k &lt; n)$重积分与一个$n-k$重积分来计算，即当$(x_{k+1}, \cdots, x_n) \in D_1 \subset \mathbb{R}^{n-k}$时，</p><script type="math/tex; mode=display">    (x_1, x_2, \cdots, x_{k}) \in D_2 \subset \mathbb{R}^{k}</script><p>那么</p><script type="math/tex; mode=display">    \int_V f \mathrm{d} \mu = \overbrace{\idotsint \limits_{D_1}}^{n-k \text{个}} \mathrm{d} x_{k+1} \cdots \mathrm{d} x_n  \overbrace{\idotsint \limits_{D_2}}^{k \text{个}} f(x_1, x_2,\cdots,x_n) \mathrm{d} x_{1} \cdots \mathrm{d} x_k</script></blockquote><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>设$\Omega$是$\mathbb{R}^n$中的开集，$\Delta \subset \Omega$有体积，映射$\boldsymbol{\varphi}: x_i = x_i(u_1,u_2,\cdots,u_n) (i=1,2,\cdots,n)$在$\Delta$上是正则的，那么对$\boldsymbol{\varphi} (\Delta)$上的连续函数$\boldsymbol{F}$，有</p><script type="math/tex; mode=display">    \idotsint \limits_{\boldsymbol{\varphi}(\Delta)} \boldsymbol{F}(x_1, x_2, \cdots,x_n) \mathrm{d} x_1 \mathrm{d} x_2 \cdots \mathrm{d} x_n = \idotsint \limits_{\Delta} \boldsymbol{F}(x_1(u_1,\cdots,u_n), \cdots, x_n(u_1,\cdots,u_n)) \left|         \frac{\partial (x_1, \cdots,x_n)}{\partial (u_1, \cdots, u_n)}    \right| \mathrm{d} u_1 \cdots \mathrm{d} u_n</script></blockquote><h4 id="定理3"><a href="#定理3" class="headerlink" title="定理3"></a>定理3</h4><blockquote><p>令映射</p><script type="math/tex; mode=display">    \left\{         \begin{matrix}        x_1 = & r \cos \theta_1,  \\        x_2 = & r \sin \theta_1 \cos \theta_2, \\        x_3 = & r \sin \theta_1 \sin \theta_2 \cos \theta_2, \\         \cdots\\        x_{n-1} = & r \sin \theta_1 \sin \theta_2 \cdots r \sin \theta_{n-2} \cos \theta_{n-1} \\        x_n = & r \sin \theta_1 \sin \theta_2 \cdots \sin \theta_{n-2} \sin \theta_{n-1}        \end{matrix}    \right.</script><p>称为$n$维球坐标变换，改变换将有界集$\Delta$映射到$V$，则</p><script type="math/tex; mode=display">\int_V F(x_1,\cdots, x_n) \mathrm{d} \mu = \idotsint \limits_{\Delta} \boldsymbol{F}(\theta_1, \cdots, \theta_n) r^{n-1} \sin^{n-2} \theta_1 \sin ^{n-3} \theta_2 \cdots \sin \theta_{n-2} \mathrm{d} \theta_1 \cdots \mathrm{d} \theta_n</script></blockquote><p>证：关键需要证明</p><script type="math/tex; mode=display">    \frac{\partial (x_1, x_2, \cdots, x_n)}{\partial (r, \theta_1, \cdots, \theta_{n-1})} = r^{n-1} \sin^{n-2} \theta_1 \sin ^{n-3} \theta_2 \cdots \sin \theta_{n-2}</script><p>这时考虑方程组</p><script type="math/tex; mode=display">    \left\{        \begin{matrix}         F_1 = & r^2 - (x_1^2 + x_2^2 + \cdots + x_n^2) = 0 \\        F_2 = & r^2 \sin^2 \theta_1 - (x_2^2 + \cdots + x_n^2) = 0 \\        F_3 = & r^2 \sin^2 \theta_1 \sin^2 \theta_2 - (x_3^2 + \cdots + x_n^2) = 0 \\        \cdots \\        F_n = & r^2 \sin^2 \theta_1 \cdots \sin^ \theta_{n-1} - x_n^2 = 0        \end{matrix}    \right. \tag {1}</script><p>令$\boldsymbol{u} = (r, \theta_1, \cdots, \theta_{n-1}), \boldsymbol{x} = (x_1, x_2, \cdots, x_n)$，则根据<a href="https://gamersover.github.io/2021/04/13/函数导数10#定理3：隐映射定理" target="_blank" rel="noopener">隐映射定理</a>可知</p><script type="math/tex; mode=display">    \left(\begin{matrix}    \frac{\partial r}{\partial \theta_1} & \cdots & \frac{\partial x_1}{\partial \theta_{n-1}} \\    \vdots & & \vdots \\    \frac{x_n}{\partial r} & \cdots & \frac{x_n}{\partial \theta_{n-1}}    \end{matrix} \right) = - (J_{\boldsymbol{x}}F(\boldsymbol{x}, \boldsymbol{u}))^{-1} J_{\boldsymbol{u}}F(\boldsymbol{x}, \boldsymbol{u})</script><p>两边取行列式即得</p><script type="math/tex; mode=display">    \frac{\partial (x_1, x_2, \cdots, x_n)}{\partial (r, \theta_1, \cdots, \theta_{n-1})} = (-1)^n \frac{\det J_{\boldsymbol{u}}F(\boldsymbol{x}, \boldsymbol{u})}{\det J_{x}F(\boldsymbol{x}, \boldsymbol{u})}</script><p>通过方程组(1)可以求出</p><script type="math/tex; mode=display">    \begin{aligned}    &\det J_{\boldsymbol{u}}F(\boldsymbol{x}, \boldsymbol{u}) = 2^n r^{2n-1} \sin^{2n-3} \theta_1 \cos \theta_1 \sin^{2n-5} \theta_2 \cos \theta_2 \cdots \sin \theta_{n-1} \cos \theta_{n-1} \\    &\det J_{\boldsymbol{x}} F(\boldsymbol{x}, \boldsymbol{u}) = (-1)^n 2^n r^n \sin^{n-1} \theta_1  \cos \theta_1 \sin^{n-2} \theta_2 \cos \theta_2 \cdots \sin \theta_{n-1} \cos \theta_{n-1}    \end{aligned}</script><p>所以</p><script type="math/tex; mode=display"> \frac{\partial (x_1, x_2, \cdots, x_n)}{\partial (r, \theta_1, \cdots, \theta_{n-1})} = r^{n-1} \sin^{n-2} \theta_1 \sin ^{n-3} \theta_2 \cdots \sin \theta_{n-2}</script><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数积分 </tag>
            
            <tag> n重积分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数积分十一：三重积分</title>
      <link href="/2021/07/29/%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%8611/"/>
      <url>/2021/07/29/%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%8611/</url>
      
        <content type="html"><![CDATA[<h4 id="定义1"><a href="#定义1" class="headerlink" title="定义1"></a>定义1</h4><blockquote><p>定义$f: I \to \mathbb{R}$，其中$I$是$\mathbb{R}^3$中的一个有限长方体，即$I = I_1 \times I_2 \times I_3$，其中$i_i=[a_i, b_i] (i=1,2,3)$是$\mathbb{R}$中的有界闭区间。长方体$I$的体积定义为</p><script type="math/tex; mode=display">    \mu(I) = (b_1 - a_1)(b_2 - a_2)(b_3 - a_3)</script><p>用平行于三个坐标平面的三组平面对$I$进行划分，得到有限多个小的长方体，不妨设为$k$个，这称为$I$的一个分割$\pi$，这时可以定义Riemann和</p><script type="math/tex; mode=display">    \sum_{i=1}^k f(\boldsymbol{\xi_i}) \mu(I_i)</script><p>其中$\boldsymbol{\xi_i} \in I_i$，$\mu(I_i)$表示子长方体$I_i$的体积。</p></blockquote><a id="more"></a><h4 id="定义2"><a href="#定义2" class="headerlink" title="定义2"></a>定义2</h4><blockquote><p>记$\Vert \pi \Vert$为小长方体对角线的最大者，称为分割$\Vert \pi \Vert$的宽度，在$\Vert \pi \Vert \to 0$对<a href="#定义1">定义1</a>中的Riemann和取极限，如果该极限的存在性和数值不依赖与小长方体中值点的选择，则这个极限值就称为$f$在$I$上的积分，记作</p><script type="math/tex; mode=display">    \iiint \nolimits_I f(x,y,z) \mathrm{d} x \mathrm{d} y \mathrm{d} z</script><p>或</p><script type="math/tex; mode=display">    \int_I f \mathrm{d} \mu</script><p>仿照二重积分的方法，可以依次定义上和，下和，并且可以得到关于可积充分必要条件的相同结论；三重积分的累次积分也同样可以证明。</p></blockquote><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>如果$f$在$I$上可积，那么$f$必在$I$上有界。</p></blockquote><p>证：与<a href="https://gamersover.github.io/2021/05/14/函数积分3#定理1" target="_blank" rel="noopener">函数积分三的定理1</a>证明方法一样。</p><p>Q.E.D.</p><h4 id="定义3"><a href="#定义3" class="headerlink" title="定义3"></a>定义3</h4><blockquote><p>点集$B \subset \mathbb{R}^3$称为零测集（零面积集），是指对任何的$\varepsilon &gt; 0$，存在可数（有限）个长方体$J_i$，使得</p><script type="math/tex; mode=display">    \bigcup_{i} J_i \subset B, \quad \sum_{i} \mu(J_i) < \varepsilon</script></blockquote><h4 id="定理2：Lebesgue"><a href="#定理2：Lebesgue" class="headerlink" title="定理2：Lebesgue"></a>定理2：Lebesgue</h4><blockquote><p>设长方体$I \subset \mathbb{R}^3, f \to \mathbb{R}$，则积分$\displaystyle \int_I f \mathrm{d} \mu$存在的充分必要条件是$f$在$I$上的间断点集为零测集。</p></blockquote><p>证：与<a href="https://gamersover.github.io/2021/06/29/函数积分8#定理7：Lebesgue" target="_blank" rel="noopener">函数积分八的定理7</a>证明方法一致。</p><p>Q.E.D</p><h4 id="定义4"><a href="#定义4" class="headerlink" title="定义4"></a>定义4</h4><blockquote><p>设有界点集$B \subset \mathbb{R}^3, f: B \to \mathbb{R}$，函数$f$在$B$上的积分定义与<a href="https://gamersover.github.io/2021/07/13/函数积分9#定义2" target="_blank" rel="noopener">函数积分九的定义2</a>完全一致，也记为</p><script type="math/tex; mode=display">    \int_B f \mathrm{d} \mu</script><p>同样可以定义$B$的面积为</p><script type="math/tex; mode=display">    \mu(B) = \int_B 1 \mathrm{d} \mu</script><p>定义一样，相关结论也与二重积分一样。</p></blockquote><h4 id="定理3"><a href="#定理3" class="headerlink" title="定理3"></a>定理3</h4><blockquote><p>$\mathbb{R}^3$上的有界点集$B$为零体积集当且仅当$\mu(B) = 0$</p></blockquote><p>证：与<a href="https://gamersover.github.io/2021/07/13/函数积分9#定理5" target="_blank" rel="noopener">函数积分九的定理5</a>的证明方法一致。</p><p>Q.E.D.</p><h4 id="定理4"><a href="#定理4" class="headerlink" title="定理4"></a>定理4</h4><blockquote><p>设有界集$B \subset \mathbb{R}^3$，则$B$有面积当且仅当$B$的边界$\partial B$是一零面积集。</p></blockquote><p>证：与<a href="https://gamersover.github.io/2021/07/13/函数积分9#定理6" target="_blank" rel="noopener">函数积分九的定理6</a>的证明方法一致。</p><p>Q.E.D.</p><h4 id="定理5"><a href="#定理5" class="headerlink" title="定理5"></a>定理5</h4><blockquote><p>设有界集$V \subset \mathbb{R}^3$有体积，有界函数$f: V \to \mathbb{R}$连续 <br/><br>（1）设$V$在$xy$平面上的垂直投影为$D$，且当$(x, y) \in D$时，过这一点且垂直于$D$的直线与$V$交成一个区间$[\varphi_1(x, y), \varphi_2(x, y)]$，那么</p><script type="math/tex; mode=display">    \int_V f \mathrm{d} \mu = \iint_D \mathrm{d}x \mathrm{d}y \int_{\varphi_1(x, y)}^{\varphi_2(x, y)} f(x, y, z) \mathrm{z}</script><p>（2）设$V$在$z$轴上的垂直投影为区间$J$，且当$z \in J$时，通过点$(0, 0, z)$又垂直于$z$轴的平面同$V$交成的图形在$xy$平面上的垂直投影是易有面积的点集$D_z$，那么</p><script type="math/tex; mode=display">    \int_V f \mathrm{d} \mu = \int_J \mathrm{d} z \iint_{D_z} f(x, y, z) \mathrm{d}x \mathrm{d} y</script></blockquote><p>证：可知$f$在$V$上可积，作$I = I_1 \times I_2 \times I_3 \supset V$，其中$I_1, I_2, I_3$都是$\mathbb{R}$中的区间，令</p><script type="math/tex; mode=display">    f_V(\boldsymbol{p}) = \left\{ \begin{aligned}    & f(\boldsymbol{p}), \quad & \boldsymbol{p} \in V \\    & 0, \quad & \boldsymbol{p} \notin V    \end{aligned}    \right.</script><p>那么</p><script type="math/tex; mode=display">    \int_V f \mathrm{d} \mu = \int_I f_V \mathrm{d} \mu</script><p>（1）当$(x, y) \in D(x, y)$时，关于$z$的函数$f(x, y, z)$在区间$[\varphi_1(x, y), \varphi_2(x, y)]$上连续，从而是可积的，所以有</p><script type="math/tex; mode=display">    \int_{I_3} f_V (x, y, z) \mathrm{d} z = \int_{\varphi_1(x, y)}^{\varphi_2(x, y)} f_V(x, y, z) \mathrm{d} z</script><p>而当$(x,y) \notin D$时，$f_V(x, y, z) = 0$，这时$\displaystyle \int_{I_3} f_V(x, y, z) = 0$，所以</p><script type="math/tex; mode=display">    \int_I f \mathrm{d} \mu = \int_I f_V \mathrm{d} \mu = \iint \limits_{I_1 \times I_2} \mathrm{d} x \mathrm{d} y \int_{I_3} f_V (x, y, z) \mathrm{d} z = \iint \limits_{I_1 \times I_2} \mathrm{d} x \mathrm{d} y \int_{\varphi_1(x, y)}^{\varphi_2(x, y)} f(x, y, z) \mathrm{d} z</script><p>（2）当$z \in J$时，$D_z \in I_1 \times I_2$且$\mu(\partial D_z) = 0$，而关于$x,y$的函数$f(x,y,z)$在$D_z$上有界连续，所以$f(x,y,z)$在$D_z$上可积，所以有</p><script type="math/tex; mode=display">    \iint \limits_{I_1 \times I_2} f_V(x, y, z) \mathrm{d} x \mathrm{d} y = \iint \limits_{D_z} f(x, y, z) \mathrm{d} x \mathrm{d} y</script><p>当$z \notin J$时，$f_V(x, y, z) = 0$，此时</p><script type="math/tex; mode=display">    \iint \limits_{I_1 \times I_2} f_V(x, y, z) \mathrm{d} x \mathrm{d} y = 0</script><p>从而</p><script type="math/tex; mode=display">    \int_V f \mathrm{d} \mu = \int_I f_V \mathrm{d} \mu = \int_{I_3} \mathrm{d}z \iint \limits_{I_1 \times I_2} f_V(x, y, z) \mathrm{d} x \mathrm{d} y = \int_{I_3} \mathrm{d}z \iint \limits_{D_z} f(x, y, z) \mathrm{d} x \mathrm{d} y</script><p>Q.E.D.</p><h4 id="定理6"><a href="#定理6" class="headerlink" title="定理6"></a>定理6</h4><blockquote><p>设有界的闭区域$D \subset \mathbb{R}^3$有体积，函数$F: D \to \mathbb{R}$连续，映射</p><script type="math/tex; mode=display">    \boldsymbol{\varphi}: \left\{        \begin{aligned}            x = x(u, v, w), \\            y = y(u, v, w), \\            z = z(u, v, w)        \end{aligned}    \right.    \quad ((u, v, w) \in \Delta)</script><p>是从$\Delta$到$D$上的正则映射，即$\boldsymbol{\varphi}$将$\Delta$一对一地映射成$D$，$\boldsymbol{\varphi} \in C^1(\Delta)$，并且在$\Delta$上，</p><script type="math/tex; mode=display">    \det J\boldsymbol{\varphi} = \frac{\partial(x, y, z)}{\partial(u, v, w)} = \left| \begin{matrix}    \frac{\partial x}{\partial u} \quad \frac{\partial x}{\partial v} \quad \frac{\partial x}{\partial w} \\    \frac{\partial y}{\partial u} \quad \frac{\partial y}{\partial v} \quad \frac{\partial y}{\partial w} \\    \frac{\partial z}{\partial u} \quad \frac{\partial z}{\partial v} \quad \frac{\partial z}{\partial w}    \end{matrix} \right| \ne 0</script><p>则有</p><script type="math/tex; mode=display">    \int_{\boldsymbol{\varphi}(\Delta)} F \mathrm{d} \mu = \int_{\Delta} F \circ \boldsymbol{\varphi} |\det J \boldsymbol{\varphi}| \mathrm{d} \mu</script></blockquote><p>证：与<a href="https://gamersover.github.io/2021/07/19/函数积分10/#定理6" target="_blank" rel="noopener">函数积分十的定理6</a>证明几乎一样。</p><p>Q.E.D.</p><h4 id="定理7：球坐标换元公式"><a href="#定理7：球坐标换元公式" class="headerlink" title="定理7：球坐标换元公式"></a>定理7：球坐标换元公式</h4><blockquote><p>令映射</p><script type="math/tex; mode=display">    \boldsymbol{\varphi} = \left\{         \begin{matrix}        x &= &r \sin \theta \cos \varphi,  \\        y &= &r \sin \theta \sin \varphi, \\        z &=& r \cos \theta        \end{matrix}    \right.    \quad (r, \theta, \varphi) \in \Delta</script><p>则</p><script type="math/tex; mode=display">    \int_{\boldsymbol{\varphi}(\Delta)} F \mathrm{d} \mu = \iiint \limits_{\Delta} F \circ \boldsymbol{\varphi} r^2 \sin \theta \mathrm{d} r \mathrm{d} \theta \mathrm{d} \varphi</script></blockquote><p>证： 由于</p><script type="math/tex; mode=display">    \frac{\partial(x, y, z)}{\partial(r, \theta, \varphi)} = r^2 \sin \theta</script><p>再由<a href="#定理6">定理6</a>可证。</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数积分 </tag>
            
            <tag> 三重积分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数积分十：二重积分的计算</title>
      <link href="/2021/07/19/%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%8610/"/>
      <url>/2021/07/19/%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%8610/</url>
      
        <content type="html"><![CDATA[<h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>如果$f$在$I = [a,b] \times [c,d]$上可积，那么单变量函数$\displaystyle \varphi(x) = \underline \int_c^d f(x, y) \mathrm{d} y$和$\displaystyle \psi(x) = \overline \int_c^d f(x, y) \mathrm{d} y$在区间$[a,b]$上可积，且</p><script type="math/tex; mode=display">    \int_I f \mathrm{d} \sigma = \int_a^b \varphi(x) \mathrm{d} x = \int_a^b \psi(x) \mathrm{d} x</script></blockquote><a id="more"></a><p>证：分别对$[a,b]$和$[c,d]$的分割</p><script type="math/tex; mode=display">    \begin{aligned}    \pi_x: a = x_0 < x_1 < \cdots < x_n = b, \\    \pi_y: c = y_0 < y_1 < \cdots < y_m = d,    \end{aligned}</script><p>令</p><script type="math/tex; mode=display">    \begin{aligned}        & I_i = [x_{i-1}, x_i] \quad (i=1,2,\cdots,n) \\        & J_j = [y_{j-1}, y_j] \quad (j=1,2,\cdots,m)    \end{aligned}</script><p>则子矩形</p><script type="math/tex; mode=display">    I_i \times I_j \quad (i=1,2,\cdots,n; j=1,2,\cdots,m)</script><p>形成了矩形$I$的分割$\pi = \pi_x \times \pi_y$。令$\displaystyle A = \int_I f \mathrm{d} \sigma$，由积分存在的定义可知，对任意的$\varepsilon &gt; 0$，存在$\delta &gt; 0$，当$I$的分割$\pi$满足$\Vert \pi \Vert &lt; \delta$时，必有</p><script type="math/tex; mode=display">    A - \varepsilon < \sum_{i=1}^n \sum_{j=1}^m f(\xi_i, \eta_j) \Delta x_i \Delta y_j < A + \varepsilon</script><p>其中$\xi_i \in I_i, \eta_j \in J_j (i=1,2,\cdots,n;j=1,2,\cdots,m)$，现取分割$\pi_x, \pi_y$满足$\Vert \pi_x \Vert &lt; \delta / \sqrt 2, \Vert \pi_y \Vert &lt; \delta / \sqrt 2$，那么$\Vert \pi \Vert &lt; \delta$，从而上式成立，所以有</p><script type="math/tex; mode=display">    \begin{aligned}    A - \varepsilon &\le \sum_{i=1}^n \sum_{j=1}^m \inf f(\xi_i, \eta_j) \Delta x_i \Delta y_j  \\    & \le \sum_{i=1}^n \sum_{j=1}^m \sup f(\xi_i, \eta_j) \Delta x_i \Delta y_j \\    & \le A + \varepsilon    \end{aligned}</script><p>而$\displaystyle \sum_{j=1}^m \inf f(\xi_i, \eta_j) \Delta y_j$表示函数$f(\xi_i)$在$[c,d]$上的下和，所以</p><script type="math/tex; mode=display">    \sum_{j=1}^m \inf f(\xi_i, \eta_j) \Delta y_j \le \underline \int_c^d f(\xi_i, y) \mathrm{d} y = \varphi(\xi_i)</script><p>同理</p><script type="math/tex; mode=display">    \sum_{j=1}^m \sup f(\xi_i, \eta_j) \Delta y_j \le \overline \int_c^d f(\xi_i, y) \mathrm{d} y = \psi(\xi_i)</script><p>从而</p><script type="math/tex; mode=display">    A - \varepsilon \le \sum_{i=1}^n \varphi(\xi_i) \Delta x_i \le \sum_{i=1}^n \psi(\xi_i) \Delta x_i \le A + \varepsilon</script><p>即</p><script type="math/tex; mode=display">    \lim_{\Vert \pi_x \Vert \to 0} \sum_{i=1}^n \varphi(\xi_i) \Delta x_i = \lim_{\Vert \pi \Vert \to 0} \sum_{i=1}^n \psi(\xi_i) \Delta x_i = A</script><p>成立</p><p>Q.E.D.</p><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>设$f$在$I = [a,b] \times [c, d]$上可积，如果对每一个$x \in [a,b]$，函数$f(x, y)$在$[c, d]$上可积，则</p><script type="math/tex; mode=display">    \int_I f \mathrm{d} \sigma = \int_a^b \left(\int_c^d f(x, y) \mathrm{d} y \right) \mathrm{d} x</script><p>上面等式右边称为累次积分，也可以记为</p><script type="math/tex; mode=display">\int_a^b \mathrm{d} x \int_c^d f(x, y) \mathrm{d} y</script><p>同样，如果对于每一个$y \in [c, d]$，函数$f(x, y)$在$[a,b]$上可积，那么有</p><script type="math/tex; mode=display">    \int_I f \mathrm{d} \sigma = \int_c^d \left(\int_a^b f(x, y) \mathrm{d} x \right) \mathrm{d} y</script><p>上面等式右边也可以记为</p><script type="math/tex; mode=display">\int_c^d \mathrm{d} y \int_a^b f(x, y) \mathrm{d} x</script></blockquote><p>证：由<a href="#定理1">定理1</a>可知，</p><script type="math/tex; mode=display">    \varphi(x) = \psi(x) = \int_c^d f(x, y) \mathrm{d} y</script><p>所以</p><script type="math/tex; mode=display">    \int_I f \mathrm{d} \sigma = \int_a^b \varphi(x) \mathrm{d} x = \int_a^b \mathrm{d} x \int_c^d f(x, y) \mathrm{d} y</script><p>后半部分同样的证明方法。</p><p>Q.E.D.</p><h4 id="定理3"><a href="#定理3" class="headerlink" title="定理3"></a>定理3</h4><blockquote><p>设$f$是$[a,b] \times [c, d]$上的连续函数，则有</p><script type="math/tex; mode=display">    \int_c^d \mathrm{d} y \int_a^b f(x, y) \mathrm{d} x = \int_a^b \mathrm{d} x \int_c^d f(x, y) \mathrm{d} y</script></blockquote><p>证：由于$f$连续，从而$\varphi(x)$与$\psi(x)$都可积，再由<a href="#定理2">定理2</a>易证。</p><p>Q.E.D.</p><h4 id="定理4"><a href="#定理4" class="headerlink" title="定理4"></a>定理4</h4><blockquote><p>设点集</p><script type="math/tex; mode=display">    B = \{(x, y): y_1(x) \le y \le y_2(x), a \le x \le b\}</script><p>其中函数$y_1,y_2$在$[a,b]$上连续，函数$f$在$B$上可积。如果对任意的$x \in [a,b]$，单变量积分</p><script type="math/tex; mode=display">    \int_{y_1(x)}^{y_2(x)} f(x, y) \mathrm{d} y</script><p>存在，那么</p><script type="math/tex; mode=display">    \int_B f \mathrm{d} \sigma = \int_a^b \mathrm{d} x \int_{y_1(x)}^{y_2(x)} f(x, y) \mathrm{d} y</script></blockquote><p>证：令$c = \inf y_1([a, b]), d = \sup y_2([a, b])$，从而$I = [a, b] \times [c, d] \supset B$，由于$f$在$B$上可积，从而$f_B$在$I$上可积，而且</p><script type="math/tex; mode=display">    \int_B f \mathrm{d} \sigma = \int_I f_B \mathrm{d} \sigma</script><p>显然易知，对每一个$x \in [a,b]$，$f_B(x, y)$在$[c, d]$上可积，所以由<a href="#定理2">定理2</a>可知，</p><script type="math/tex; mode=display">    \int_I f_B \mathrm{d} \sigma = \int_a^b \mathrm{d} x \int_c^d f_B(x, y) \mathrm{d} y = \int_a^b \mathrm{d} x \int_{y_1(x)}^{y_2(x)} f_B \mathrm{d} y = \int_a^b \mathrm{d} x\int_{y_1(x)}^{y_2(x)} f(x, y) \mathrm{d} y</script><p>Q.E.D.</p><h4 id="定义1：正则映射"><a href="#定义1：正则映射" class="headerlink" title="定义1：正则映射"></a>定义1：正则映射</h4><blockquote><p>设有界闭域$D \subset \mathbb{R}^2$，连续函数$F: D \to \mathbb{R}$，映射$\boldsymbol{\varphi}$由公式</p><script type="math/tex; mode=display">    x = x(u, v), \quad y = y(u, v) \quad ((u, v) \in \Delta)</script><p>定义，其中$\Delta$是$uv$平面上的有界闭区域，设映射$\boldsymbol{\varphi}$是正则的，即$\boldsymbol{\varphi}$是从$\Delta$到$D$上的一对一的映射，$\boldsymbol{\varphi}$在$\Delta$上连续可导，并且</p><script type="math/tex; mode=display">    \frac{\partial (x, y) }{\partial (u, v)} = \begin{vmatrix}     \frac{\partial x}{\partial u} & \frac{\partial x}{\partial v} \\    \frac{\partial y}{\partial u} & \frac{\partial y}{\partial v}    \end{vmatrix} \neq 0</script><p>在$\Delta$上成立。</p></blockquote><h4 id="定理5"><a href="#定理5" class="headerlink" title="定理5"></a>定理5</h4><blockquote><p>设正则映射$\boldsymbol{\varphi}$把$\mathbb{R}^2$中以</p><script type="math/tex; mode=display">    (u_0, v_0), \quad (u_0 + h, v_0), \quad (u_0+h, v_0 +h), \quad (u_0, v_0 +h)</script><p>为顶点的的矩形$A_{hk}$一对一的映射为$\boldsymbol{\varphi}(A_{hk})$，那么</p><script type="math/tex; mode=display">    \lim \limits_{ h\to 0, k \to 0} \frac{\sigma(\boldsymbol{\varphi}(A_{hk}))}{\sigma(A_{hk})} =  \left| \frac{\partial(x, y)}{\partial(u, v)} \right|_{(u_0, v_0)}</script></blockquote><p>证：由映射后的图像有</p><script type="math/tex; mode=display">    \sigma(\boldsymbol{\varphi}(A_{hk})) \approx \Vert (\boldsymbol{\varphi}(u_0 + h, v_0) - \boldsymbol{\varphi}(u_0, v_0)) \times (\boldsymbol{\varphi}(u_0, v_0 + k) - \boldsymbol{\varphi}(u_0, v_0))  \Vert</script><p>由于</p><script type="math/tex; mode=display">    \begin{aligned}    \boldsymbol{\varphi}(u_0 + h, v_0) - \boldsymbol{\varphi}(u_0, v_0) = \frac{\partial \boldsymbol{\varphi}}{\partial u} (u_0, v_0) h + \boldsymbol{\xi} \\    \boldsymbol{\varphi}(u_0, v_0+h) - \boldsymbol{\varphi}(u_0, v_0) = \frac{\partial \boldsymbol{\varphi}}{\partial v} (u_0, v_0) h + \boldsymbol{\eta}    \end{aligned}</script><p>其中</p><script type="math/tex; mode=display">    \Vert \boldsymbol{\xi} \Vert = o(h), \quad \Vert \boldsymbol{\eta} \Vert = o(k)</script><p>所以</p><script type="math/tex; mode=display">    \sigma(\boldsymbol{\varphi}(A_{hk})) \approx \Vert \frac{\partial \boldsymbol{\varphi}}{\partial u}(u_0, v_0) \times \frac{\partial \boldsymbol{\varphi}}{\partial v}(u_0, v_0) \Vert hk + o(hk)</script><p>而</p><script type="math/tex; mode=display">    hk = \sigma(A_{hk})</script><p>所以上式可以写为</p><script type="math/tex; mode=display">    \frac{\sigma (\boldsymbol{\varphi}(A_{hk}))}{\sigma(A_{hk})} \approx \Vert \frac{\partial \boldsymbol{\varphi}}{\partial u}(u_0, v_0) \times \frac{\partial \boldsymbol{\varphi}}{\partial v}(u_0, v_0) \Vert + o(1)</script><p>又因为</p><script type="math/tex; mode=display">    \frac{\partial \boldsymbol{\varphi}}{\partial u} \times \frac{\partial \boldsymbol{\varphi}}{\partial v} = \left|    \begin{matrix}    \boldsymbol{i} & \boldsymbol{j} & \boldsymbol{k}\\    \frac{\partial x}{\partial u} & \frac{\partial x}{\partial v} & 0 \\    \frac{\partial y}{\partial u} & \frac{\partial y}{\partial v} & 0 \\    \end{matrix}    \right| = \frac{\partial(x, y)}{\partial(u, v)} \boldsymbol{k}</script><p>所以</p><script type="math/tex; mode=display">    \Vert \frac{\partial \boldsymbol{\varphi}}{\partial u} \times \frac{\partial \boldsymbol{\varphi}}{\partial v} \Vert = \left| \frac{\partial (x, y)}{\partial(u, v)} \right|</script><p>从而</p><script type="math/tex; mode=display"> \frac{\sigma (\boldsymbol{\varphi}(A_{hk}))}{\sigma(A_{hk})} \approx \left| \frac{\partial(x, y)}{\partial(u, v)} \right|_{(u_0, v_0)} + o(hk)</script><p>所以当$h \to 0, k \to 0$时，有</p><script type="math/tex; mode=display">    \frac{\sigma (\boldsymbol{\varphi}(A_{hk}))}{\sigma(A_{hk})} = \left| \frac{\partial(x, y)}{\partial(u, v)} \right|_{(u_0, v_0)}</script><blockquote><p>笔者注：感觉该证明方法不太好，约等于记号不应该用在这里，就算使用也应该讲明原因。</p></blockquote><p>Q.E.D.</p><h4 id="定理6"><a href="#定理6" class="headerlink" title="定理6"></a>定理6</h4><blockquote><p>设$\mathbb{R}^2$中的有界闭区域$D$有面积，函数$F: \to \mathbb{R}$，映射</p><script type="math/tex; mode=display">    \boldsymbol{\varphi}: \left\{ \begin{aligned}    x = x(u, v) \\    y = y(u, v)    \end{aligned} \right.  \quad (u, v) \in \Delta</script><p>是从$\Delta$到$D$上的正则映射，那么</p><script type="math/tex; mode=display">    \iint \limits_D F(x, y) \mathrm{d} x \mathrm{d} y = \iint \limits_\Delta F \circ \boldsymbol{\varphi}(u, v) \left| \frac{\partial(x, y)}{\partial(u, v)} \right| \mathrm{d} u \mathrm{d} v</script></blockquote><p>证：用矩形$I$把$uv$平面上的闭区域$\Delta$覆盖起来，用两族平行直线$u =u_i (i=0,1,2, \cdots, m)$和$v = v_j (j=0,1,2, \cdots,n)$分割$I$，其中</p><script type="math/tex; mode=display">    u_0 < u_1 < \cdots < u_{m-1} < u_m, \quad v_0 < v_1 < \cdots < v_{n-1} < v_n</script><p>令$\Delta u_i = u_i - u_{i-1}(i=1,2,\cdots,m), \Delta v_j = v_j - v_{j-1}(j=1,2,\cdots,n)$。分割后可以得到$mn$个矩形，在映射$\boldsymbol{\varphi}$的作用下，它们变成了$xy$平面下的$mn$个曲边平行四边形，这时只需要考虑那些完全被包含在$D$中的曲边平行四边形，将它们记为$D_i(i=1,2,\cdots,k)$，即$D_i=\boldsymbol{\varphi}(\Delta_i)$，其中$\Delta_i(i=1,2,\cdots,k)$是完全被包含在$\Delta$中的矩形，任取一点$\boldsymbol{\eta}_i \in D_i$ ，并设$\Delta_i$中唯一的点$\xi_i$，使得$\boldsymbol{\varphi} (\xi_i) = \eta_i(i=1,2,\cdots,k)$，作积分和</p><script type="math/tex; mode=display">    \sum_{i=1}^k F(\boldsymbol{\eta}_i) \sigma(D_i)</script><p>由<a href="#定理5">定理5</a>可知</p><script type="math/tex; mode=display">    \sigma(D_i) \sim |det J \boldsymbol{\varphi}(\xi_i)| \sigma(\Delta_i) \quad (i=1,2,\cdots, k)</script><p>所以得到</p><script type="math/tex; mode=display">    \sum_{i=1}^k F(\boldsymbol{\eta}_i) \sigma(D_i) \sim \sum_{i=1}^k F \circ \boldsymbol{\varphi} (\boldsymbol{\xi}_i) |det J \boldsymbol{\varphi} (\boldsymbol{\xi}_i)|  \sigma(\Delta_i)</script><p>当分割无限细时，由<a href="https://gamersover.github.io/2021/07/13/函数积分9#定理7" target="_blank" rel="noopener">函数积分九的定理7</a>可得，</p><script type="math/tex; mode=display">    \int_D F \mathrm{d} \sigma = \int_\Delta F \circ \boldsymbol{\varphi} |J \boldsymbol{\varphi}| \mathrm{d} \sigma</script><p>Q.E.D.</p><h4 id="定理7：极坐标换元"><a href="#定理7：极坐标换元" class="headerlink" title="定理7：极坐标换元"></a>定理7：极坐标换元</h4><blockquote><p>令$x = r \cos \theta, y= r \sin \theta$，则</p><script type="math/tex; mode=display">    \iint \limits_D F(x, y) \mathrm{d} x \mathrm{d} y = \iint \limits_\Delta F(r \cos \theta, r \sin \theta) r \mathrm{d} r \mathrm{d} \theta</script></blockquote><p>证：这时</p><script type="math/tex; mode=display">    \frac{\partial(x, y)}{\partial (u, v)} = \left| \begin{matrix}    \cos \theta & -r\sin \theta \\    \sin \theta & r \cos \theta    \end{matrix}    \right| = r</script><p>代入<a href="#定理6">定理6</a>的结果即证。</p><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数积分 </tag>
            
            <tag> 二重积分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode题解25：K个一组翻转链表</title>
      <link href="/2021/07/18/leetcode%E9%A2%98%E8%A7%A325/"/>
      <url>/2021/07/18/leetcode%E9%A2%98%E8%A7%A325/</url>
      
        <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>该题来自于<a href="https://leetcode-cn.com/problems/reverse-nodes-in-k-group/" target="_blank" rel="noopener">力扣第25题</a></p><p>给你一个链表，每 k 个节点一组进行翻转，请你返回翻转后的链表。<br>k 是一个正整数，它的值小于或等于链表的长度。<br>如果节点总数不是 k 的整数倍，那么请将最后剩余的节点保持原有顺序。</p><p>进阶：<br>你可以设计一个只使用常数额外空间的算法来解决此问题吗？<br>你不能只是单纯的改变节点内部的值，而是需要实际进行节点交换。</p><a id="more"></a><p>示例 1：</p><blockquote><p>输入：head = [1,2,3,4,5], k = 2<br>输出：[2,1,4,3,5]</p></blockquote><p>示例 2：</p><blockquote><p>输入：head = [1,2,3,4,5], k = 3<br>输出：[3,2,1,4,5]</p></blockquote><p>示例 3：</p><blockquote><p>输入：head = [1,2,3,4,5], k = 1<br>输出：[1,2,3,4,5]</p></blockquote><p>示例 4：</p><blockquote><p>输入：head = [1], k = 1<br>输出：[1]<br>提示：</p></blockquote><p>列表中节点的数量在范围 sz 内</p><ul><li>1 &lt;= sz &lt;= 5000</li><li>0 &lt;= Node.val &lt;= 1000</li><li>1 &lt;= k &lt;= sz</li></ul><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>思路比较直观，首先从当前节点开始往后数节点的个数，如果不超过<code>k</code>个，直接返回头节点；如果达到<code>k</code>个节点，则翻转这<code>k</code>个节点并返回翻转后的头节点，然后循环上述步骤就可以了。这里重点分析如何翻转<code>k</code>个节点，比如说翻转<code>1-&gt;2-&gt;3-&gt;4</code>的步骤如下：</p><ol><li>将2放到前面，<code>2-&gt;1-&gt;3-&gt;4</code></li><li>将3放到前面，<code>3-&gt;2-&gt;1-&gt;4</code></li><li>将4放到前面，<code>4-&gt;3-&gt;2-&gt;1</code></li></ol><p>所以依次仿照上述操作即可翻转任意<code>k</code>个节点了，假设已知<code>k</code>个节点的头指针<code>head</code>和尾指针<code>tail</code>，并且指针<code>curr</code>前面已经翻转，现在需要翻转<code>curr</code>后的节点，如下所示<br><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head -&gt; ... -&gt; curr -&gt; <span class="built_in">first</span> -&gt; ... -&gt;</span><br></pre></td></tr></table></figure><br><code>head</code>到<code>curr</code>已经翻转了，那么接下来需要将<code>first</code>放到前面即可，可以进行以下操作</p><ol><li><code>first = curr.next</code></li><li><code>curr.next = first.next</code></li><li><code>first.next = head</code></li><li>最后更新<code>head</code>方便下次循环，<code>head = first</code></li></ol><p>直到<code>head</code>与<code>tail</code>相等，表示<code>tail</code>已经在头部了，所以不需要再翻转了。</p><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><ol><li>初始化<code>fakeHead</code>，并令<code>fakeHead.next = head</code>，初始<code>pre</code>，并令<code>pre = fakeHead</code></li><li>进入循环，循环条件是<code>head != null</code></li><li>判断从<code>head</code>开始是否有<code>k</code>个节点，如果没有进入步骤4，如果有进入步骤5</li><li>由于不足<code>k</code>个节点，直接返回<code>fakeHead.next</code>，退出程序</li><li>获取<code>k</code>个节点的头<code>head</code>和尾<code>tail</code>，并翻转这<code>k</code>个节点，得到新的头<code>head</code>和尾<code>tail</code></li><li>拼接翻转后的链表<code>pre.next = head</code></li><li>更新<code>pre</code>,<code>head</code>准备下次循环，<code>pre=tail</code>，<code>head=pre.next</code>，回到步骤2</li><li>循环条件不满足退出并返回<code>fakeHead.next</code></li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><details open><summary>python3</summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ListNode</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, val=<span class="number">0</span>, next=None)</span>:</span></span><br><span class="line">        self.val = val</span><br><span class="line">        self.next = next</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reverse</span><span class="params">(self, head, tail)</span>:</span></span><br><span class="line">        curr = head</span><br><span class="line">        <span class="keyword">while</span> head != tail:</span><br><span class="line">            first = curr.next</span><br><span class="line">            curr.next = first.next</span><br><span class="line">            first.next = head</span><br><span class="line">            head = first</span><br><span class="line">        <span class="keyword">return</span> head, curr</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reverseKGroup</span><span class="params">(self, head: ListNode, k: int)</span> -&gt; ListNode:</span></span><br><span class="line">        fakeHead = ListNode(<span class="number">0</span>, head)</span><br><span class="line">        pre = fakeHead</span><br><span class="line">        <span class="keyword">while</span> head:</span><br><span class="line">            tail = pre</span><br><span class="line">            <span class="keyword">for</span> _ <span class="keyword">in</span> range(k):</span><br><span class="line">                tail = tail.next</span><br><span class="line">                <span class="keyword">if</span> tail <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                    <span class="keyword">return</span> fakeHead.next</span><br><span class="line">            head, tail = self.reverse(head, tail)</span><br><span class="line">            pre.next = head</span><br><span class="line">            pre = tail</span><br><span class="line">            head = pre.next</span><br><span class="line">        <span class="keyword">return</span> fakeHead.next</span><br></pre></td></tr></table></figure></details><details><summary>c++</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    ListNode *next;</span><br><span class="line">    ListNode() : val(<span class="number">0</span>), next(<span class="literal">nullptr</span>) &#123;&#125;</span><br><span class="line">    ListNode(<span class="keyword">int</span> x) : val(x), next(<span class="literal">nullptr</span>) &#123;&#125;</span><br><span class="line">    ListNode(<span class="keyword">int</span> x, ListNode *next) : val(x), next(next) &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">reverse</span><span class="params">(ListNode* &amp;head, ListNode* &amp;tail)</span> </span>&#123;</span><br><span class="line">        ListNode* curr = head;</span><br><span class="line">        <span class="keyword">while</span> (head != tail) &#123;</span><br><span class="line">            ListNode* first = curr-&gt;next;</span><br><span class="line">            curr-&gt;next = first-&gt;next;</span><br><span class="line">            first-&gt;next = head;</span><br><span class="line">            head = first;</span><br><span class="line">        &#125;</span><br><span class="line">        tail = curr;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseKGroup</span><span class="params">(ListNode* head, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        ListNode* fakeHead = <span class="keyword">new</span> ListNode(<span class="number">0</span>, head);</span><br><span class="line">        ListNode* pre = fakeHead;</span><br><span class="line">        <span class="keyword">while</span> (head) &#123;</span><br><span class="line">            ListNode* tail = pre;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++) &#123;</span><br><span class="line">                tail = tail-&gt;next;</span><br><span class="line">                <span class="keyword">if</span> (tail == <span class="literal">nullptr</span>) <span class="keyword">return</span> fakeHead-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">            reverse(head, tail);</span><br><span class="line">            pre-&gt;next = head;</span><br><span class="line">            pre = tail;</span><br><span class="line">            head = pre-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> fakeHead-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></details><details><summary>java</summary><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListNode</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    ListNode next;</span><br><span class="line">    ListNode() &#123;&#125;</span><br><span class="line">    ListNode(<span class="keyword">int</span> val) &#123; <span class="keyword">this</span>.val = val; &#125;</span><br><span class="line">    ListNode(<span class="keyword">int</span> val, ListNode next) &#123; <span class="keyword">this</span>.val = val; <span class="keyword">this</span>.next = next; &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">reverse</span><span class="params">(ListNode head, ListNode tail)</span> </span>&#123;</span><br><span class="line">        ListNode curr = head;</span><br><span class="line">        <span class="keyword">while</span>(head != tail) &#123;</span><br><span class="line">            ListNode first = curr.next;</span><br><span class="line">            curr.next = first.next;</span><br><span class="line">            first.next = head;</span><br><span class="line">            head = first;</span><br><span class="line">        &#125;</span><br><span class="line">        tail = curr;</span><br><span class="line">        <span class="keyword">return</span> tail;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">reverseKGroup</span><span class="params">(ListNode head, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        ListNode fakeHead = <span class="keyword">new</span> ListNode(<span class="number">0</span>, head);</span><br><span class="line">        ListNode pre = fakeHead;</span><br><span class="line">        <span class="keyword">while</span> (head != <span class="keyword">null</span>) &#123;</span><br><span class="line">            ListNode tail = pre;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++) &#123;</span><br><span class="line">                tail = tail.next;</span><br><span class="line">                <span class="keyword">if</span> (tail == <span class="keyword">null</span>) <span class="keyword">return</span> fakeHead.next;</span><br><span class="line">            &#125;</span><br><span class="line">            ListNode newTail = reverse(head, tail);</span><br><span class="line">            pre.next = tail;</span><br><span class="line">            pre = newTail;</span><br><span class="line">            head = pre.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> fakeHead.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 链表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数积分九：有界区域上的二重积分</title>
      <link href="/2021/07/13/%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%869/"/>
      <url>/2021/07/13/%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%869/</url>
      
        <content type="html"><![CDATA[<h4 id="定义1"><a href="#定义1" class="headerlink" title="定义1"></a>定义1</h4><blockquote><p>设$B \subset \mathbb{R}^2$是有界集，函数$f: B \to \mathbb{R}$，令</p><script type="math/tex; mode=display">    f_B(\boldsymbol{p}) = \left\{          \begin{aligned}            & f(\boldsymbol{p}), & \boldsymbol{p} \in B \\            & 0, & \boldsymbol{p} \in B^c        \end{aligned}     \right.</script><p>则函数$f_B$在全平面$\mathbb{R}^2$上有定义，如果限制在集合$B$上，$f_B$与$f$相等。</p></blockquote><a id="more"></a><h4 id="定义2"><a href="#定义2" class="headerlink" title="定义2"></a>定义2</h4><blockquote><p>任取有界的闭矩形$I \supset B$，如果函数$f_B$在$I$上可积，则称函数$f$在$B$上可积，并称数值$\displaystyle \int_I f_B \mathrm{d} \sigma$为函数$f$在$B$上的（二重）积分，记作</p><script type="math/tex; mode=display">    \iint \limits_B f(x, y) \mathrm{d} x \mathrm{d} y \quad 或 \quad \int_B f \mathrm{d} \sigma</script></blockquote><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>设有界集$B \subset \mathbb{R}^2$，函数$f: B \to \mathbb{R}$有界，如果集合$B$的边界$\partial B$和$f$在$B$上的间断点都是零测集，那么$f$在$B$上可积。</p></blockquote><p>证：取闭矩形$I$，满足$I^\circ \supset \overline B$，由于$f_B$在$\overline B^c$上处处为零，所以$\overline B^c$中的每个点都是$f_B$的连续点，在$B^\circ$上，$f_B = f$，所以在$B^\circ$上$f_B$的不连续点就是$f$的不连续点，从而</p><script type="math/tex; mode=display">    D(f_B) \subset D(f) \cup \partial B</script><p>由于$D(f)$与$\partial B$都是零测集，所以$D(f_B)$也是零测集，即$f_B$在$I$上可积，从而$f$在$B$上可积。</p><p>Q.E.D.</p><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>设有界集$B \subset \mathbb{R}^2$，$f: B \to \mathbb{R}$在$B$上可积，那么对任意常数$c$，函数$cf$在$B$上也可积，并且</p><script type="math/tex; mode=display">    \int_B cf \mathrm{d} \sigma = c \int_B f \mathrm{d} \sigma</script><p>又若$g: B \to \mathbb{R}$在$B$上可积，那么$f \pm g$也在$B$上可积，且</p><script type="math/tex; mode=display">    \int_B (f \pm g) \mathrm{d} \sigma = \int_B f \mathrm{d} \sigma \pm \int_B g \mathrm{d} \sigma</script></blockquote><p>证：对于第一个等式，设闭矩形$I \supset B$，有</p><script type="math/tex; mode=display">    \int_B cf \mathrm{d} \sigma = \int_I cf_B \mathrm{d} \sigma = c \int_I f_B \mathrm{d} \sigma = c \int_B f \mathrm{d} \sigma</script><p>对于第二个等式，同样有</p><script type="math/tex; mode=display">    \int_B (f \pm g) \mathrm{d} \sigma = \int_I (f_B \pm g_B) \mathrm{d} \sigma = \int_I f_B \mathrm{d} \sigma \pm \int_I g_B \mathrm{d} \sigma = \int_B f \mathrm{d} \sigma \pm \int_B g \mathrm{d} \sigma</script><p>Q.E.D.</p><h4 id="定理3"><a href="#定理3" class="headerlink" title="定理3"></a>定理3</h4><blockquote><p>设$B_1, B_2 \subset \mathbb{R}^2$有界，且$B_1 \cap B_2$是零面积集，若函数$f$在$B_1$和$B_2$上都可积，那么$f$在$B_1 \cup B_2$上可积，且</p><script type="math/tex; mode=display">    \int_{B_1 \cup B_2} f \mathrm{d} \sigma = \int_{B_1} f \mathrm{d} \sigma + \int_{B_2} f \mathrm{d} \sigma</script></blockquote><p>证：易知，只要$\boldsymbol{x} \notin B_1 \cap B_2$，有$f_{B_1 \cup B_2}(\boldsymbol{x}) = f_{B_1}(\boldsymbol{x}) + f_{B_2}(\boldsymbol{x})$，从而使得$f_{B_1 \cup B_2}$与$f_{B_1} + f_{B_2}$不相等的集合必属于$B_1 \cap B_2$，即为零面积集。所以由<a href="https://gamersover.github.io/2021/06/29/函数积分8/#定理9" target="_blank" rel="noopener">函数积分八的定理9</a>可知，</p><script type="math/tex; mode=display">    \int_I (f_{B_1} + f_{B_2}) \mathrm{d} \sigma = \int_I f_{B_1 \cap B_2} \mathrm{d} \sigma</script><p>设矩形$I \supset B$，则有</p><script type="math/tex; mode=display">    \int_{B_1} f \mathrm{d} \sigma + \int_{B_2} f \mathrm{d} \sigma = \int_I f_{B_1} \mathrm{d} \sigma + \int_I f_{B_2} \mathrm{d} \sigma = \int_I (f_{B_1} + f_{B_2}) \mathrm{d} \sigma = \int_I f_{B_1 \cap B_2} \mathrm{d} \sigma</script><p>Q.E.D.</p><h4 id="定义3"><a href="#定义3" class="headerlink" title="定义3"></a>定义3</h4><blockquote><p>设$B \subset \mathbb{R}^2$有界，若常值函数$1$在$B$上可积，那么积分$\displaystyle \int_B 1 \mathrm{d} \sigma$称为点集$B$的面积，记为$\sigma(B)$，这时称$B$是有面积的。记函数</p><script type="math/tex; mode=display">    \chi_B (\boldsymbol{p}) = \left\{        \begin{aligned}        1, & \quad \boldsymbol{p} \in B \\        0, & \quad \boldsymbol{p} \notin B        \end{aligned}        \right.</script><p>称为$B$的特征函数，从而$B$的面积也可以写为</p><script type="math/tex; mode=display">    \sigma(B) = \int_B 1 \mathrm{d} \sigma = \int_I \chi_B \mathrm{d} \sigma</script><p>这里$I$是任何一个包含$B$的闭矩形。  </p></blockquote><h4 id="定理4"><a href="#定理4" class="headerlink" title="定理4"></a>定理4</h4><blockquote><p>设$B \subset \mathbb{R}^2$是一个有界集，且$\displaystyle \sigma(B) = \int_B 1 \mathrm{d} \sigma$存在，则</p><script type="math/tex; mode=display">    D(\chi_B) = \partial B</script></blockquote><p>证：由于</p><script type="math/tex; mode=display">    \mathbb{R}^2 = B^\circ \cup \partial B \cup (B^c)^\circ</script><p>而在开集$B^\circ$和$(B^c)^\circ$上，$\chi_B$分别为$1$和$0$，所以$\chi_B$在$B^\circ$和$(B^c)^\circ$上连续，从而</p><script type="math/tex; mode=display">    D(\chi_B) \subset \partial B   \tag {1}</script><p>任取$\boldsymbol{p} \in \partial B$，则在$\boldsymbol{p}$的任意小的领域内即有$B$中的点$\boldsymbol{p}^\prime$，又有$B^c$中的点$\boldsymbol{p}^{\prime\prime}$，而$\chi_B(\boldsymbol{p}^\prime) = 1, \chi_B(\boldsymbol{p}^{\prime\prime})=0$，所以$\chi_B$在$\boldsymbol{p}$处不连续，所以</p><script type="math/tex; mode=display">    \partial B \subset D(\chi_B) \tag {2}</script><p>由$(1)(2)$即得$D(\chi_B) = \partial B$。</p><p>Q.E.D.</p><h4 id="定理5"><a href="#定理5" class="headerlink" title="定理5"></a>定理5</h4><blockquote><p>设$B \subset \mathbb{R}^2$是一个有界集，则点集$B$为零面积集的充分必要条件是</p><script type="math/tex; mode=display">    \sigma (B) = \int_B 1 \mathrm{d} \sigma = 0</script></blockquote><p>证：必要性。作闭矩形$I$使得$I^{\circ} \supset \overline B$，则$B$上的特征函数$\chi_B$在$I$上取非零值的点集正好是$B$，而$B$是零面积集，由<a href="https://gamersover.github.io/2021/06/29/函数积分8/#定理8" target="_blank" rel="noopener">函数积分八的定理8</a>可知， $\chi_B$在$I$上可积且</p><script type="math/tex; mode=display">    \sigma(B) = \int_B 1 \mathrm{d} \sigma = \int_I \chi_B \mathrm{d} \sigma = 0</script><p>这表明$B$的面积为零。</p><p>充分性。由于$\sigma(B) = 0$，从而$B^\circ = \varnothing$，又因为$\chi_B$可积，从而$D(\chi_B)$是零测集，再由<a href="https://gamersover.github.io/2021/07/13/函数积分9/#定理4" target="_blank" rel="noopener">定理4</a>可知$\partial B$是零测集，而$\partial B$又是有界闭集，从而由<a href="https://gamersover.github.io/2021/06/29/函数积分8/#定理1" target="_blank" rel="noopener">函数积分八的定理1</a>可知$\partial B$是零面积集，由$B \subset \partial B \cup B^\circ = \partial B$，得$B \subset \partial B$，所以$B$也是零面积集。</p><p>Q.E.D.</p><h4 id="定理6"><a href="#定理6" class="headerlink" title="定理6"></a>定理6</h4><blockquote><p>设有界集$B \subset \mathbb{R}^2$，则$B$有面积当且仅当$B$的边界$\partial B$是一零面积集。</p></blockquote><p>证：由于$\partial B$是有界闭集，所以$\partial B$是零面积集$\Leftrightarrow \partial B$是零测集$\Leftrightarrow D(\chi_B)$是零测集$\Leftrightarrow \sigma(B)$存在$\Leftrightarrow B$有面积。</p><p>Q.E.D.</p><h4 id="定理7"><a href="#定理7" class="headerlink" title="定理7"></a>定理7</h4><blockquote><p>设$B$是$\mathbb{R}^2$中的有面积的点集，$f$在$B$上可积，对$B$的任意分割$T$作Riemann和，那么对任意的$\boldsymbol{\xi}_i \in D_i(i=1,2,\cdots,m)$有</p><script type="math/tex; mode=display">    \lim_{\Vert T \Vert \to 0} \sum_{i=1}^m f(\boldsymbol{\xi}_i) \sigma(D_i) = \int_B f \mathrm{d} \sigma</script><p>其中$\Vert T \Vert = \max \limits_{1 \le i \le m} \mathrm{diam}(D_i)$。也就是说，对任意的$\varepsilon &gt; 0$，存在$\delta&gt;0$，只要分割$T = \{D_1, D_2, \cdots, D_n\}$满足$\Vert T \Vert &lt; \delta$，就有</p><script type="math/tex; mode=display">    \left|\sum_{i=1}^m f(\boldsymbol{\xi}_i) \sigma(D_i) - \int_B f \mathrm{d} \sigma \right| < \varepsilon</script></blockquote><p>证：由于$f$在$B$上可积，从而对任意的$\varepsilon &gt; 0$，存在矩形网的分割$\pi_{\varepsilon} = \{J_1, J_2, \cdots, J_t \}$，使得</p><script type="math/tex; mode=display">    \overline S(f, \pi_{\varepsilon}) - \underline S(f, \pi_{\varepsilon}) < \frac{\varepsilon}{2}</script><p>即</p><script type="math/tex; mode=display">    \sum_{i=1}^t (\sup f(J_i) - \inf f(J_i)) \sigma(J_i) < \frac{\varepsilon}{2}</script><p>这里$J_i \subset B (i=1,2,\cdots,t)$，现将子矩形$J_i$的每一边平行地向内部收缩同一距离$\delta &gt; 0$，作成一个开矩形$\tilde {J_i} \subset J_i (i=1,2,\cdots,t)$。记</p><script type="math/tex; mode=display">    K = I \bigcap (\bigcup \limits_{i=1}^t \tilde J_i)^c</script><p>这里$I$是所有包含在$B$中的闭子矩形$J_i$的并，显然$K$是闭集，现取$\delta &gt; 0$充分小，使得$\sigma(K) &lt; \varepsilon / 2\omega$，这里$\omega$是$f$在$B$上的振幅。对这个$\delta &gt; 0$，任取分割$T = \{D_1, D_2, \cdots, D_m\}$，使得$\Vert T \Vert &lt; \delta$，记$\displaystyle A = \int_B f \mathrm{d} \sigma$，则有</p><script type="math/tex; mode=display">    A = \sum_{i=1}^m \int_{D_i} f \mathrm{d} \sigma</script><p>设$f$在$D_i$上的上、下确界分别为$M_i, m_i$，则</p><script type="math/tex; mode=display">    m_i \sigma(D_i) \le \int_{D_i} f \mathrm{d} \sigma \le M_i \sigma(D_i)</script><p>记$\displaystyle \mu_i = \frac{1}{\sigma(D_i)} \int_{D_i} f \mathrm{d} \sigma$，从而$m_i \le \mu_i \le M_i$，又有</p><script type="math/tex; mode=display">    \begin{aligned}    \left| A - \sum_{i=1}^m f(\boldsymbol{\xi}_i)\sigma(D_i) \right| &= \left| \sum_{i=1}^m (\mu_i - f(\boldsymbol{\xi}_i)) \sigma(D_i) \right| \\    & \le \sum_{i=1}^m \left| \mu_i - f(\boldsymbol{\xi}_i) \right| \sigma(D_i) \\    & \le \sum_{i=1}^m (M_i - m_i) \sigma(D_i) \\    & = \sum_{i=1}^m \omega_i \sigma(D_i) \\    & = \sum \nolimits_1 + \sum \nolimits_2    \end{aligned}</script><p>其中</p><script type="math/tex; mode=display">    \sum \nolimits_1 = \sum_{D_i \subset K} \omega_i \sigma(D_i) \quad \sum \nolimits_2 = \sum_{D_i \nsubseteq K}\omega_i \sigma(D_i)</script><p>而</p><script type="math/tex; mode=display">    \sum \nolimits_1 \le \omega \sum_{D_1 \subset K} \sigma(D_i) \le \omega_i \sigma(K) < \frac{\varepsilon}{2}</script><p>对于$\sum_2$，由于$D_i \nsubseteq K$，从而$D_i$必与某个$\tilde {J_j}$相交，所以必有$D_i \subset J_j$，从而有</p><script type="math/tex; mode=display">    \begin{aligned}    \sum \nolimits_2 = \sum_{j=1}^t \sum_{D_i \subset J_j} \omega_i \sigma(D_i) & \le \sum_{j=1}^t (\sup f(J_j) - \inf f(J_j)) \sum_{D_i \subset J_j} \sigma(D_i) \\    & \le \sum_{j=1}^t (\sup f(J_j) - \inf f(J_j)) \sigma(J_i) < \frac{\varepsilon}{2}    \end{aligned}</script><p>所以有</p><script type="math/tex; mode=display">    \left| A - \sum_{i=1}^m f(\boldsymbol{\xi}_i)\sigma(D_i)  \right| \le \sum \nolimits_1 + \sum \nolimits_2 < \varepsilon</script><p>Q.E.D.</p><h4 id="定理8：积分平均值定理"><a href="#定理8：积分平均值定理" class="headerlink" title="定理8：积分平均值定理"></a>定理8：积分平均值定理</h4><blockquote><p>设$K$是$\mathbb{R}^2$中的有线条光滑曲线围成的有界闭区域，函数$f, g: K \to \mathbb{R}$连续且$g$在$K$上不变号，于是存在一点$\boldsymbol{\xi} \in K$，满足</p><script type="math/tex; mode=display">    \int_K fg \mathrm{d} \sigma = f(\boldsymbol{\xi}) \int_K g \mathrm{d} \sigma</script></blockquote><p>证：连续函数$g$与$fg$在$K$上都可积，因为$K$是紧致集，所以连续函数$f$在$K$上取得最小值$f(\boldsymbol{a})$与最大值$f(\boldsymbol{b})$，不妨设在$K$上$g \le 0$，于是</p><script type="math/tex; mode=display">    f(\boldsymbol{a})g(\boldsymbol{p}) \le g(\boldsymbol{p})g(\boldsymbol{p}) \le f(\boldsymbol{b})g(\boldsymbol{p})</script><p>对一切$\boldsymbol{p} \in K$都成立，从而有</p><script type="math/tex; mode=display">    f(\boldsymbol{a})\int_K g \mathrm{d} \sigma \le \int_K fg \mathrm{d} \sigma \le f(\boldsymbol{b}) \int_K g \mathrm{d} \sigma</script><p>若$\displaystyle \int_K g \mathrm{d} \sigma = 0$，这时$g = 0$，定理自然成立。现设$\displaystyle \int_K g \mathrm{d} \sigma &gt; 0$，于是</p><script type="math/tex; mode=display">    f(\boldsymbol{a}) \le \left( \int_k g \mathrm{d} \sigma \right)^{-1} \int_K fg \mathrm{d} \sigma \le f(\boldsymbol{b})</script><p>由于$K$是连通集，而$f$在$K$上连续，从而由介值定理可知，存在一点$\boldsymbol{\xi} \in K$，使得</p><script type="math/tex; mode=display">    f(\boldsymbol{\xi}) = \left( \int_K g \mathrm{d} \sigma \right)^{-1} \int_K fg \mathrm{d} \sigma</script><p>Q.E.D.</p><h4 id="定理9"><a href="#定理9" class="headerlink" title="定理9"></a>定理9</h4><blockquote><p>设$K$是$\mathbb{R}^2$中的有界闭区域，函数$f$在$K$上连续，那么存在一点$\boldsymbol{\xi} \in K$，使得</p><script type="math/tex; mode=display">    \int_K f \mathrm{d} \sigma = f(\boldsymbol{\xi}) \sigma(K)</script></blockquote><p>证：由<a href="https://gamersover.github.io/2021/07/13/函数积分9/#定理8：积分平均值定理" target="_blank" rel="noopener">定理8</a>，令$g = 1$即得。</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数积分 </tag>
            
            <tag> 二重积分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode题解24：两两交换链表中的节点</title>
      <link href="/2021/07/11/leetcode%E9%A2%98%E8%A7%A324/"/>
      <url>/2021/07/11/leetcode%E9%A2%98%E8%A7%A324/</url>
      
        <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>该题来自于<a href="https://leetcode-cn.com/problems/swap-nodes-in-pairs/" target="_blank" rel="noopener">力扣第24题</a></p><p>给定一个链表，两两交换其中相邻的节点，并返回交换后的链表。<br>你不能只是单纯的改变节点内部的值，而是需要实际的进行节点交换。</p><a id="more"></a><p>示例1：</p><blockquote><p>输入：head = [1,2,3,4]<br>输出：[2,1,4,3]</p></blockquote><p>示例2：</p><blockquote><p>输入：head = []<br>输出：[]</p></blockquote><p>示例3：</p><blockquote><p>输入：head = [1]<br>输出：[1]</p></blockquote><p>提示：</p><ul><li>链表中节点的数目在范围<code>[0, 100]</code>内</li><li><code>0 &lt;= Node.val &lt;= 100</code></li></ul><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>假设当前节点<code>curr</code>以及两个相邻的节点指针<code>first, second</code>，其中<code>curr-&gt;first-&gt;second</code>，想要交换两个节点，只需要执行以下两步：</p><ol><li><code>first-&gt;next = second-&gt;next</code></li><li><code>second-&gt;next = first</code></li></ol><p>此时链表为<code>(curr,second)-&gt;first</code>，需再执行一步<code>curr.next = second</code>，链表才会变成<code>curr-&gt;second-&gt;first</code></p><p>另外就是需要注意几种特殊情况：</p><ol><li>对于头部而言，如果<code>first = head</code>，那么<code>curr</code>就不存在，这时只需要设计一个<code>fakeHead</code>指针指向<code>head</code>即可</li><li>如果<code>first==null</code>或者<code>second==null</code>，直接结束就可以，因为已经不需要交换了</li></ol><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><ol><li>初始一个<code>fakeHead</code>节点，使其指向链表头部<code>head</code></li><li>令<code>curr = fakeHead</code></li><li>进入循环，循环终止条件为<code>curr.next == null</code>或者<code>curr.next.next == null</code></li><li>令<code>first = curr.next</code>，<code>second = first.next</code></li><li>交换节点<code>first-&gt;next = second-&gt;next</code>，<code>second-&gt;next = first</code>，<code>curr.next = second</code></li><li>更新<code>curr = first</code>，并回到循环初始即步骤3</li><li>循环退出，返回新的链表头节点<code>fakeHead.next</code>，程序结束</li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><details open><summary>python3</summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ListNode</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, val=<span class="number">0</span>, next=None)</span>:</span></span><br><span class="line">        self.val = val</span><br><span class="line">        self.next = next</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">swapPairs</span><span class="params">(self, head: ListNode)</span> -&gt; ListNode:</span></span><br><span class="line">        fakeHead = ListNode(<span class="number">0</span>, head)</span><br><span class="line">        curr = fakeHead</span><br><span class="line">        <span class="keyword">while</span> curr.next <span class="keyword">and</span> curr.next.next:</span><br><span class="line">            first = curr.next</span><br><span class="line">            second = first.next</span><br><span class="line">            first.next = second.next</span><br><span class="line">            second.next = first</span><br><span class="line">            curr.next = second</span><br><span class="line">            curr = first</span><br><span class="line">        <span class="keyword">return</span> fakeHead.next</span><br></pre></td></tr></table></figure></details><details><summary>c++</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    ListNode *next;</span><br><span class="line">    ListNode() : val(<span class="number">0</span>), next(<span class="literal">nullptr</span>) &#123;&#125;</span><br><span class="line">    ListNode(<span class="keyword">int</span> x) : val(x), next(<span class="literal">nullptr</span>) &#123;&#125;</span><br><span class="line">    ListNode(<span class="keyword">int</span> x, ListNode *next) : val(x), next(next) &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">swapPairs</span><span class="params">(ListNode* head)</span> </span>&#123;</span><br><span class="line">        ListNode* fakeHead = <span class="keyword">new</span> ListNode(<span class="number">0</span>, head);</span><br><span class="line">        ListNode* curr = fakeHead;</span><br><span class="line">        <span class="keyword">while</span> ((curr-&gt;next != <span class="literal">NULL</span>) &amp;&amp; (curr-&gt;next-&gt;next != <span class="literal">NULL</span>)) &#123;</span><br><span class="line">            ListNode* first = curr-&gt;next;</span><br><span class="line">            ListNode* second = first-&gt;next;</span><br><span class="line">            first-&gt;next = second-&gt;next;</span><br><span class="line">            second-&gt;next = first;</span><br><span class="line">            curr-&gt;next = second;</span><br><span class="line">            curr = first;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> fakeHead-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></details><details><summary>java</summary><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListNode</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    ListNode next;</span><br><span class="line">    ListNode() &#123;&#125;</span><br><span class="line">    ListNode(<span class="keyword">int</span> val) &#123; <span class="keyword">this</span>.val = val; &#125;</span><br><span class="line">    ListNode(<span class="keyword">int</span> val, ListNode next) &#123; <span class="keyword">this</span>.val = val; <span class="keyword">this</span>.next = next; &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">swapPairs</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        ListNode fakeHead = <span class="keyword">new</span> ListNode(<span class="number">0</span>, head);</span><br><span class="line">        ListNode curr = fakeHead;</span><br><span class="line">        <span class="keyword">while</span> ((curr.next != <span class="keyword">null</span>) &amp;&amp; (curr.next.next != <span class="keyword">null</span>)) &#123; </span><br><span class="line">            ListNode first = curr.next;</span><br><span class="line">            ListNode second = first.next;</span><br><span class="line">            first.next = second.next;</span><br><span class="line">            second.next = first;</span><br><span class="line">            curr.next = second;</span><br><span class="line">            curr = first;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> fakeHead.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 链表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数积分八：Lebesgue定理</title>
      <link href="/2021/06/29/%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%868/"/>
      <url>/2021/06/29/%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%868/</url>
      
        <content type="html"><![CDATA[<h4 id="定义1：零测集"><a href="#定义1：零测集" class="headerlink" title="定义1：零测集"></a>定义1：零测集</h4><blockquote><p>设$B \subset \mathbb{R}^2$，如果对任意给定的$\varepsilon &gt; 0$，存在可数个闭矩形序列$\{I_i\}(i=1,2,\cdots)$，使得</p><script type="math/tex; mode=display">    B \subset \bigcup \limits_{i=1}^\infty I_i, \qquad \sum_{i=1}^\infty \sigma(I_i) < \varepsilon</script><p>则称$B$为(二维)零测集。定义中的闭矩形可以换成开矩形。</p></blockquote><a id="more"></a><h4 id="定义2：零面积集"><a href="#定义2：零面积集" class="headerlink" title="定义2：零面积集"></a>定义2：零面积集</h4><blockquote><p>设$B \subset \mathbb{R}^2$，如果对任意给定的$\varepsilon &gt; 0$，存在有限个闭矩形序列$I_1, I_2, \cdots, I_m$，使得</p><script type="math/tex; mode=display">    B \subset \bigcup \limits_{i=1}^m I_i, \qquad \sum_{i=1}^m \sigma(I_i) < \varepsilon</script><p>则称$B$为零面积集。定义中的闭矩形可以换成开矩形。</p></blockquote><!--more--><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>(1) 至多可数集是零测集；<br/><br>(2) 至多可数个零测集的并是零测集；<br/><br>(3) 有限个零面积集的并是零面积集； <br/><br>(4) $B$为零面积集，必须且只需$\bar B$也是零面积集。<br/><br>(5) 如果$B$是有界闭集，则$B$为零测集的充分必要条件是$B$为零面积集。</p></blockquote><p>证：(1)(2)(3)易证，这里只证(4)(5)。<br>(4)的充分性。由于$B \subset \bar B$，从而由定义可知，对于任意给定的$\varepsilon &gt; 0$，存在有限个闭矩形序列$I_1, I_2, \cdots, I_m$使得</p><script type="math/tex; mode=display">    B \subset \bar B \subset \bigcup \limits_{i=1}^m I_i, \quad \sum_{i=1}^m \sigma(I_i) < \varepsilon</script><p>所以$B$是零面积集。<br>必要性。有定义知$B \subset \bigcup \limits_{i=1}^m I_i$，而$\bigcup \limits_{i=1}^m I_i$是闭集，从而$\bar B \subset \bigcup \limits_{i=1}^m I_i$，在由定义可知，$\bar B$是零面积集。<br/><br>(5)的充分性由<a href="https://gamersover.github.io/2021/06/29/函数积分8/#定义2：零面积集" target="_blank" rel="noopener">定义2</a>显然得出。<br>必要性。可知$B$是紧致集而且是零测集，从而对任意给定的$\varepsilon &gt; 0$，存在开矩形序列$\{I_i\}$，使得</p><script type="math/tex; mode=display">    B \subset \bigcup \limits_{i=1}^\infty I_i, \qquad \sum_{i=1}^\infty \sigma(I_i) < \varepsilon</script><p>由<a href="https://gamersover.github.io/2020/11/10/点列极限6/#定理2" target="_blank" rel="noopener">点列极限六的定理2</a>可知，从$\{I_i\}$中可以选取有限个开矩形仍能覆盖住$B$，这些开矩形的面积和自然小于$\varepsilon$，从而$B$是零面积集。</p><p>Q.E.D.</p><h4 id="定义3"><a href="#定义3" class="headerlink" title="定义3"></a>定义3</h4><blockquote><p>设集合$B \subset \mathbb{R}^2, f: B \to \mathbb{R}$有界。对任何$\boldsymbol{x} \in B$及$r &gt; 0$，令$I_{x,r} = B \cap B_r(\boldsymbol{x})$。用$\omega_f(\boldsymbol{x}, r)$表示$f$在$I_{r,\boldsymbol{x}}$上的振幅。令</p><script type="math/tex; mode=display">    \omega_f(\boldsymbol{x}) = \lim \limits_{r \to 0^+} \omega_f(\boldsymbol{x}, r)</script><p>称之为函数$f$在点$\boldsymbol{x}$处的振幅。</p></blockquote><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>函数$f$在$I_{r, \boldsymbol{x}}$上的振幅</p><script type="math/tex; mode=display">    \omega_f(\boldsymbol{x}, r) = \sup \{ |f(\boldsymbol{y}_1) - f(\boldsymbol{y}_2)|: \boldsymbol{y}_1,\boldsymbol{y}_2 \in I_{\boldsymbol{x}, r} \}</script></blockquote><p>证：与<a href="https://gamersover.github.io/2021/05/25/函数积分4/#定理2" target="_blank" rel="noopener">函数积分四的定理2</a>证明方法一样。</p><p>Q.E.D.</p><h4 id="定理4"><a href="#定理4" class="headerlink" title="定理4"></a>定理4</h4><blockquote><p>设集合$B \subset \mathbb{R}^2$，函数$f$在点$\boldsymbol{x} \in B$处连续的充分必要条件是$\omega_f(\boldsymbol{x}) = 0$。</p></blockquote><p>证：与<a href="https://gamersover.github.io/2021/05/25/函数积分4/#定理4" target="_blank" rel="noopener">函数积分四的定理4</a>证明方法一样。</p><h4 id="定理5"><a href="#定理5" class="headerlink" title="定理5"></a>定理5</h4><blockquote><p>设$I$是一个矩形，对$\delta &lt; 0$， 记</p><script type="math/tex; mode=display">    D_\delta = \{ \boldsymbol{x} \in I: \omega_f(\boldsymbol{x}) \ge \delta \}</script><p>用$D(f)$表示$f$在矩形$I$上不连续点的全体，那么有</p><script type="math/tex; mode=display">    \displaystyle D(f) = \bigcup_{n=1}^\infty D_{1/n}</script></blockquote><p>证：与<a href="https://gamersover.github.io/2021/05/25/函数积分4/#定理5" target="_blank" rel="noopener">函数积分四的定理5</a>证明方法一样。</p><h4 id="定理6"><a href="#定理6" class="headerlink" title="定理6"></a>定理6</h4><blockquote><p>设$f$是定义在有限闭矩形$I$上的函数，如果存在一列开矩形$I_j(j=1,2,\cdots)$使得$\displaystyle D(f) \subset \bigcup \limits_{j=1}^\infty I_j$，记$K = I \backslash \bigcup \limits_{j=1}^\infty I_j$，那么对任意的$\varepsilon &gt; 0$，一定存在$\delta &gt; 0$，当$\boldsymbol{x} \in K, \boldsymbol{I}$且$\Vert \boldsymbol{x} - \boldsymbol{y} \Vert &lt; \delta$时，有$|f(\boldsymbol{x}) - f(\boldsymbol{y})| &lt; \varepsilon$。</p></blockquote><p>证：与<a href="https://gamersover.github.io/2021/05/25/函数积分4/#定理6" target="_blank" rel="noopener">函数积分四的定理6</a>证明方法一样。</p><h4 id="定理7：Lebesgue"><a href="#定理7：Lebesgue" class="headerlink" title="定理7：Lebesgue"></a>定理7：Lebesgue</h4><blockquote><p>设函数$f$在闭矩形$I$上有界，那么$f$在$I$上Riemann可积的充分必要条件是$f$在$I$的全体不连续点组成的集$D(f)$是零测集。</p></blockquote><p>证：必要性。由<a href="https://gamersover.github.io/2021/06/29/函数积分8/#定理5" target="_blank" rel="noopener">定理5</a>可知，要证明$D(f)$是零测集，只需证明$D_{1/n}$是零测集，由于$f$在$I$上可积，从而对任意的$\varepsilon &gt; 0$，存在$I$的一个分割$\pi = \{ I_1, I_2, \cdots, I_m \}$，使得</p><script type="math/tex; mode=display">    \sum_{i=1}^m \omega_i \sigma(I_i) < \frac{\varepsilon}{n} \tag{1}</script><p>令$E_n = D_{1/n} \backslash l(\pi)$，这里$l(\pi)$为$\pi$的分割线所构成的集合，易知$l(\pi)$是一个零面积集，从而只要证明$E_n$是零测集即可。由于$\displaystyle I \backslash l(\pi) = \bigcup_{i=1}^m I_i$，这里$I_i(i=1,2,\cdots,m)$都是开矩形，所以</p><script type="math/tex; mode=display">    E_n = D_{1/n} \cap (\bigcup_{i=1}^m I_i) \subset \{I_i: I_i \cap D_{1/n} \ne \varnothing \}</script><p>表明$E_n$被一列开区间的并所覆盖，这一列矩形每一个都含有$D_{1/n}$中的点，任取$\boldsymbol{\alpha} \in D_{1/n} \cap I_i$，则必能取到充分小的$r$，使得$B_r(\boldsymbol{\alpha}) \in I_i$，用$\omega_i$和$\omega_f(\boldsymbol{\alpha}, r)$分别记$f$在$I_i$和$B_{r}(\alpha)$上的振幅，那么</p><script type="math/tex; mode=display">    \omega_i \ge \omega_f(\boldsymbol{\alpha}, r) \ge \omega_f(\boldsymbol{\alpha}) \ge \frac{1}{n} \tag{2}</script><p>如果用$\sum \nolimits^\prime$表示对那些满足$D_{1/n} \cap I_i \ne \varnothing$的$i$求和，那么由式(1)和式(2)可得</p><script type="math/tex; mode=display">    \frac{\varepsilon}{n} > \sum_{i=1}^m \omega_i \sigma(I_i) \le \sum \nolimits^\prime \omega_i \sigma(I_i) \ge \frac{1}{n} \sum \nolimits^\prime \sigma(I_i)</script><p>即</p><script type="math/tex; mode=display">    \sum \nolimits^\prime \sigma(I_i) < \varepsilon</script><p>这正好说明$E_n$是一个零面积集，所以$D_{1/n}$是零测集。 <br/><br>充分性。设$D(f)$是一个零测集，从而对任意给定的$\varepsilon &gt; 0$，存在一列开矩形$J_i(i=1,2,\cdots)$，使得</p><script type="math/tex; mode=display">    D(f) \subset \bigcup_{i=1}^\infty J_i \qquad \sum_{i=1}^\infty \sigma(J_i) < \frac{\varepsilon}{2\omega}</script><p>这里$\omega$是$f$在$I$上的振幅。令</p><script type="math/tex; mode=display">    K = I \backslash \bigcup \limits_{i=1}^\infty J_i</script><p>由<a href="https://gamersover.github.io/2021/06/29/函数积分8/#定理6" target="_blank" rel="noopener">定理6</a>可知，对上述的$\varepsilon &gt; 0$，存在$\delta &gt; 0$，使得当$\boldsymbol{x} \in K, \boldsymbol{y} \in I$，且$\Vert \boldsymbol{x} - \boldsymbol{y} \Vert &lt; \delta$时，有</p><script type="math/tex; mode=display">    |f(\boldsymbol{x}) - f(\boldsymbol{y})| < \frac{\varepsilon}{4\sigma(I)}</script><p>现取分割$\pi = \{ I_1, I_2, \cdots, I_m\}$，使得$\Vert \pi \Vert &lt; \delta$，令</p><script type="math/tex; mode=display">    \sum_{i=1}^m \omega_i \sigma(I_i) = \sum \nolimits_1 \omega_i \sigma(I_i) + \sum \nolimits_2 \omega_i \sigma(I_i)</script><p>其中$\sum \nolimits_1$表示对$K$和$I_i$相交的那些$i$求和，$\sum \nolimits_2$表示对$K$和$I_i$不相交的那些$i$求和。对$\sum \nolimits_1$中的项，因为$K \cap I_i \ne \varnothing$，任取$\boldsymbol{y}_i \in K \cap I_i$，则</p><script type="math/tex; mode=display">    \begin{aligned}    \omega_i & = \sup\{ |f(\boldsymbol{z}_1) - f(\boldsymbol{z}_2)|: \boldsymbol{z}_1, \boldsymbol{z}_2 \in I_i \} \\    & \le \sup \{ |f(\boldsymbol{z}_1) - f(\boldsymbol{y}_i)| + |f(\boldsymbol{z}_2) - f(\boldsymbol{y}_i) |: \boldsymbol{z}_1, \boldsymbol{z}_2 \in I_i, \boldsymbol{y}_i \in K \cap I_i \} \\    & \le \frac{\varepsilon}{2\sigma(I)}    \end{aligned}</script><p>从而</p><script type="math/tex; mode=display">    \sum \nolimits_1 \omega_i \sigma(I_i) \le \frac{\varepsilon}{2\sigma(I)} \sigma(I) = \frac{\varepsilon}{2} \tag{3}</script><p>对$\sum \nolimits_2$中的项，由于$K \cap I_i = \varnothing$吗，所以当$\boldsymbol{x} \in I_i$，$\boldsymbol{x} \notin K$，从而$\displaystyle \boldsymbol{x} \in \bigcup_{i=1}^\infty J_i$，即$I_i \subset \bigcup \limits_{i=1}^\infty J_i$，所以</p><script type="math/tex; mode=display">    \sum \nolimits_2 \sigma(I_i) \le \sum_{i=1}^\infty \sigma(J_i) < \frac{\varepsilon}{2\omega}</script><p>从而</p><script type="math/tex; mode=display">    \sum \nolimits_2 \omega_i \sigma(I_i) \le \omega \sum \nolimits_2 \sigma(I_i) < \frac{\varepsilon}{2} \tag{4}</script><p>由式(3)和式(4)可知，</p><script type="math/tex; mode=display">    \sum_{i=1}^m \omega_i \sigma(I_i) < \varepsilon</script><p>所以$f$在$I$上可积。</p><p>Q.E.D.</p><h4 id="定理8"><a href="#定理8" class="headerlink" title="定理8"></a>定理8</h4><blockquote><p>设函数$f: I \to \mathbb{R}$有界。如果集合$B = \{\boldsymbol{x} \in I, f(\boldsymbol{x}) \ne 0 \}$为一零面积集，那么$f$在$I$上可积，并且</p><script type="math/tex; mode=display">    \int_I f \mathrm{d} \sigma = 0</script></blockquote><p>证：显然$I^\circ \backslash \overline B$中的点都是$f$的连续点，从而$D(f) \subset \partial I \cup \overline B$，而$\partial I$和$\overline B$都是零面积集（$I$是有界闭矩形，要证明$\partial I$是零面积集，即证明线段是零面积集，这里略证），从而$D(f)$是零测集，所以$f$在$I$上可积。对于$I$的任一分割$\pi = \{ I_1, I_2, \cdots, I_k \}$，由于$\overline B$是零面积集，那么对任何子矩形$I_i$，比如存在点$\boldsymbol{\xi}_i \in I_i$，使得<br>$f(\boldsymbol{\xi}_i) = 0$，从而Riemann和</p><script type="math/tex; mode=display">    \sum_{i=1}^k f(\boldsymbol{\xi_i}) \sigma(I_i) = 0</script><p>由积分的存在性可知</p><script type="math/tex; mode=display">    \int_I f \mathrm{d} \sigma = 0</script><p>Q.E.D.</p><h4 id="定理9"><a href="#定理9" class="headerlink" title="定理9"></a>定理9</h4><blockquote><p>设函数$f, g$在$I$上有界，且集合$B = \{ \boldsymbol{x} \in I, f(\boldsymbol{x}) \ne g(\boldsymbol{x}) \}$为一个零面积集，那么若$f$与$g$有一个在$I$可积，则另一个也在$I$上可积，并且</p><script type="math/tex; mode=display">    \int_I f \mathrm{d} \sigma = \int_I g \mathrm{d} \sigma</script></blockquote><p>证：不妨设$g$在$I$上可积，零$h = f - g$，由<a href="https://gamersover.github.io/2021/06/29/函数积分8/#定理8" target="_blank" rel="noopener">定理8</a>可知，$h$在$I$上可积，且</p><script type="math/tex; mode=display">    \int_I h \mathrm{d} \sigma = 0</script><p>从而</p><script type="math/tex; mode=display">    \int_I f \mathrm{d} \sigma = \int_I h \mathrm{d} \sigma + \int_I g \mathrm{d} \sigma = \int_I g \mathrm{d} \sigma</script><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数积分 </tag>
            
            <tag> 二重积分 </tag>
            
            <tag> 零测集 </tag>
            
            <tag> 零面积集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数积分七：矩形区域的二重积分</title>
      <link href="/2021/06/21/%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%867/"/>
      <url>/2021/06/21/%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%867/</url>
      
        <content type="html"><![CDATA[<h4 id="定义1"><a href="#定义1" class="headerlink" title="定义1"></a>定义1</h4><blockquote><p>定义$f: I \to \mathbb{R}$， 其中$I$是$\mathbb{R}^2$中的闭矩形，$I = [a,b] \times [c, d]$，作$[a,b]$的分割</p><script type="math/tex; mode=display">    \pi_x : a = x_0 < x_1 < \cdots < x_n = b;</script><p>又作$[c,d]$的分割</p><script type="math/tex; mode=display">    \pi_y : c = y_0 < y_1 < \cdots < y_n = d;</script><p>两族平行直线$x = x_i(i=0,1,\cdots,n)$与$y=y_j(j=0,1,\cdots,m)$把$I$分割成$k= n \times m$个子矩形：</p><script type="math/tex; mode=display">    [x_{i-1}, x_i] \times [y_{j-1}, y_j] \quad (i=1,2,\cdots,n; j=1,2,\cdots,m)</script><p>这$k$个子矩形的全体组成$I$的一个分割$\pi = \pi_x \times \pi_y$，用一定次序重排这$k$个子矩形，将它们编号为$I_1,I_2,\cdots, I_k$，在每一个$I_i$中任取一点$\xi_i (i=1,2,\cdots,k)$，作积分和</p><script type="math/tex; mode=display">    \sum_{i=1}^k f(\xi_i) \sigma(I_i) \tag{1}</script><p>其中$\sigma(I_i)$表示$I_i$区域的面积。记</p><script type="math/tex; mode=display">    \Vert \pi \Vert = \max(\mathrm{diam}(I_1), \mathrm{diam}(I_2), \cdots, \mathrm{diam}(I_k))</script><p>这里$\mathrm{diam}(I_i)$表示矩形$I_i$的对角线的长度，称$\Vert \pi \Vert$为分割$\pi$的宽度。令$\boldsymbol{\xi} = (\boldsymbol{\xi_1}, \boldsymbol{\xi_2}, \cdots, \boldsymbol{\xi_k})$，称$\boldsymbol{\xi}$为积分和$(1)$的值点向量，称$\boldsymbol{\xi_1}, \boldsymbol{\xi_2},\cdots, \boldsymbol{\xi_k}$为值点。</p></blockquote><a id="more"></a><h4 id="定义2"><a href="#定义2" class="headerlink" title="定义2"></a>定义2</h4><blockquote><p>如果存在数$A$，使得对任意的给定的$\varepsilon &gt; 0$，存在$\delta &gt; 0$，当$\Vert \pi \Vert &lt; \delta$时，不论值点$\xi_i$在子矩形$I_i$中如何选择，都有</p><script type="math/tex; mode=display">    \left| \sum_{i=1}^k f(\boldsymbol{\xi_i}) \sigma(I_i) - A \right| < \varepsilon</script><p>则称函数$f$在矩形$I$上可积，并将$A$写作</p><script type="math/tex; mode=display">    \iint \limits_I f(x,y) \mathrm{d}x \mathrm{d}y \quad 或 \quad \int_I f \mathrm{d} \sigma</script><p>称之为$f$在矩形$I$上的二重积分，也可简称为$f$在$I$上的积分，这里$f$称为被积函数，$I$称为积分区域。上述定义用极限过程记为</p><script type="math/tex; mode=display">    \lim \limits_{\Vert \pi \Vert \to 0} \sum_{i=1}^k f(\boldsymbol{\xi_i}) \sigma(I_i) = A</script></blockquote><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>如果$f$在$I$上可积，那么$f$必在$I$上有界。</p></blockquote><p>证：与<a href="https://gamersover.github.io/2021/05/14/函数积分3#定理1" target="_blank" rel="noopener">函数积分三的定理1</a>证明方法一样。</p><p>Q.E.D.</p><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>设$f$和$g$在$I$上可积，那么 <br/><br>（1）若$c$为任何常数，那么$cf$在$I$上也可积，并且</p><script type="math/tex; mode=display">    \int_I (cf) \mathrm{d} \sigma = c \int_I f \mathrm{d} \sigma</script><p>（2）$f \pm g$在$I$上可积，并且</p><script type="math/tex; mode=display">    \int_I (f \pm g) \mathrm{d} \sigma = \int_I f \mathrm{d} \sigma \pm \int_I g \mathrm{d} \sigma</script><p>（3）若$f \ge 0$，则</p><script type="math/tex; mode=display">    \int_I f \mathrm{d} \sigma \ge 0</script><p>（4）若$f \ge g$，则</p><script type="math/tex; mode=display">    \int_I f \mathrm{d} \sigma \ge \int_I g \mathrm{d} \sigma</script></blockquote><p>证：由积分的定义易推出（1）（2）（3）；由（2）（3）易推出（4）。</p><p>Q.E.D.</p><h4 id="定义3"><a href="#定义3" class="headerlink" title="定义3"></a>定义3</h4><blockquote><p>设$f$定义在$I$上，有分割</p><script type="math/tex; mode=display">    \pi: I_1, I_2, \cdots, I_k</script><p>则</p><script type="math/tex; mode=display">    S(f, \pi) = \sum_{i=1}^k f(\boldsymbol{\xi_i}) \sigma(I_i)</script><p>称为$f$关于分割$\pi$的Riemann和。令</p><script type="math/tex; mode=display">    m_i = \inf f(I_i), \quad M_i = \sup f(I_i) \quad (i=1,2,\cdots,k)</script><p>定义</p><script type="math/tex; mode=display">    \underline S(f, \pi) = \sum_{i=1}^k m_i \sigma(I_i), \quad \overline S(f, \pi) = \sum_{i=1}^k M_i \sigma(I_i)</script><p>分别称为$f$关于分割$\pi$的下和与上和。</p></blockquote><h4 id="定义4"><a href="#定义4" class="headerlink" title="定义4"></a>定义4</h4><blockquote><p>设分割$\pi = \pi_x \times \pi_y$与$\pi^\prime = \pi_x^\prime \times \pi_y^\prime$是$I$的两个分割，如果$\pi_x \le \pi_x^\prime$且$\pi_y \le \pi^\prime$，那么称分割$\pi$比$\pi^\prime$粗，或者称分割$\pi^\prime$比$\pi$细，记$\pi \le \pi^\prime$。</p></blockquote><h4 id="定理3"><a href="#定理3" class="headerlink" title="定理3"></a>定理3</h4><blockquote><p>设$\pi$和$\pi^\prime$是矩形$I$的两个分割，并且$\pi \le \pi^\prime$，那么</p><script type="math/tex; mode=display">    \underline S(f, \pi) \le \underline S(f, \pi^\prime) \le \overline S(f, \pi^\prime) \le \overline S(f, \pi)</script></blockquote><p>证：与<a href="https://gamersover.github.io/2021/05/14/函数积分3#定理2" target="_blank" rel="noopener">函数积分三的定理2</a>证明方法类似。</p><h4 id="定理4"><a href="#定理4" class="headerlink" title="定理4"></a>定理4</h4><blockquote><p>设$\pi_1$和$\pi_2$是$I$的任何两个分割，那么</p><script type="math/tex; mode=display">    \underline S(f, \pi) \le \overline S(f, \pi)</script></blockquote><p>证：与<a href="https://gamersover.github.io/2021/05/14/函数积分3#定理3" target="_blank" rel="noopener">函数积分三的定理3</a>证明方法类似。</p><h4 id="定义5"><a href="#定义5" class="headerlink" title="定义5"></a>定义5</h4><blockquote><p>所有下和构成的集合有上界，从而有上确界，令</p><script type="math/tex; mode=display">    \underline {\int}_I f \mathrm{d} \sigma = \sup \limits_\pi \underline S(f, \pi)</script><p>称这个数为$f$在$I$上的下积分；而所有上和构成的集合有下界，从而有下确界，令</p><script type="math/tex; mode=display">    \overline {\int}_I f \mathrm{d} \sigma = \inf \limits_\pi \overline S(f, \pi)</script><p>称这个数为$f$在$I$上的上积分。</p></blockquote><h4 id="定理6"><a href="#定理6" class="headerlink" title="定理6"></a>定理6</h4><blockquote><p>等式</p><script type="math/tex; mode=display">    \underline {\int}_I f \mathrm{d} \sigma = \overline {\int}_I \mathrm{d} \sigma</script><p>成立的充分必要条件是，对任意给定的$\varepsilon &gt; 0$，存在$I$的一个分割$\pi$，使得</p><script type="math/tex; mode=display">    \overline S(f, \pi) - \underline S(f, \pi) < \varepsilon</script></blockquote><p>证：必要性。设</p><script type="math/tex; mode=display">    A = \underline {\int}_I f \mathrm{d} \sigma = \overline {\int} \mathrm{d} \sigma</script><p>由下积分的定义可知，对任意给定的$\varepsilon &gt; 0$，存在矩形$I$的一个分割$\pi_1$，使得</p><script type="math/tex; mode=display">    \underline S(f, \pi_1) > A - \frac{\varepsilon}{2}</script><p>又由上积分的定义可知，存在矩形$I$的一个分割$\pi_2$，使得</p><script type="math/tex; mode=display">    \overline S(f, \pi_2) < A + \frac{\varepsilon}{2}</script><p>把分割$\pi_1$与$\pi_2$合在一起得到分割$\pi$，从而有</p><script type="math/tex; mode=display">    A - \frac{\varepsilon}{2} < \underline S(f, \pi_1) \le \underline S(f, \pi) \le \overline S(f, \pi) \le \overline S(f, \pi_2) < A + \frac{\varepsilon}{2}</script><p>从而有</p><script type="math/tex; mode=display">    \overline S (f, \pi) - \underline S(f, \pi) < A + \frac{\varepsilon}{2} - (A - \frac{\varepsilon}{2}) = \varepsilon</script><p>充分性。有</p><script type="math/tex; mode=display">    0 \le \overline \int_I f \mathrm{d} \sigma - \underline \int_I f \mathrm{d} \sigma \le \overline S(f, \pi) - \underline S(f, \pi) < \varepsilon</script><p>由于$\varepsilon$是任意的正数，从而必有</p><script type="math/tex; mode=display">    \underline \int_I f \mathrm{d} \sigma = \overline \int_I f \mathrm{d} \sigma</script><p>Q.E.D.</p><h4 id="定理7"><a href="#定理7" class="headerlink" title="定理7"></a>定理7</h4><blockquote><p>有界函数$f$在矩形$I$上可积的充分必要条件是</p><script type="math/tex; mode=display">    \underline \int_I f \mathrm{d} \sigma = \overline \int_I f \mathrm{d} \sigma</script><p>这个公共的值就是积分值$\displaystyle \int_I f \mathrm{d} \sigma$。</p></blockquote><p>证：必要性。设$f$在$I$上的积分值为$A$，从而对任意的$\varepsilon &gt; 0$，必存在$I$的一个分割$\pi = \{I_1, I_2, \cdots, I_k \}$，对任意的值点$\boldsymbol{\xi_i} \in I_i (i=1,2,\cdots,k) $，有不等式</p><script type="math/tex; mode=display">    A - \varepsilon < \sum_{i=1}^k f(\boldsymbol{\xi_i}) \sigma(I_i) < A + \varepsilon</script><p>由于$\boldsymbol{\xi_i}$是任取的，所以有</p><script type="math/tex; mode=display">    A - \varepsilon \le \underline S(f, \pi) \le \overline S(f, \pi) \le A + \varepsilon</script><p>从而</p><script type="math/tex; mode=display">    A - \varepsilon \le \underline \int_I f \mathrm{d} \sigma \le \overline \int_I f \mathrm{d} \sigma \le A + \varepsilon</script><p>令$\varepsilon \to 0$，可得</p><script type="math/tex; mode=display">    \underline \int_I f \mathrm{d} \sigma = \overline \int_I f \mathrm{d} \sigma = A</script><p>充分性。假设</p><script type="math/tex; mode=display">    \underline \int_I f \mathrm{d} \sigma = \overline \int_I f \mathrm{d} \sigma = A</script><p>成立。要证对任意$\varepsilon &gt; 0$，存在$\delta &gt; 0$，只要$I$的分割$\pi = \{ I_1, I_2, \cdots, I_k \}$满足$\Vert \pi \Vert &lt; \delta$，有</p><script type="math/tex; mode=display">    |S(f, \pi) - A| < \varepsilon</script><p>首先有</p><script type="math/tex; mode=display">    \underline S(f, \pi) \le S(f, \pi) \le \overline S(f, \pi)</script><p>而</p><script type="math/tex; mode=display">    \underline S(f, \pi) \le A \le \overline S(f, \pi)</script><p>所以</p><script type="math/tex; mode=display">    |S(f, \pi) - A| \le \overline S(f, \pi) - \underline S(f, \pi) = \sum_{j=1}^k f(M_j - m_j) \sigma(I_j) \tag{2}</script><p>由于$f$在$I$上有界，不妨设$|f(\boldsymbol{p})| \le M (\boldsymbol{p} \in I)$；而由<a href="https://gamersover.github.io/2021/06/21/函数积分7/#定理6" target="_blank" rel="noopener">定理6</a>可知，存在$I$的分割$\pi_\varepsilon = \{J_1, J_2, \cdots, J_t\}$，使得</p><script type="math/tex; mode=display">    \overline S(f, \pi_\varepsilon) - \underline S(f, \pi_\varepsilon) < \frac{\varepsilon}{2}</script><p>将子矩形$J_i$的每一边平行的向矩形内部收缩同一距离$\delta&gt;0$，得到一个开矩形$\tilde{J_i} \subset J_i (i=1,2,\cdots, t)$，令</p><script type="math/tex; mode=display">    K = I \cap \left( \bigcup \limits_{i=1}^t \tilde {J_i} \right)^c</script><p>显然$K$是一个闭集，取$\delta$充分小，使得</p><script type="math/tex; mode=display">    \sigma(K) < \frac{\varepsilon}{4M}</script><p>这时将$(2)$式写为</p><script type="math/tex; mode=display">     |S(f, \pi) - A| \le  \sum_{j=1}^k f(M_j - m_j) \sigma(I_j) = \sum \nolimits_1 + \sum \nolimits_2</script><p>其中</p><script type="math/tex; mode=display">    \begin{aligned}    \sum \nolimits_1 = \sum_{I_j \subset K} (M_j - m_j) \sigma(I_j) \\    \sum \nolimits_2 = \sum_{I_j \nsubseteq K} (M_j - m_j) \sigma(I_j)    \end{aligned}</script><p>一方面</p><script type="math/tex; mode=display">    \sum \nolimits_1 \le 2M \sum_{I_j \subset K} \sigma(I_j) < 2M \cdot \frac{\varepsilon}{4M} = \frac{\varepsilon}{2}</script><p>另一方面，$\sum \nolimits_2$中的$I_j \nsubseteq K$，从而$I_j$必与某个$\tilde {J_i}$相交，而$\Vert \pi \Vert &lt; \delta$，所以$I_j \subset J_i$，所以</p><script type="math/tex; mode=display">    \begin{aligned}    \sum \nolimits_2 &= \sum_{i=1}^t \sum_{I_j \subset J_i} (M_j - m_j) \sigma(I_j) \\    & \le \sum_{i=1}^t (\sup f(J_i) - \inf f(J_i)) \sum_{I_j \subset J_i} \sigma(I_j) \\    & \le \sum_{i=1}^t (\sup f(J_i) - \inf f(J_i)) \sigma(J_i) \\    & = \overline S(f, \pi) - \underline S(f, \pi) < \frac{\varepsilon}{2}    \end{aligned}</script><p>从而</p><script type="math/tex; mode=display">    \sum \nolimits_1 + \sum \nolimits_2 < \frac{\varepsilon}{2} + \frac{\varepsilon}{2} = \varepsilon</script><p>即</p><script type="math/tex; mode=display">    |S(f, \pi) - A| < \varepsilon</script><p>Q.E.D.</p><h4 id="定理8"><a href="#定理8" class="headerlink" title="定理8"></a>定理8</h4><blockquote><p>设$f$在$I = [a, b] \times [c, d]$上有界，那么以下条件等价： <br/><br>（1）$f$在$I$上可积； <br/><br>（2）$\displaystyle \lim_{\Vert \pi \Vert \to 0} \sum_{i=1}^k \omega_i \sigma(I_i) = 0$，其中$\omega_i = M_i - m_i (i=1,2,\cdots,k)$； <br/><br>（3）对任意的$\varepsilon &gt; 0$，存在$I$的一个分割$\pi$，使得</p><script type="math/tex; mode=display">    \overline S(f, \pi) - \underline S(f, \pi) < \varepsilon</script><p>（4）$\displaystyle \underline \int_I f \mathrm{d} \sigma = \overline \int_I f \mathrm{d} \sigma$。</p></blockquote><p>证：$(2) \Rightarrow (3)$显然；$(3) \Rightarrow (4)$由<a href="https://gamersover.github.io/2021/06/21/函数积分7/#定理6" target="_blank" rel="noopener">定理6</a>可知；$(4) \Rightarrow (1)$由<a href="https://gamersover.github.io/2021/06/21/函数积分7/#定理7" target="_blank" rel="noopener">定理7</a>可知；下面证$（1）\Rightarrow （2）$。假设$f$在$I$上的积分值为$A$，由可积的定义知，对任意的$\varepsilon &gt; 0$，存在$\delta &gt; 0$，使得对于分割$\pi = \{ I_1, I_2, \cdots, I_k \}$满足$\Vert \pi \Vert &lt; \delta$，则对任意的值点$\boldsymbol{\xi_i}$有</p><script type="math/tex; mode=display">    A - \frac{\varepsilon}{2} < \sum_{i=1}^k f(\xi_i) < A + \frac{\varepsilon}{2}</script><p>由于$\boldsymbol{\xi_i}$是任取的，所以</p><script type="math/tex; mode=display">    A - \frac{\varepsilon}{2} \le \underline S(f, \pi) \le \overline S(f, \pi) \le A + \frac{\varepsilon}{2}</script><p>即</p><script type="math/tex; mode=display">    \overline S(f, \pi) - \underline S(f, \pi) = \sum_{i=1}^k \omega_i \sigma(I_i) < \varepsilon</script><p>所以</p><script type="math/tex; mode=display">    \lim_{\Vert \pi \Vert \to 0} \sum_{i=1}^k \omega_i\sigma(I_i) = 0</script><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数积分 </tag>
            
            <tag> 二重积分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数积分六：微积分基本定理</title>
      <link href="/2021/06/05/%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%866/"/>
      <url>/2021/06/05/%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%866/</url>
      
        <content type="html"><![CDATA[<h4 id="定义1：变上限积分"><a href="#定义1：变上限积分" class="headerlink" title="定义1：变上限积分"></a>定义1：变上限积分</h4><blockquote><p>设$f$在$[a,b]$上可积，从而对任何$x \in [a,b]$，$f$在$[a,x]$上也可积，因此定义函数</p><script type="math/tex; mode=display">    F(x) = \int_a^x f(t) \mathrm{d} t</script><p>其中$x$可在$[a,b]$上变化，称$F(x)$为上限变动的积分。</p></blockquote><a id="more"></a><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>设$f$在$[a,b]$上可积，那么变上限积分$\displaystyle F(x) = \int_a^x f(t) \mathrm{d} t$在$[a,b]$上连续。</p></blockquote><p>证：任取一点$x_0 \in (a,b)$，则</p><script type="math/tex; mode=display">    \begin{aligned}    F(x_0 + h) - F(x_0) &= \int_a^{x_0+h} f(t) \mathrm{d} t - \int_a^{x_0} f(t) \mathrm{d} t \\    &= \int_{x_0}^{x_0 + h} f(t) \mathrm{d} t    \end{aligned}</script><p>这里$h$可正可负，但是$x_0 + h \in [a,b]$。由于$f$可知，从而由<a href="https://gamersover.github.io/2021/05/14/函数积分3/#定理1" target="_blank" rel="noopener">函数积分三的定理1</a>可知，$f$有界，设$|f(x)| \le M$。当$h&gt;0$时，由<a href="https://gamersover.github.io/2021/05/28/函数积分5/#定理3" target="_blank" rel="noopener">函数积分五的定理3</a>可知</p><script type="math/tex; mode=display">    |F(x_0 + h) - F(x_0)| = \left| \int_{x_0}^{x_0 + h} f(t) \mathrm{d} t \right| \le \int_{x_0}^{x_0 + h} |f(t)| \mathrm{d} t \le Mh</script><p>当$h &lt; 0$时，</p><script type="math/tex; mode=display">    |F(x_0 + h) - F(x_0)| = \left| \int_{x_0}^{x_0 + h} f(t) \mathrm{d} t \right| = \left| \int_{x_0+h}^{x_0} f(t) \mathrm{d} t \right| \le \int_{x_0+h}^{x_0} |f(t)| \mathrm{d} t \le M (-h) \le M|h|</script><p>所以</p><script type="math/tex; mode=display">    |F(x_0 + h) - F(x_0)| \le |Mh|</script><p>令$h \to 0$，可知$F$在$x_0 \in (a,b)$处连续。$x_0 = a$或$x_0 = b$时，利用上述方法容易证得。</p><p>Q.E.D.</p><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>设函数$f$在$[a,b]$上可积，在点$x_0 \in [a,b]$出连续，那么$F$在$x_0$处可导，且</p><script type="math/tex; mode=display">    F^\prime(x_0) = f(x_0)</script></blockquote><p>证：由<a href="https://gamersover.github.io/2021/06/05/函数积分6/#定理1" target="_blank" rel="noopener">定理1</a>可得</p><script type="math/tex; mode=display">    F(x_0 + h) - F(x_0) = \int_{x_0}^{x_0 + h} f(t) \mathrm{d} t</script><p>从而</p><script type="math/tex; mode=display">    \begin{aligned}    \frac{F(x_0 + h) - F(x_0)}{h} - f(x_0) &= \frac{1}{h} \int_{x_0}^{x_0 + h} f(t) \mathrm{d} t - \frac{1}{h} \int_{x_0}^{x_0 + h} f(x_0) \mathrm{d} t \\    &= \frac{1}{h} \int_{x_0}^{x_0 + h} (f(t) - f(x_0)) \mathrm{d} t    \end{aligned}</script><p>由于$f$在$x_0$处连续，对任意给定的$\varepsilon &gt; 0$，存在$\delta &gt; 0$，使得当$|t - x_0| &lt; \delta$且$t \in (a,b)$时，有</p><script type="math/tex; mode=display">    |f(t) - f(x_0)| < \varepsilon</script><p>现取$0 &lt; |h| &lt; \delta$，从而有</p><script type="math/tex; mode=display">    \begin{aligned}    \left| \frac{F(x_0 + h) - F(x_0)}{h} - f(x_0) \right| &\le \frac{1}{|h|} \left|\int_{x_0}^{x_0 + h} |f(t) - f(x_0)| \mathrm{d} t \right|\\    & < \frac{1}{|h|} \varepsilon |h| = \varepsilon    \end{aligned}</script><p>从而</p><script type="math/tex; mode=display">    F^\prime(x_0) = \lim \limits_{h \to 0} \frac{F(x_0 + h) - F(x_0)}{h} = f(x_0)</script><p>Q.E.D.</p><h4 id="定理3：微积分基本定理"><a href="#定理3：微积分基本定理" class="headerlink" title="定理3：微积分基本定理"></a>定理3：微积分基本定理</h4><blockquote><p>设函数$f$在$[a,b]$上连续，那么</p><script type="math/tex; mode=display">    \frac{\mathrm{d}}{\mathrm{d}x} \int_a^x f(t) \mathrm{d} t = f(x) \quad (a \le x \le b)</script></blockquote><p>证：利用<a href="https://gamersover.github.io/2021/06/05/函数积分6/#定理2" target="_blank" rel="noopener">定理2</a>可直接推出。</p><p>Q.E.D.</p><h4 id="定理4"><a href="#定理4" class="headerlink" title="定理4"></a>定理4</h4><blockquote><p>[a,b]上的连续函数一定有原函数。</p></blockquote><p>证：利用<a href="https://gamersover.github.io/2021/06/05/函数积分6/#定理3" target="_blank" rel="noopener">定理3</a>可直接推出。</p><p>Q.E.D.</p><h4 id="定理5：Newton-Leibniz"><a href="#定理5：Newton-Leibniz" class="headerlink" title="定理5：Newton-Leibniz"></a>定理5：Newton-Leibniz</h4><blockquote><p>设$f$在$[a,b]$上连续，$G$是$f$在$[a,b]$上的任一原函数，那么</p><script type="math/tex; mode=display">    \int_a^b f(x) \mathrm{d} x = G(b) - G(a)</script></blockquote><p>证：由<a href="https://gamersover.github.io/2021/06/05/函数积分6/#定理3" target="_blank" rel="noopener">定理3</a>可知$\displaystyle F(x) = \int_a^x f(t) \mathrm{d} t$是$f$的一个原函数，所以</p><script type="math/tex; mode=display">    \int_a^x f(t) \mathrm{d} t = G(x) + c</script><p>在上式中令$x = a$，得$c = -G(a)$，将$c$代入上式，再令$x=b$即证得。</p><p>Q.E.D.</p><h4 id="定理6"><a href="#定理6" class="headerlink" title="定理6"></a>定理6</h4><blockquote><p>如果函数$G$在$[a,b]$上有连续的导函数，那么</p><script type="math/tex; mode=display">    \int_a^x G^\prime(t) \mathrm{d} t = G(x) - G(a) \quad (a \le x \le b)</script></blockquote><p>证：从<a href="https://gamersover.github.io/2021/06/05/函数积分6/#定理5：Newton-Leibniz" target="_blank" rel="noopener">定理5</a>的证明过程可以立即得出。</p><p>Q.E.D.</p><h4 id="定理7：Taylor公式的积分余项"><a href="#定理7：Taylor公式的积分余项" class="headerlink" title="定理7：Taylor公式的积分余项"></a>定理7：Taylor公式的积分余项</h4><blockquote><p>设函数$f$在$(a,b)$上有直到$n+1$阶的连续导函数，那么对任意固定的$x_0 \in (a,b)$，有</p><script type="math/tex; mode=display">    f(x) = f(x_0) + \frac{1}{1!}f^\prime(x_0) (x - x_0) + \cdots + \frac{1}{n!}f^{(n)} (x_0) (x - x_0)^n + R_n(x)</script><p>其中</p><script type="math/tex; mode=display">    R_n (x) = \frac{1}{n!}\int_{x_0}^x (x - t)^n f^{(n+1)}(t) \mathrm{d} t \quad (a < x < b)</script></blockquote><p>证：记</p><script type="math/tex; mode=display">    T_n(f, x_0;x) = \sum_{k=0}^n \frac{f^{(k)}(x_0)}{k!}(x - x_0)^k</script><p>则</p><script type="math/tex; mode=display">    R_n(x) = f(x) - T_n(f, x_0;x)</script><p>可知</p><script type="math/tex; mode=display">    R_n^{(k)}(x_0) = 0 (k=0,1,\cdots,n), \quad R_n^{(n+1)}(x) = f^{(n+1)}(x)</script><p>连续使用分部积分公式可得</p><script type="math/tex; mode=display">    \begin{aligned}    R_n(x) &= \int_{x_0}^x R^\prime_n(t) \mathrm{d} t = \int_{x_0}^x R^\prime_n(t) \mathrm{d} (t-x) \\    &= (t-x)R^\prime_n(t) \Big|_{x_0}^x - \int_{x_0}^x (t-x)R_n^{\prime\prime} \mathrm{d}t \\    &= -\frac{1}{2} \int_{x_0}^x R_n^{\prime\prime}(t) \mathrm{d} (t - x)^2 \\    &= -\frac{1}{2} (t-x)^2 R_n^{\prime\prime}(t) \Big|_{x_0}^x + \frac{1}{2}\int_{x_0}^x (t - x)^2 R_n^{\prime\prime\prime}(t) \mathrm{d} t \\    &= \frac{1}{2} \int_{x_0}^x (t - x)^2 R^{\prime\prime\prime}(t) \mathrm{d} t \\    &= \cdots \\    &= (-1)^n \frac{1}{n!}\int_{x_0}^x (t - x)^n R_n^{(n+1)} (t) \mathrm{d} t \\    &= \frac{1}{n!} \int_{x_0}^x (x - t)^n f^{(n+1)}(t) \mathrm{d} t    \end{aligned}</script><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数积分 </tag>
            
            <tag> Riemann积分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数积分五：可积函数的性质</title>
      <link href="/2021/05/28/%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%865/"/>
      <url>/2021/05/28/%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%865/</url>
      
        <content type="html"><![CDATA[<h4 id="定理1：积分的可加性"><a href="#定理1：积分的可加性" class="headerlink" title="定理1：积分的可加性"></a>定理1：积分的可加性</h4><blockquote><p>设$c \in (a,b)$，函数$f$在$[a,c],[c,b]$上可积，那么$f$在$[a,b]$上也可积，且</p><script type="math/tex; mode=display">    \int_a^b f(x) \mathrm{d} x = \int_a^c f(x) \mathrm{d} x + \int_c^b f(x) \mathrm{d} x</script></blockquote><a id="more"></a><p>证：由<a href="https://gamersover.github.io/2021/05/25/函数积分4/#定理7：Lebesgue" target="_blank" rel="noopener">Lebesgue定理</a>易知$f$在$[a,b]$上可积，取分割</p><script type="math/tex; mode=display">    \begin{aligned}    & \pi_1: a < a + \frac{1}{n}(c-a) < a+\frac{2}{n}(c-a) < \cdots < c \\    & \pi_2: c < c + \frac{1}{n}(b-c) < a+\frac{2}{n}(b-c) < \cdots < b    \end{aligned}</script><p>而</p><script type="math/tex; mode=display">    \begin{aligned}    \int_a^c f(x) \mathrm{d} x = \lim_{n \to \infty} \sum_{i=1}^n f(a + \frac{i}{n}(c-a)) \frac{1}{n} \\    \int_c^b f(x) \mathrm{d} x = \lim_{n \to \infty} \sum_{i=1}^n f(c + \frac{i}{n}(b-c)) \frac{1}{n}    \end{aligned}</script><p>取分割$\pi = \pi_1 + \pi_2$，即</p><script type="math/tex; mode=display">    \pi: a = x_0 < x_1 < \cdots < x_n < x_{n+1} < \cdots < x_{2n} = b</script><p>其中</p><script type="math/tex; mode=display"> x_i = \left\{     \begin{aligned}    &a+\frac{i}{n}(c - a) &(i=1, 2, \cdots, n) \\    &c+\frac{i-n}{n}(b - c) &(i=n+1, \cdots, 2n)    \end{aligned} \right.</script><p>此时有</p><script type="math/tex; mode=display">    \int_a^c f(x) \mathrm{d} x + \int_c^b f(x) \mathrm{d} x = \lim_{n \to \infty} \sum_{i=1}^{2n} f(x_i) \frac{1}{n}</script><p>有因为$f$在$[a,b]$上可积，所以</p><script type="math/tex; mode=display">    \int_a^b f(x) \mathrm{d} x = \lim_{n \to \infty} \sum_{i=1}^{2n} f(x_i) \frac{1}{n} = \int_a^c f(x) \mathrm{d} x + \int_c^b f(x) \mathrm{d} x</script><p>Q.E.D.</p><h4 id="定义1"><a href="#定义1" class="headerlink" title="定义1"></a>定义1</h4><blockquote><p>为了后续积分的扩展，这里定义两个等式。设函数$f$在$[a,b]$上可积，则定义 <br/><br>（1）$\displaystyle \int_a^a f(x) \mathrm{d} x = 0$ <br/><br>（2）$\displaystyle \int_b^a f(x) \mathrm{d} x = - \int_a^b f(x) \mathrm{d} x$</p></blockquote><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>如果$f$在$[a,b]$上连续且非负，但$f$不恒等于$0$，那么</p><script type="math/tex; mode=display">    \int_a^b f(x) \mathrm{d} x > 0</script></blockquote><p>证：设有一点$x_0 \in [a,b]$，使得$f(x_0) &gt; 0$，则由连续函数的性质可知，存在一个子区间$[\alpha, \beta]$，满足$x_0 \in [\alpha, \beta] \subset [a,b]$，使得对一切$x \in [\alpha, \beta]$有</p><script type="math/tex; mode=display">    f(x) \ge \frac{f(x_0)}{2}</script><p>从而</p><script type="math/tex; mode=display">    \begin{aligned}    \int_a^b f(x) \mathrm{d} x &= \int_a^\alpha f(x) \mathrm{d} x + \int_{\alpha}^{\beta} f(x) \mathrm{d} x + \int_{\beta}^b f(x) \mathrm{d}x \\    &\ge \int_{\alpha}^{\beta} f(x) \mathrm{d} x \ge \int_{\alpha}^{\beta} \frac{f(x_0)}{2} \mathrm{d} x = \frac{f(x_0)}{2} (\beta - \alpha) > 0    \end{aligned}</script><p>Q.E.D.</p><h4 id="定理3"><a href="#定理3" class="headerlink" title="定理3"></a>定理3</h4><blockquote><p>设$f$在$[a,b]$上可积，那么$|f|$也在$[a,b]$上可积，且</p><script type="math/tex; mode=display">    \left| \int_a^b f(x) \mathrm{d} x\right| \le \int_a^b |f(x)| \mathrm{d}x</script></blockquote><p>证：由于$D(|f|) \subset D(f)$，所以$|f|$在$[a,b]$上可积，而</p><script type="math/tex; mode=display">    - |f(x)| \le f(x) \le |f(x)|</script><p>所以</p><script type="math/tex; mode=display">    - \int_a^b |f(x)| \mathrm{d}x \le \int_a^b f(x) \mathrm{d}x \le \int_a^b |f(x)| \mathrm{d}x</script><p>Q.E.D.</p><h4 id="定理4：积分平均值定理"><a href="#定理4：积分平均值定理" class="headerlink" title="定理4：积分平均值定理"></a>定理4：积分平均值定理</h4><blockquote><p>设函数$f$与$g$在$[a,b]$上连续，$g$在$[a,b]$上不改变符号，则存在$\xi \in (a,b)$，使得</p><script type="math/tex; mode=display">    \int_a^b f(x)g(x) \mathrm{d} x = f(\xi) \int_a^b g(x) \mathrm{d} x</script></blockquote><p>证：不妨设当$x \in [a,b]$时，$g(x) \le 0$但不恒等于0，从而$\displaystyle \int_a^b g(x) \mathrm{d} x &gt; 0$。设$m,M$分别是$f$在$[a,b]$上的最小值和最大值，则</p><script type="math/tex; mode=display">    m \le f(x) \le M \quad (a \le x \le b)</script><p>从而</p><script type="math/tex; mode=display">    mg(x) \le f(x)g(x) \le M g(x)</script><p>求积分可得</p><script type="math/tex; mode=display">    m\int_a^b g(x) \mathrm{d} x \le \int_a^b f(x)g(x) \mathrm{d} x \le M\int_a^b g(x) \mathrm{d}x</script><p>所以</p><script type="math/tex; mode=display">    m \le \int_a^b f(x)g(x) \mathrm{d} x (\int_a^b g(x) \mathrm{d} x)^{-1} \le M</script><p>由连续函数的介值定理可知，存在一点$\xi \in (a,b)$，使得</p><script type="math/tex; mode=display">    f(\xi) = \int_a^b f(x)g(x) \mathrm{d} x (\int_a^b g(x) \mathrm{d} x)^{-1}</script><p>Q.E.D.</p><h4 id="定理5"><a href="#定理5" class="headerlink" title="定理5"></a>定理5</h4><blockquote><p>设函数$f$在区间$[a,b]$上连续，则存在一点$\xi \in [a,b]$，使得</p><script type="math/tex; mode=display">    \int_a^b f(x) \mathrm{d} x = f(\xi)(b - a)</script></blockquote><p>证：令<a href="https://gamersover.github.io/2021/05/28/函数积分5/#定理4：积分平均值定理" target="_blank" rel="noopener">定理4</a>中的$g = 1$，即可得。</p><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数积分 </tag>
            
            <tag> Riemann积分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数积分四：Lebesgue定理</title>
      <link href="/2021/05/25/%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%864/"/>
      <url>/2021/05/25/%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%864/</url>
      
        <content type="html"><![CDATA[<h4 id="定义1：零测度集"><a href="#定义1：零测度集" class="headerlink" title="定义1：零测度集"></a>定义1：零测度集</h4><blockquote><p>设$A$为实数的集合，如果对任意给定的$\varepsilon &gt; 0$， 存在至多可数个开区间$\{I_n: n \in \mathbb{N}^*\}$组成$A$的一个开覆盖，并且$\displaystyle \sum_{n=1}^{\infty} |I_n| \le \varepsilon$($|I_n|$表示开区间$I_n$的长度)，那么称$A$是零测度集，简称零测集。</p></blockquote><a id="more"></a><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>至多可数个零测集的并集是零测集。</p></blockquote><p>证：设有可数个零测集</p><script type="math/tex; mode=display">    A_1,A_2,\cdots, A_n,\cdots</script><p>对任意给定的$\varepsilon &gt; 0$和$n \in N^<em>$，存在开区间族$\{I_{ni}: n,i \in \mathbb{N^</em>}\}$使得$\displaystyle A_n \subset \bigcup \limits_{i=1}^\infty I_{ni}$，且$\displaystyle \sum_{i=1}^\infty |I_{ni}| \le \frac{\varepsilon}{2^n}$，此时有</p><script type="math/tex; mode=display">    \bigcup \limits_{i=1}^\infty A_n \subset \bigcup \limits_{i=1}^\infty (\bigcup \limits_{i=1}^\infty I_{ni})</script><p>而</p><script type="math/tex; mode=display">    \sum_{i=1}^\infty \sum_{i=1}^\infty |I_{ni}| \le \sum_{i=1}^\infty \frac{\varepsilon}{2^n} = \varepsilon</script><p>这就证明了$\displaystyle \bigcup \limits_{i=1}^\infty A_i$是零测集。</p><p>Q.E.D.</p><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>设$\omega$是有界函数$f$在$[a,b]$上的振幅，那么</p><script type="math/tex; mode=display">    \omega = \sup \{ |f(y_1) - f(y_2)|: y_1,y_2 \in [a,b] \}</script></blockquote><p>证：用$M$和$m$分别表示$f$在$[a,b]$上的上、下确界，那么由定义可知，$\omega = M - m$，又由于对于任意的$y_1,y_2 \in [a,b] $，有</p><script type="math/tex; mode=display">    m \le f(y_1) \le M, \quad m \le f(y_2) \le M</script><p>从而</p><script type="math/tex; mode=display">    \omega = M - m \ge |f(y_1) - f(y_2)|</script><p>另一方面，由于$M = \sup\{ f(y): y\in [a,b] \}$，$m = \inf\{ f(y): y \in [a,b] \}$，所以对任意的$\varepsilon &gt; 0$，存在$y_1,y_2 \in [a,b]$，使得</p><script type="math/tex; mode=display">    f(y_1) \ge M - \frac{\varepsilon}{2}, \quad f(y_2) \le m + \frac{\varepsilon}{2}</script><p>从而</p><script type="math/tex; mode=display">    |f(y_1) - f(y_2)| \ge f(y_1) - f(y_2) \ge M - m - \varepsilon = \omega - \varepsilon</script><p>所以$\omega$是$\{ |f(y_1) - f(y_2)|: y_1,y_2 \in [a,b] \}$的上确界。</p><p>Q.E.D.</p><h4 id="定理3"><a href="#定理3" class="headerlink" title="定理3"></a>定理3</h4><blockquote><p>设$\omega_f(x, r)$为$f$在$B_r(x)$区间的振幅，则$\lim \limits_{r \to 0^+} \omega_f(x, r)$极限存在，并记</p><script type="math/tex; mode=display">    \omega_f(x) = \lim \limits_{r \to 0^+} \omega_f(x, r)</script><p>称$\omega_f(x)$为$f$在点$x$处的振幅。</p></blockquote><p>证：由于$\omega_f(x, r) \ge 0$，有下界，且当$r$减少时，$f$在$B_r(x)$区间的上确界$M$递减，下确界$m$递增，所以$\omega_f(x, r)$递减，从而$\displaystyle \lim \limits_{r \to 0^+} \omega_f(x, r)$存在。</p><p>Q.E.D.</p><h4 id="定理4"><a href="#定理4" class="headerlink" title="定理4"></a>定理4</h4><blockquote><p>函数$f$在$x \in I$处连续的充分必要条件是$\omega_f(x) = 0$。</p></blockquote><p>证：必要性。设$f$在$x \in I$处连续，则对任意给定的$\varepsilon &gt; 0$，当$r &gt; 0$充分小时，存在$y \in B_r(x)$时，有</p><script type="math/tex; mode=display">    |f(y) - f(x)| < \frac{\varepsilon}{2}</script><p>从而当$y_1,y_2 \in B_r(x)$时，有</p><script type="math/tex; mode=display">    |f(y_1) - f(y_2)| \le |f(y_1) - f(x)| + |f(x) - f(y_2)| < \varepsilon</script><p>所以$\omega_f(x, r) \le \varepsilon$，令$r \to 0^+$，此时有$0 &lt; \omega_f(x) \le \varepsilon$，由于$\varepsilon$是任取的，所以$\omega_f(x) = 0$。<br/><br>充分性。设$\omega_f(x) = 0$，则对任意的$\varepsilon &gt; 0$，存在$r &gt; 0$，使得</p><script type="math/tex; mode=display">    \omega_f(x, r) < \varepsilon</script><p>从而对任何的$y \in B_r(x)$，有</p><script type="math/tex; mode=display">    |f(x) - f(y)| \le \omega_f(x, r) < \varepsilon</script><p>即表明$f$在点$x$处连续。</p><p>Q.E.D.</p><h4 id="定理5"><a href="#定理5" class="headerlink" title="定理5"></a>定理5</h4><blockquote><p>对$\delta &gt; 0$，记</p><script type="math/tex; mode=display">    D_\delta = \{ x \in [a, b]: \omega_f(x) \ge \delta\}</script><p>记$D(f)$为$f$在$[a,b]$上不连续点的全体。则有</p><script type="math/tex; mode=display">    D(f) = \bigcup \limits_{n=1}^\infty D_{1/n}</script></blockquote><p>证：任取$x \in \bigcup \limits_{n=1}^\infty D_{1/n}$，知$\omega_f(x) &gt; 0$，从而由<a href="https://gamersover.github.io/2021/05/25/函数积分4/#定理4" target="_blank" rel="noopener">定理4</a>可知$x$是$f$的不连续点，从而</p><script type="math/tex; mode=display">    \bigcup \limits_{n=1}^\infty D_{1/n} \subset D(f) \tag{1}</script><p>反之，任取$x \in D(f)$，可知$\omega_f(x) &gt; 0$，从而存在充分大的$m \in \mathbb{N^*}$，使得$\displaystyle \omega_f(x) \ge \frac{1}{m}$，从而有$x \in D_{1/m}$，所以</p><script type="math/tex; mode=display">    D(f) \subset \bigcup \limits_{i=1}^\infty D_{1/n} \tag{2}</script><p>从而由(1)和(2)可知</p><script type="math/tex; mode=display">    D(f) = \bigcup \limits_{i=1}^\infty D_{1/n}</script><p>Q.E.D.</p><h4 id="定理6"><a href="#定理6" class="headerlink" title="定理6"></a>定理6</h4><blockquote><p>设$f:[a,b] \to \mathbb{R}$。如果存在一列区间$(\alpha_j, \beta_j)(j=1,2,\cdots,)$，使得$D(f) \subset \bigcup \limits_{i=1}^\infty (\alpha_j, \beta_j)$，记$K = [a,b] \backslash \bigcup \limits_{i=1}^\infty (\alpha_j, \beta_j)$，那么对任意的$\varepsilon &gt; 0$，存在$\delta &gt; 0$，当$x \in K, y \in [a,b]$，且$|x - y| &lt; \delta$时，有$|f(x) - f(y)| &lt; \varepsilon$。</p></blockquote><p>证：反证法。如果结论不成立，则必存在$\varepsilon_0 &gt; 0$以及$s_n \in K, t_n \in [a,b]$，使得当$|s_n - t_n| &lt; 1 / n$时，有</p><script type="math/tex; mode=display">    |f(s_n) - f(t_n)| \ge \varepsilon_0</script><p>由于$\{s_n\} \subset K \subset [a,b]$，存在必有$\{s_n\}$的子列$\{s_{k_n}\}$，使得</p><script type="math/tex; mode=display">    \lim \limits_{n \to \infty} s_{k_n} = s^*</script><p>又由于$K$是闭集，从而$s^* \in K$。而</p><script type="math/tex; mode=display">    \begin{aligned}    |t_{k_n} - s^*| &\le |t_{k_n} - s_{k_n}| + |s_{k_n} - s^*| \\    & \le \frac{1}{k_n} + |s_{k_n} - s^*| \le \frac{1}{n} + |s_{k_n} - s^*|    \end{aligned}</script><p>令$n \to \infty$，得$t_{k_n} \to s^<em>$，由于$s^</em> \in K$，所以$f$在$s^*$处连续，且</p><script type="math/tex; mode=display">    |f(s_{k_n}) - f(t_{k_n})| \ge \varepsilon_0</script><p>令上式左边$n \to \infty$，得</p><script type="math/tex; mode=display">    \varepsilon_0 \le |f(s^*) - f(s^*)| = 0</script><p>显然与$\varepsilon_0 &gt; 0$矛盾。</p><p>Q.E.D.</p><h4 id="定理7：Lebesgue"><a href="#定理7：Lebesgue" class="headerlink" title="定理7：Lebesgue"></a>定理7：Lebesgue</h4><blockquote><p>设函数$f$在有限区间$[a,b]$上有界，那么$f$在$[a.b]$上Riemann可积的充分必要条件是$D(f)$是一个零测集。</p></blockquote><p>证：必要性。只需要证明对任意的$\delta &gt; 0$，$D_{\delta}$是零测集，从而$D_1,D_{1/2},\cdots$都是零测集，再由<a href="https://gamersover.github.io/2021/05/25/函数积分4/#定理5" target="_blank" rel="noopener">定理5</a>可知$D(f)$是零测集。由于$f$可积，从而由<a href="https://gamersover.github.io/2021/05/14/函数积分3/#定理5" target="_blank" rel="noopener">函数积分三的定理5</a>可知对任意给定的$\varepsilon &gt; 0$，存在$[a,b]$上的一个分割</p><script type="math/tex; mode=display">    \pi: a = x_0 < x_1 < \cdots < x_m = b</script><p>使得</p><script type="math/tex; mode=display">    \sum_{i=1}^m \omega_i \Delta x_i < \frac{\delta \epsilon}{2}</script><p>设$x \in D_{\delta}$，可知如果$x$不是$x_0,x_1,\cdots, x_m$中的任一个，则存在$i \in {1,2,\cdots,m}$，使得$x \in (x_{i-1}, x_i)$，因此存在充分小的$r&gt;0$，使得$(x-r, x+r) \subset (x_{i-1}, x_i)$，于是$f$在$(x_{i-1}, x_i)$上的振幅</p><script type="math/tex; mode=display">    \omega_i \ge w_f(x, r) \ge w_f(x) \ge \delta</script><p>如果用$\sum^\prime$和$\bigcup^\prime$分别表示对满足$D_{\delta} \cap (x_{i-1}, x_i) \ne \varnothing$的$i$的求和与求并，则</p><script type="math/tex; mode=display">    \frac{\delta \epsilon}{2} > \sum \limits_{i=1}^m \omega_i \Delta x_i \ge \sum \nolimits^\prime \omega_i \Delta x_i \ge \delta \sum \nolimits^\prime \Delta x_i</script><p>所以</p><script type="math/tex; mode=display">    \sum \nolimits^\prime \Delta x_i \le \frac{\varepsilon}{2}</script><p>而</p><script type="math/tex; mode=display">    D_\delta \subset (\bigcup \nolimits^\prime (x_{i-1}, x_i)) \bigcup \{ x_0, x_1, \cdots,x_m \}</script><p>自然有</p><script type="math/tex; mode=display">    D_\delta \subset (\bigcup \nolimits^\prime (x_{i-1}, x_i)) \bigcup (\bigcup_{j=0}^m (x_j - \frac{\varepsilon}{4(m+1)}, x_j + \frac{\varepsilon}{4(m+1)}))</script><p>而</p><script type="math/tex; mode=display">    \sum \nolimits^\prime \Delta x_i + (m+1) \frac{2\varepsilon}{4(m+1)} < \frac{\varepsilon}{2} + \frac{\varepsilon}{2} = \varepsilon</script><p>所以$D_\delta$是零测集。<br/></p><p>充分性。设$D(f)$是一个零测集，并且对任意给定的$\varepsilon &gt; 0$，存在一列开区间$(\alpha_i, \beta_i)(i=1,2,\cdots)$，使得</p><script type="math/tex; mode=display">    D(f) \subset \bigcup \limits_{i=1}^\infty (\alpha_i, \beta_i), \quad 且 \quad \sum_{i=1}^\infty (\beta_i - \alpha_i) < \frac{\varepsilon}{2\omega}</script><p>这里$\omega$是$f$在$[a,b]$上的振幅。令</p><script type="math/tex; mode=display">    K = [a, b] \backslash \bigcup \limits_{i=1}^\infty (\alpha_i, \beta_i)</script><p>由<a href="https://gamersover.github.io/2021/05/25/函数积分4/#定理6" target="_blank" rel="noopener">定理6</a>可知，对上述的$\varepsilon &gt; 0$，存在$\delta &gt; 0$， 使得当$x \in K, y \in [a, b]$且$|x - y| &lt; \delta$时，有</p><script type="math/tex; mode=display">    |f(x) - f(y)| < \frac{\varepsilon}{4(b - a)}</script><p>现取分割</p><script type="math/tex; mode=display">    \pi : a = x_0 < x_1 < \cdots < x_n = b</script><p>且$\Vert \pi \Vert &lt; \delta$，记</p><script type="math/tex; mode=display">    \sum_{i=1}^\infty \omega_i \Delta x_i = \sum \nolimits_1 \omega_i \Delta x_i + \sum \nolimits_2 \omega_i \Delta x_i</script><p>其中$\sum_1$表示对满足$K \cap (x_{i-1}, x_i) \ne \varnothing$的$i$的求和，$\sum_2$表示对满足$K \cap (x_{i-1}, x_i) = \varnothing$的$i$的求和。对$\sum_1$中的项，任取$y_i \in K \cap (x_{i-1}, x_i)$，由<a href="https://gamersover.github.io/2021/05/25/函数积分4/#定理6" target="_blank" rel="noopener">定理6</a>得</p><script type="math/tex; mode=display">    \begin{aligned}    \omega_i &= sup\{ |f(z_1) - f(z_2)|: z_1, z_2 \in [x_{i-1}, x_i] \} & \\    &\le sup\{ |f(z_1) - f(y_i)| + |f(z_2) - f(y_i)|: z_1,z_2 \in [x_{i-1}, x_i], y_i \in K \cap (x_{i-1}, x_i)\} \\    & \le \frac{\varepsilon}{2(b-a)}    \end{aligned}</script><p>所以</p><script type="math/tex; mode=display">    \sum \nolimits_1 \omega_i \Delta x_i < \frac{\varepsilon}{2(b-a)} (b-a) = \frac{\varepsilon}{2}</script><p>对于$\sum_2$中的项，当$x \in (x_{i-1}, x_i)$时，必有$x \notin K$，所以$\displaystyle x \in \bigcup_{i=1}^\infty (\alpha_i, \beta_i)$，即$\displaystyle (x_{i-1}, x_i) \subset \bigcup_{i=1}^\infty (\alpha_i, \beta_i)$，所以</p><script type="math/tex; mode=display">    \sum \nolimits_2 \omega_i \Delta x_i \le \omega \sum \nolimits_2 \Delta x_i < \omega \frac{\varepsilon}{2\omega} = \frac{\varepsilon}{2}</script><p>所以</p><script type="math/tex; mode=display">    \sum_{i=1}^\infty \omega_i \Delta x_i < \varepsilon</script><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数积分 </tag>
            
            <tag> Riemann积分 </tag>
            
            <tag> 零测集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数积分三：可积性理论</title>
      <link href="/2021/05/14/%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%863/"/>
      <url>/2021/05/14/%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%863/</url>
      
        <content type="html"><![CDATA[<h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>设函数$f$在$[a,b]$上Riemann可积，则$f$在$[a,b]$上有界。</p></blockquote><a id="more"></a><p>证：设$f$在$[a,b]$上的积分为$I$，则由<a href="https://gamersover.github.io/2021/04/28/函数积分2/#定义2：Riemann积分" target="_blank" rel="noopener">函数积分二的定义2</a>可知，对$\varepsilon = 1$，必存在一个分割$\pi$，使得</p><script type="math/tex; mode=display">    \left| \sum_{i=1}^nf(\xi_i) \Delta x_i - I \right| < I</script><p>这里值点$\xi_i \in [x_{i-1}, x_i] (1 \le i \le n)$可以任取，由上式可得</p><script type="math/tex; mode=display">    \left| \sum_{i=1}^n f(\xi_i) \Delta x_i \right| < |I| + 1</script><p>从而有</p><script type="math/tex; mode=display">    |f(\xi_1)| \Delta x_1 < |I| + 1 + \left| \sum_{i=2}^n f(\xi_i) \Delta x_i \right|</script><p>即</p><script type="math/tex; mode=display">    |f(\xi_1)| < \frac{1}{\Delta x_1} \left( |I| + 1 + \left| \sum_{i=2}^n f(\xi_i) \Delta x_i \right| \right)</script><p>此时，把在$[x_{i-1}, x_i]$中的$\xi_i$固定下来$(i=2,3,\cdots,n)$，则上式右边是一个确定的正数，而$\xi_i$可以在$[x_0,x_1]$上任取，这就证明了$f$在区间$[x_0,x_1]$上有界。同理$f$在子区间$[x_{i-1},x_i] (i=2,3,\cdots,n)$上都是有界的，所以$f$在区间$[a,b]$上有界。</p><p>Q.E.D.</p><h4 id="定义1：振幅"><a href="#定义1：振幅" class="headerlink" title="定义1：振幅"></a>定义1：振幅</h4><blockquote><p>设函数$f$在区间$[a,b]$上有界，用$M$与$m$分别表示$f$在$[a,b]$上的上确界和下确界，令$\omega = M - m$，称$\omega$为函数$f$在区间$[a,b]$上的振幅。</p></blockquote><h4 id="定义2：上和与下和"><a href="#定义2：上和与下和" class="headerlink" title="定义2：上和与下和"></a>定义2：上和与下和</h4><blockquote><p>设函数$f$在区间$[a,b]$上有界，对$[a,b]$上的任何分割</p><script type="math/tex; mode=display">    \pi : a = x_0 < x_1 < \cdots < x_n = b</script><p>在$\pi$的第$i$个子区间$[x_i-1, x_i]$上$f$的上确界与下确界分别记为$M_i$与$m_i$，并令$\omega_i = M_i - m_i$，称$\omega_i$为$f$在$[x_{i-1}, x_i]$上的振幅，这里$i=1,2,\cdots,n$。定义</p><script type="math/tex; mode=display">    \overline S (f, \pi) = \sum_{i=1}^n M_i \Delta x_i, \quad \underline S(f, \pi) = \sum_{i=1}^n m_i \Delta x_i</script><p>并分别称它们是$f$关于分割$\pi$的上和与下和。</p></blockquote><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>设$\pi$与$\pi^\prime$是$[a,b]$上的两个分割，其中$\pi^\prime$是在$\pi$的分点上多加了$k$个新的分点而成的，则</p><script type="math/tex; mode=display">    \begin{aligned}    \underline S(f, \pi) \le \underline S(f, \pi^\prime) \le \underline S(f, \pi) + k\omega \Vert \pi \Vert \\    \overline S (f, \pi) \ge \overline S(f, \pi^\prime) \ge \overline S(f, \pi) - k \omega \Vert \pi \Vert    \end{aligned}</script></blockquote><p>证：首先考虑$k=1$的情况，即$\pi^\prime$是在$\pi$的分点上添加了1个新的分点，不失一般性，可设在第$i$个区间$[x_{i-1}, x_i]$内再加上一个分点$x^*$。即</p><script type="math/tex; mode=display">    \pi^\prime : a = x_0 < x_1 < \cdots x_{i-1} < x^* <  x_i < \cdots < a_n = b</script><p>这时有</p><script type="math/tex; mode=display">    \begin{aligned}    \underline S(f, \pi) - \underline S(f, \pi^\prime) &= m_i \Delta x_i - ((x^* - x_{i-1}) \inf f([x_{i-1}, x^*]) + (x_i - x^*) \inf f([x^*, x_i])) \\    & \le m_i \Delta x_i - ((x^* - x_{i-1}) m_i + (x_i - x^*) m_i)  \\    &= 0    \end{aligned}</script><p>即$ \underline S(f, \pi) \le \underline S(f, \pi^\prime) $，另一方面，显然有</p><script type="math/tex; mode=display">    \begin{aligned}    \underline S(f, \pi) - \underline S(f, \pi^\prime) &= m_i \Delta x_i - ((x^* - x_{i-1}) \inf f([x_{i-1}, x^*]) + (x_i - x^*) \inf f([x^*, x_i])) \\    & \ge m_i \Delta x_i - ((x^* - x_{i-1}) M_i + (x_i - x^*) M_i)  \\    & = -\omega_i \Delta x_i \ge -\omega_i \Vert \pi \Vert \ge \omega \Vert \pi \Vert    \end{aligned}</script><p>即$ \underline S(f, \pi^\prime) \le \underline S(f, \pi) + \omega \Vert \pi \Vert$。<br>从而得到</p><script type="math/tex; mode=display">    \underline S(f, \pi) \le \underline S(f, \pi^\prime) \le \underline S(f, \pi) + \omega \Vert \pi \Vert</script><p>类似地，可以得到</p><script type="math/tex; mode=display">    \overline S (f, \pi) \ge \overline S(f, \pi^\prime) \ge \overline S(f, \pi) - \omega \Vert \pi \Vert</script><p>从而，易知当$k$为愿意正整数时，结论成立。</p><p>Q.E.D.</p><h4 id="定理3"><a href="#定理3" class="headerlink" title="定理3"></a>定理3</h4><blockquote><p>对于任意两个分割，一个分割的下和总是不超过另一个分割的上和。</p></blockquote><p>证：设$\pi_1$与$\pi_2$是$[a,b]$上的两个分割，如果$\pi_1$的所有分点都是$\pi_2$的分点，则称分割$\pi_2$比$\pi_1$更细或者分割$\pi_1$比$\pi_2$更粗，记为$\pi_1 \le \pi_2$；将$\pi_1$的分点与$\pi_2$的分点合并组成新的分割记为$\pi = \pi_1 + \pi_2$，则显然有$\pi_1 + \pi_2 \le \pi_i (i=1,2)$，则由<a href="https://gamersover.github.io/2021/05/14/函数积分3/#定理2" target="_blank" rel="noopener">定理2</a>可知</p><script type="math/tex; mode=display">    \underline S(f, \pi_1) \le \underline S(f, \pi) \le \overline S(f, \pi) \le \overline S(f, \pi_2)</script><p>Q.E.D.</p><h4 id="定义3：上积分和下积分"><a href="#定义3：上积分和下积分" class="headerlink" title="定义3：上积分和下积分"></a>定义3：上积分和下积分</h4><blockquote><p>所有上和组成的集合有下界，从而有下确界，用$\overline I$表示上和的下确界，并称之为$f$在$[a,b]$上的上积分；所有下和组成的集合有上界，从而有上确界，用$\underline I$表示下和的上确界，并称之为$f$在$[a,b]$上的下积分；并有</p><script type="math/tex; mode=display">    \underline f(f, \pi_1) \le \underline I \le \overline I \le \overline S(f, \pi_2)</script><p>这里$\pi_1$与$\pi_2$是$[a,b]$上的任意两个分割。</p></blockquote><h4 id="定理4：Darboux"><a href="#定理4：Darboux" class="headerlink" title="定理4：Darboux"></a>定理4：Darboux</h4><blockquote><p>对$[a,b]$上的任意有界函数，有</p><script type="math/tex; mode=display">    \lim \limits_{\Vert \pi \Vert \to 0} \overline S(f, \pi) = \overline I, \quad  \lim \limits_{\Vert \pi \Vert \to 0} \underline S(f, \pi) = \underline I</script></blockquote><p>证：这里证明第二个等式，第一个等式的证明方法类似。按照定义，有</p><script type="math/tex; mode=display">    \underline I = \sup_m  \underline S(f, \pi)</script><p>从而对任意的$\varepsilon &gt; 0$，存在$[a,b]$上的一个分割$\pi_0$，使得</p><script type="math/tex; mode=display">    \underline S (f, \pi_0) > \underline I - \frac{\varepsilon}{2}</script><p>设$\pi_0$有$l$个内分点，将$\pi_0$和$\pi$的分点组合称新的分割$\pi^\prime$，则$\pi^\prime$是在$\pi$的分点基础上至多添加了$l$个分点的分割，从而由<a href="https://gamersover.github.io/2021/05/14/函数积分3/#定理2" target="_blank" rel="noopener">定理2</a>可知，</p><script type="math/tex; mode=display">    \underline S(f, \pi^\prime) \le \underline S(f, \pi) + l\omega \Vert \pi \Vert</script><p>则</p><script type="math/tex; mode=display">    \underline S(f, \pi) \ge \underline S(f, \pi^\prime) - l\omega \Vert \pi \Vert \ge \underline S(f, \pi_0) - l\omega \Vert \pi \Vert > \underline I - \frac{\varepsilon}{2} - l\omega \Vert \pi \Vert</script><p>即</p><script type="math/tex; mode=display">    \underline I - \underline S(f, \pi) < \frac{\varepsilon}{2} + l \omega \Vert \pi \Vert</script><p>所以对任意$\varepsilon &gt; 0$，只要有</p><script type="math/tex; mode=display">    \Vert \pi \Vert < \frac{\varepsilon}{2l\omega + 1}</script><p>则</p><script type="math/tex; mode=display">    0 < \underline I - \underline S(f, \pi) < \frac{\varepsilon}{2} + \frac{\varepsilon}{2} = \varepsilon</script><p>即</p><script type="math/tex; mode=display">    \lim \limits_{\Vert \pi \Vert \to 0} \underline S(f, \pi) = \underline I</script><p>Q.E.D.</p><h4 id="定理5"><a href="#定理5" class="headerlink" title="定理5"></a>定理5</h4><blockquote><p>设函数$f:[a,b] \to \mathbb{R}$有界，则以下三个条件互相等价： <br/><br>（1）$f$在$[a,b]$上可积； <br/><br>（2）$\displaystyle \lim \limits_{\Vert \pi \Vert \to 0} \sum_{i=1}^n \omega_i \Delta x_i = 0$，其中$\omega_i = M_i - m_i$是$f$在$[x_{i-1}, x_i] (i=1,2,\cdots,n)$上的振幅； <br/><br>（3）$\underline I = \overline I$。</p></blockquote><p>证：$(1)\Rightarrow (2)$<br>设$f$在$[a,b]$上的积分值为$I$，则对任意的$\varepsilon &gt; 0$，存在$\delta &gt; 0$，使得对任意满足$\Vert \pi \Vert &lt; \delta$的分割$\pi$，有</p><script type="math/tex; mode=display">    I - \frac{\varepsilon}{3} < \sum_{i=1}^n f(\xi_i) \Delta x_i < I + \frac{\varepsilon}{3}</script><p>对一切值点$\xi_i \in [x_{i-1}, x_i] (i=1,2,\cdots,n)$成立，从而有</p><script type="math/tex; mode=display">    I - \frac{\varepsilon}{3} \le \underline S(f, \pi) \le \overline S(f, \pi) \le I - \frac{\varepsilon}{3}</script><p>从而有</p><script type="math/tex; mode=display">    0 < \sum_{i=1}^n \omega_i \Delta x_i \le I - \frac{2}{3}\varepsilon < \varepsilon</script><p>$(2)\Rightarrow (3)$<br>若（2）成立，则有</p><script type="math/tex; mode=display">    0 \le \overline I - \underline I \le \overline S(f, \pi) - \underline S(f, \pi) = \sum \limits_{i=1}^n \omega_i \Delta x_i < \varepsilon</script><p>由于$\varepsilon$是任何的正数，所以$\overline I = \underline I$。<br>$(3) \Rightarrow (1)$<br>设$\overline I = \underline I = I$，则对任意的分割$\pi$，有</p><script type="math/tex; mode=display">    \underline S(f, \pi) \le \sum_{i=1}^n f(\xi_i) \Delta x_i \le \overline S(f, \pi)</script><p>两边同时取极限$\Vert \pi \Vert \to 0$，得到</p><script type="math/tex; mode=display">    \underline I \le \lim \limits_{\Vert \pi \Vert \to 0} \sum_{i=1}^n f(\xi_i) \Delta x_i \le \overline I</script><p>所以</p><script type="math/tex; mode=display">    \lim \limits_{\Vert \pi \Vert \to 0} \sum_{i=1}^n f(\xi_i) \Delta x_i = I</script><p>即$f$在$[a,b]$上可积。</p><p>Q.E.D.</p><h4 id="定理6"><a href="#定理6" class="headerlink" title="定理6"></a>定理6</h4><blockquote><p>设$f$是定义在$[a,b]$上的单调函数，则$f$在$[a,b]$上可积。</p></blockquote><p>证：不失一般性，不妨设$f$是递增函数，若$f(a)=f(b)$，则$f$在$[a,b]$上是常数，显然可积。下面设$f(b) &gt; f(a)$，对任意给定的$\varepsilon &gt; 0$，有</p><script type="math/tex; mode=display">    \begin{aligned}         0 & \le \sum_{i=1}^n \omega_i \Delta x_i = \sum \limits_{i=1}^n (M_i - m_i) \Delta x_i \\        & \le \sum_{i=1}^n (f(x_i) - f(x_{i-1})) \Delta x_i \\        & \le \Vert \pi \Vert (f(b) - f(a))    \end{aligned}</script><p>所以取$\displaystyle \delta = \frac{\varepsilon}{f(b) - f(a)}$，只要分割$\pi$满足$\Vert \pi \Vert &lt; \delta$，就有</p><script type="math/tex; mode=display">    0 < \sum \limits_{i=1}^n \omega_i \Delta x_i < \varepsilon</script><p>所以$f$在$[a,b]$上可积。</p><p>Q.E.D.</p><h4 id="定理7"><a href="#定理7" class="headerlink" title="定理7"></a>定理7</h4><blockquote><p>设$f: [a,b] \to \mathbb{R}$是连续函数，则$f$在$[a,b]$上可积。</p></blockquote><p>证：由于$f$在$[a,b]$上一致连续，所以对任意给定的$\varepsilon &gt; 0$，必有$\delta &gt; 0$，使得当$s, t \in [a,b]$且$|s - t| &lt; \delta$时，有</p><script type="math/tex; mode=display">    |f(s) - f(t)| < \frac{\varepsilon}{b - a}</script><p>对$[a,b]$上的一个分割</p><script type="math/tex; mode=display">    \pi: a = x_0 < x_1 < \cdots < x_n = b</script><p>设</p><script type="math/tex; mode=display">    M_i = f(s_i), \quad m_i = f(t_i)</script><p>其中$s_i, t_i \in [x_{i-1}, x_i] (i=1,2,\cdots,n)$，只要$\Vert \pi \Vert &lt; \delta$，就有</p><script type="math/tex; mode=display">    |s_i - t_i| \le \Delta x_i \le \Vert \pi \Vert < \delta</script><p>从而有</p><script type="math/tex; mode=display">    \begin{aligned}     \sum_{i=1}^n \omega_i \Delta x_i = \sum \limits_{i=1}^n (M_i - m_i) \Delta x_i &= \sum \limits_{i=1}^n (f(s_i) - f(t_i)) \Delta x_i \\    & < \frac{\varepsilon}{b - a} \sum_{i=1}^n \Delta x_i = \varepsilon    \end{aligned}</script><p>所以$f$在$[a,b]$上可积。</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数积分 </tag>
            
            <tag> Riemann积分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UI开发之pyQt5-3：按钮类控件</title>
      <link href="/2021/05/14/UI%E5%BC%80%E5%8F%91%E4%B9%8BpyQt5-3/"/>
      <url>/2021/05/14/UI%E5%BC%80%E5%8F%91%E4%B9%8BpyQt5-3/</url>
      
        <content type="html"><![CDATA[<p>按钮类控件主要包含：</p><ul><li>QPushButton：普通按钮</li><li>QRadioButton：单选框按钮</li><li>QCheckBox：多选框按钮</li></ul><a id="more"></a><h3 id="QPushButton-（普通按钮）"><a href="#QPushButton-（普通按钮）" class="headerlink" title="QPushButton （普通按钮）"></a>QPushButton （普通按钮）</h3><p>展示：</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UI开发 </tag>
            
            <tag> Qt </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode题解23：合并K个升序链表</title>
      <link href="/2021/05/05/leetcode%E9%A2%98%E8%A7%A323/"/>
      <url>/2021/05/05/leetcode%E9%A2%98%E8%A7%A323/</url>
      
        <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>该题来自于<a href="https://leetcode-cn.com/problems/merge-k-sorted-lists" target="_blank" rel="noopener">力扣第23题</a></p><p>给你一个链表数组，每个链表都已经按升序排列。<br>请你将所有链表合并到一个升序链表中，返回合并后的链表。<br><a id="more"></a></p><p>示例 1：</p><blockquote><p>输入：lists = [[1,4,5],[1,3,4],[2,6]]<br>输出：[1,1,2,3,4,4,5,6]<br>解释：链表数组如下：<br>[<br>    1-&gt;4-&gt;5,<br>    1-&gt;3-&gt;4,<br>    2-&gt;6<br>]<br>将它们合并到一个有序链表中得到。<br>1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4-&gt;5-&gt;6</p></blockquote><p>示例 2：</p><blockquote><p>输入：lists = []<br>输出：[]</p></blockquote><p>示例 3：</p><blockquote><p>输入：lists = [[]]<br>输出：[]</p></blockquote><p>提示：</p><ul><li><code>k == lists.length</code></li><li><code>0 &lt;= k &lt;= 10^4</code></li><li><code>0 &lt;= lists[i].length &lt;= 500</code></li><li><code>-10^4 &lt;= lists[i][j] &lt;= 10^4</code></li><li><code>lists[i]</code> 按 升序 排列</li><li><code>lists[i].length</code> 的总和不超过 <code>10^4</code></li></ul><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>该题的想法应该很简单：利用归并排序的思想，利用<code>k</code>个指针分别指向<code>k</code>个链表的头，然后比较<code>k</code>个指针指向的数的大小，将最小的那个添加到结果链表中，然后将取得最小值的那个链表的指针指向下个结点，接着继续比较<code>k</code>个指针指向的数的大小，重复上述步骤。</p><p>该题关键在于是不是每次都需要重新比较<code>k</code>个数的大小，这样比较每次都要<code>o(klogk)</code>的时间复杂度。显然不是，对于一个已经排好序的数列，每次只需要进出一个数，这时可以考虑用最小堆实现的优先队列，该数据结构可以在排好序的数组中插入一个新的数，且时间复杂度降到<code>o(logk)</code>。关于最大堆最小堆的原理可以查看这篇博客<a href="https://blog.csdn.net/cetrol_chen/article/details/80377552" target="_blank" rel="noopener">java数据结构：基于树的堆</a>。</p><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><ol><li>使用最小堆维护一个优先队列<code>pqueue</code></li><li>遍历所有链表的头指针，并添加到<code>pqueue</code></li><li>初始化结果伪链表头<code>fhead</code>和当前结点<code>curr=fhead</code>，进入循环体，直到<code>pqueue</code>为空</li><li>令<code>node=pqueue.pop()</code>，并将<code>node</code>添加到结果链表中<code>curr-&gt;next = node</code>，更新<code>curr=curr-&gt;next</code></li><li>如果<code>node.next</code>不为空指针，则将<code>node.next</code>添加到<code>pqueue</code>中，回到第4步，并直到循环结束</li><li>返回<code>fhead-&gt;next</code></li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><details open><summary>python3</summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> heapq</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ListNode</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, val=<span class="number">0</span>, next=None)</span>:</span></span><br><span class="line">        self.val = val</span><br><span class="line">        self.next = next</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mergeKLists</span><span class="params">(self, lists)</span>:</span></span><br><span class="line">        plist = []</span><br><span class="line">        <span class="comment"># 由于headq不能自定义比较器，所以需要一个序号i，在结点的val相同时，比较序号来排序</span></span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> node <span class="keyword">in</span> lists:</span><br><span class="line">            <span class="keyword">if</span> node <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                heapq.heappush(plist, (node.val, i, node))</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        fhead = ListNode()</span><br><span class="line">        curr = fhead</span><br><span class="line">        <span class="keyword">while</span> len(plist) &gt; <span class="number">0</span>:</span><br><span class="line">            node = heapq.heappop(plist)[<span class="number">2</span>]</span><br><span class="line">            curr.next = node</span><br><span class="line">            curr = curr.next</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> node.next <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                heapq.heappush(plist, (node.next.val, i, node.next))</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> fhead.next</span><br></pre></td></tr></table></figure></details><details><summary>c++</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Item</span> &#123;</span></span><br><span class="line">        ListNode *node;</span><br><span class="line">        <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> Item &amp;item) <span class="keyword">const</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> node-&gt;val &gt; item.node-&gt;val;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function">ListNode* <span class="title">mergeKLists</span><span class="params">(<span class="built_in">vector</span>&lt;ListNode*&gt;&amp; lists)</span> </span>&#123;</span><br><span class="line">        priority_queue&lt;Item&gt; plist;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> node : lists) &#123;</span><br><span class="line">            <span class="keyword">if</span> (node) plist.push(&#123; node &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        ListNode fhead, *curr = &amp;fhead;</span><br><span class="line">        <span class="keyword">while</span> (!plist.empty()) &#123;</span><br><span class="line">            <span class="keyword">auto</span> item = plist.top();</span><br><span class="line">            plist.pop();</span><br><span class="line">            curr-&gt;next = item.node;</span><br><span class="line">            curr = curr-&gt;next;</span><br><span class="line">            <span class="keyword">if</span> (item.node-&gt;next) plist.push(&#123; item.node-&gt;next &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> fhead.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></details><details><summary>java</summary><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Item</span> <span class="keyword">implements</span> <span class="title">Comparable</span>&lt;<span class="title">Item</span>&gt;</span>&#123;</span><br><span class="line">        ListNode node;</span><br><span class="line"></span><br><span class="line">        Item(ListNode node)&#123;</span><br><span class="line">            <span class="keyword">this</span>.node = node;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(Item item2)</span></span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.node.val - item2.node.val;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">mergeKLists</span><span class="params">(ListNode[] lists)</span> </span>&#123;</span><br><span class="line">        PriorityQueue&lt;Item&gt; pqueue = <span class="keyword">new</span> PriorityQueue&lt;Item&gt;();</span><br><span class="line">        <span class="keyword">for</span> (ListNode node : lists)&#123;</span><br><span class="line">            <span class="keyword">if</span>(node != <span class="keyword">null</span>) pqueue.offer(<span class="keyword">new</span> Item(node));</span><br><span class="line">        &#125;</span><br><span class="line">        ListNode fhead = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">        ListNode curr = fhead;</span><br><span class="line">        <span class="keyword">while</span> (!pqueue.isEmpty())&#123;</span><br><span class="line">            Item item = pqueue.poll();</span><br><span class="line">            curr.next = item.node;</span><br><span class="line">            curr = curr.next;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(item.node.next != <span class="keyword">null</span>) pqueue.offer(<span class="keyword">new</span> Item(item.node.next));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> fhead.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 链表 </tag>
            
            <tag> 优先队列 </tag>
            
            <tag> 最小堆 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UI开发之PyQt5二：文本类控件</title>
      <link href="/2021/05/02/UI%E5%BC%80%E5%8F%91%E4%B9%8BpyQt5-2/"/>
      <url>/2021/05/02/UI%E5%BC%80%E5%8F%91%E4%B9%8BpyQt5-2/</url>
      
        <content type="html"><![CDATA[<p>文本类控件主要包含：</p><ul><li>QLineEdit：单行文本编辑框</li><li>QTextEdit：多行文本编辑框</li></ul><a id="more"></a><h3 id="QLineEdit（单行文本编辑框）"><a href="#QLineEdit（单行文本编辑框）" class="headerlink" title="QLineEdit（单行文本编辑框）"></a>QLineEdit（单行文本编辑框）</h3><p>展示<br><img src="https://raw.githubusercontent.com/gamersover/hexo_blog_assets/main/pyqt%E6%95%99%E7%A8%8B/No4.gif" width="25%"></p><p>该控件一般用来输入用户名或密码等简要内容，其写法如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">line_edit = QLineEdit()</span><br><span class="line">line_edit.setPlaceholderText(<span class="string">"密码"</span>)</span><br><span class="line">line_edit.setClearButtonEnabled(<span class="literal">True</span>)</span><br><span class="line">line_edit.setEchoMode(QLineEdit.EchoMode.Password)</span><br></pre></td></tr></table></figure><br>其基本属性包含：</p><div class="table-container"><table><thead><tr><th style="text-align:left"></th><th style="text-align:left">API</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">设置文本属性</td><td style="text-align:left">setText(text: str)</td><td style="text-align:left">设置显示的文本</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setMaxLength(a0: int)</td><td style="text-align:left">设置文本最大长度</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setEchoMode(a0: ‘QLineEdit.EchoMode’)</td><td style="text-align:left">输入文本不可见，一般用在输入密码时保护隐私，以小圆点替代输入的文本来显示</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setAlignment(flag: typing.Union[QtCore.Qt.Alignment, QtCore.Qt.AlignmentFlag])</td><td style="text-align:left">文本的显示对齐方式，有居中对齐，左对齐，右对齐等</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setReadOnly(a0: bool)</td><td style="text-align:left">可知设置为只读模式，这时不能编辑</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setPlaceholderText(a0: str)</td><td style="text-align:left">设置占位提示文本</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setCompleter(completer: QCompleter)</td><td style="text-align:left">设置文本自动补全</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setFont(a0: QtGui.QFont)</td><td style="text-align:left">设置文本字体</td></tr><tr><td style="text-align:left">获取文本状态</td><td style="text-align:left">text()-&gt;str</td><td style="text-align:left">获取文本</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">displayText()-&gt;str</td><td style="text-align:left">获取显示的文本，和显示的内容保持一致。如果是普通文本，则和<code>text()</code>返回的值一样；如果设置了<code>EchoMode</code>为密码类型，则返回小圆点。</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">placeholderText()-&gt;str</td><td style="text-align:left">获取占位提示文本</td></tr><tr><td style="text-align:left">操作文本内容</td><td style="text-align:left">insert(a0: str)</td><td style="text-align:left">在当前光标后插入文本</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">clear()</td><td style="text-align:left">删除所有内容</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setClearButtonEnabled(enable: bool)</td><td style="text-align:left">添加文本清除按钮</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">selectAll()</td><td style="text-align:left">选中所有内容</td></tr><tr><td style="text-align:left">其他</td><td style="text-align:left">setFocus()</td><td style="text-align:left">设置为焦点（即当前操作对象）</td></tr></tbody></table></div><h3 id="QTextEdit（多行文本编辑框）"><a href="#QTextEdit（多行文本编辑框）" class="headerlink" title="QTextEdit（多行文本编辑框）"></a>QTextEdit（多行文本编辑框）</h3><p>展示<br><img src="https://raw.githubusercontent.com/gamersover/hexo_blog_assets/main/pyqt%E6%95%99%E7%A8%8B/No5.gif" width="25%"></p><p>该控件用来实现大量文本的输入与显示，写法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">text_edit = QTextEdit()</span><br><span class="line">text_edit.setPlaceholderText(<span class="string">"请输入"</span>)</span><br></pre></td></tr></table></figure><p>基本属性有：</p><div class="table-container"><table><thead><tr><th style="text-align:left"></th><th style="text-align:left">API</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">设置文本属性</td><td style="text-align:left">setPlainText(text: str)</td><td style="text-align:left">设置普通文本</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setHtml(text: str)</td><td style="text-align:left">设置html文本</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setText(text: str)</td><td style="text-align:left">设置文本，根据text参数判断为普通文本还是html文本，不建议使用，而是直接使用<code>setPlainText</code>或<code>setHtml</code></td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setMarkdown(markdown: str)</td><td style="text-align:left">设置markdown文本</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setAlignment(self, flag: typing.Union[QtCore.Qt.Alignment, QtCore.Qt.AlignmentFlag])</td><td style="text-align:left">文本的显示对齐方式，有居中对齐，左对齐，右对齐等</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setReadOnly(self, a0: bool)</td><td style="text-align:left">可知设置为只读模式，这时不能编辑</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setPlaceholderText(placeholderText: str)</td><td style="text-align:left">设置占位提示文本</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setLineWrapMode(mode: ‘QTextEdit.LineWrapMode’)</td><td style="text-align:left">当参数为<code>NoWrap</code>时，文本长度宽度后不自动换行显示，这时通过拖动水平滚动条查看超出的内容</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setFont(a0: QtGui.QFont)</td><td style="text-align:left">设置文本字体</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setTextColor(c: typing.Union[QtGui.QColor, QtCore.Qt.GlobalColor, QtGui.QGradient])</td><td style="text-align:left">设置字体颜色</td></tr><tr><td style="text-align:left">获取文本状态</td><td style="text-align:left">toPlainText()-&gt;str</td><td style="text-align:left">将显示文本转换为普通文本并返回</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">toHtml()-&gt;str</td><td style="text-align:left">将显示文本转换为html文本并返回</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">toMarkdown()-&gt;str</td><td style="text-align:left">将显示文本转换为markdown文本并返回</td></tr><tr><td style="text-align:left">操作文本内容</td><td style="text-align:left">insertHtml(text: str)</td><td style="text-align:left">在当前光标后插入html文本</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">insertPlainText(text: str)</td><td style="text-align:left">在当前光标后插入普通文本</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">clear()</td><td style="text-align:left">清除所有内容</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">selectAll()</td><td style="text-align:left">选中所有内容</td></tr><tr><td style="text-align:left">其他</td><td style="text-align:left">setFocus()</td><td style="text-align:left">设置为焦点（即当前操作对象）</td></tr></tbody></table></div><h3 id="字体和字体颜色"><a href="#字体和字体颜色" class="headerlink" title="字体和字体颜色"></a>字体和字体颜色</h3><p>文本类肯定离不开字体以及字体颜色，而Qt5的字体类型与字体颜色是分开的，都是在<code>QtGui</code>类中</p><h4 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h4><p>字体在<code>QtGui.QFont</code>类中，初始化方法<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">font = QFont(family: str, pointSize: int, weight: int, italic: bool)</span><br></pre></td></tr></table></figure></p><ul><li>family：字体风格</li><li>pointSize：字体大小，可选参数</li><li>weight：字体粗细，可选参数</li><li>italic：是否斜体，可选参数</li></ul><p>基本属性有：</p><div class="table-container"><table><thead><tr><th style="text-align:left"></th><th style="text-align:left">API</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">设置文本属性</td><td style="text-align:left">setWordSpacing(spacing: float)</td><td style="text-align:left">设置文本间距</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setBold(enable: bool)</td><td style="text-align:left">设置文本加粗</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setFamily(a0: str)</td><td style="text-align:left">设置字体风格</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setPointSize(a0: int)</td><td style="text-align:left">设置文本大小（字号单位）</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setPixelSize(a0: int)</td><td style="text-align:left">设置文本大小（像素单位）</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setWeight(a0: int)</td><td style="text-align:left">设置文本粗细，比<code>setBold</code>细粒度设置</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setItalic(b: bool)</td><td style="text-align:left">设置斜体</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setOverline(a0: bool)</td><td style="text-align:left">设置字体上划线</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setunderline(a0: bool)</td><td style="text-align:left">设置字体下划线</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setLetterSpacing(type: ‘QFont.SpacingType’, spacing: float)</td><td style="text-align:left">设置字间距</td></tr><tr><td style="text-align:left">获取文本属性</td><td style="text-align:left">family() -&gt; str</td><td style="text-align:left">获取字体风格</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">pointSize() -&gt; int</td><td style="text-align:left">获取字体大小（字号单位）</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">pixelSize() -&gt; int</td><td style="text-align:left">获取文本大小（像素单位）</td></tr></tbody></table></div><p>比如对<code>QLineEdit</code>设置字体：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">line_edit = QLineEdit()</span><br><span class="line">font = QFont(<span class="string">"Arial"</span>, <span class="number">20</span>)</span><br><span class="line"><span class="comment"># 设置字间距</span></span><br><span class="line">font.setLetterSpacing(QFont.SpacingType.AbsoluteSpacing, <span class="number">10</span>)</span><br><span class="line">line_edit.setFont(font)</span><br></pre></td></tr></table></figure></p><h4 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h4><p>字体在<code>QtGui.QColor</code>类中，初始化方法有</p><ol><li><code>QColor(rgb: int)</code></li><li><code>QColor(r: int, g: int, b: int, alpha: int)</code>：alpha表示透明度，可选参数，取值0-255，0表示完全透明，255表示无透明</li><li><code>QColor(self, aname: str)</code></li></ol><p>比如初始化一个红色<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">color = QColor(<span class="string">"red"</span>)</span><br><span class="line">color = QColor(<span class="number">0xff00ff</span>)</span><br><span class="line">color = QColor(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br></pre></td></tr></table></figure></p><p>基本属性有：</p><div class="table-container"><table><thead><tr><th style="text-align:left"></th><th style="text-align:left">API</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">设置颜色</td><td style="text-align:left">setCmyk(c: int, m: int, y: int, k: int, alpha: int)</td><td style="text-align:left">设置颜色（cmyk格式）</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setHsl(h: int, s: int, l: int, alpha: int)</td><td style="text-align:left">设置颜色（hsl格式）</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setHsv(h: int, s: int, v: int, alpha: int)</td><td style="text-align:left">设置颜色（hsv格式）</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setAlpha(alpha: int)</td><td style="text-align:left">设置颜色透明度</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">darker(factor: int)</td><td style="text-align:left">根据factor参数返回一个更深的颜色</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">lighter(factor: int)</td><td style="text-align:left">根据factor参数返回一个更浅的颜色</td></tr><tr><td style="text-align:left">获取颜色</td><td style="text-align:left">getCmyk() -&gt; Tuple[int, int, int, int, int]</td><td style="text-align:left">获取颜色（cmyk格式）</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">getHsl() -&gt; Tuple[int, int, int, int]</td><td style="text-align:left">获取颜色（hsl格式）</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">getHsv() -&gt; Tuple[int, int, int, int]</td><td style="text-align:left">获取颜色（hsv格式）</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">getRgb() -&gt; Tuple[int, int, int, int]</td><td style="text-align:left">获取颜色（rgb格式）</td></tr></tbody></table></div><p>比如对<code>QTextEdit</code>设置字体：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">text_edit = QTextEdit()</span><br><span class="line">color = QColor(<span class="string">"red"</span>)</span><br><span class="line">text_edit.setTextColor(color)</span><br></pre></td></tr></table></figure></p><p>！注意: <code>QLineEdit</code>并没有<code>setTextColor</code>方法，所以不能直接设置颜色，这时需要使用更加强大的<code>QSS</code>来配置，类似于网页设计中的<code>CSS</code>。后续章节会详细介绍。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UI开发 </tag>
            
            <tag> Qt </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数积分二：Riemann积分</title>
      <link href="/2021/04/28/%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%862/"/>
      <url>/2021/04/28/%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%862/</url>
      
        <content type="html"><![CDATA[<h4 id="定义1：分割"><a href="#定义1：分割" class="headerlink" title="定义1：分割"></a>定义1：分割</h4><blockquote><p>在区间$[a,b]$上，记分割</p><script type="math/tex; mode=display">    \pi : a = x_0 < x_1 < \cdots < x_n = b</script><p>把$[a,b]$分成$n$个小区间$[x_{i-1},x_i]$，其长度为$\Delta x_i = x_i - x_{i-1} (i=-1,2,\cdots,n)$。并称$\{x_0, x_1, \cdots,x_n\}$为$\pi$的分点序列。令</p><script type="math/tex; mode=display">    \Vert \pi \Vert = \max \limits_{1 \le i \le n} \{ \Delta x_i \}</script><p>称$\Vert \pi \Vert$为分割$\pi$的宽度。</p></blockquote><a id="more"></a><h4 id="定义2：Riemann积分"><a href="#定义2：Riemann积分" class="headerlink" title="定义2：Riemann积分"></a>定义2：Riemann积分</h4><blockquote><p>设函数$f$在区间$[a,b]$上有定义，如果实数$I$使得对任意给定的$\varepsilon &gt; 0$，存在$\delta &gt; 0$，只要$[a,b]$的分割$\pi$满足$\Vert \pi \Vert &lt; \delta$，而不管$\xi_i \in [x_{i-1}, x_i] (1 \le i \le n)$如何选择，都有</p><script type="math/tex; mode=display">    |I - \sum_{i=1}^n f(\xi_i) \Delta x_i| < \varepsilon</script><p>成立，则称$f$在$[a,b]$上Riemann可积，称$I$是$f$在$[a,b]$上的Riemann积分，通常用</p><script type="math/tex; mode=display">    \int_a^b f(x) \mathrm{d} x</script><p>来表示。其中$b$与$a$分别称为积分的上限与下限，$f$称为被积函数。和式</p><script type="math/tex; mode=display">    \sum_{i=1}^n f(\xi_i) \Delta x_i</script><p>称为$f$的Riemann和（也称积分和），$\{\xi_1, \xi_2, \cdots, \xi_n\}$称为此积分和的值点序列。</p></blockquote><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>如果函数$f,g$在$[a,b]$可积且非负，那么 <br/><br>（1）</p><script type="math/tex; mode=display">    \int_a^b f(x) \mathrm{d} x \ge 0</script><p>（2）如果$f \ge g$在$[a,b]$上成立，则</p><script type="math/tex; mode=display">    \int_a^b f(x) \mathrm{d} x \ge \int_a^b g(x) \mathrm{d} x</script><p>（3）$f \pm g$在$[a,b]$上也可积，且</p><script type="math/tex; mode=display">    \int_a^b (f(x) \pm g(x)) \mathrm{d} x = \int_a^b f(x) \mathrm{d} x \pm \int_a^b g(x) \mathrm{d} x</script><p>（4）对任意的常数$c$，函数$cf$也在$[a,b]$上可积，且</p><script type="math/tex; mode=display">    \int_a^b cf(x) \mathrm{d} x = c \int_a^b f(x) \mathrm{d} x</script></blockquote><p>证：由积分的定义容易推出。</p><p>Q.E.D.</p><h4 id="定理2：Newton-Leibiniz"><a href="#定理2：Newton-Leibiniz" class="headerlink" title="定理2：Newton-Leibiniz"></a>定理2：Newton-Leibiniz</h4><blockquote><p>设函数$f$在$[a,b]$上可积，且在$(a,b)$上有原函数$F$，如果$F$在$[a,b]$上连续，那么必有</p><script type="math/tex; mode=display">    \int_a^b f(x) \mathrm{d} x = F(b) - F(a)</script><p>为了方便，引入记号</p><script type="math/tex; mode=display">    F(x) \Big|_a^b = F(b) - F(a)</script><p>从而</p><script type="math/tex; mode=display">    \int_a^b f(x) \mathrm{d} x = F(x) \Big|_a^b</script></blockquote><p>证：用分点$a = x_0 &lt; x_1 &lt; \cdots &lt; x_n=b$把区间$[a,b]$作$n$等分，即$x_i - x_{i-1} = (b-a) / n (i=1,2,\cdots,n)$，于是</p><script type="math/tex; mode=display">    F(b) - F(a) = \sum_{i=1}^n (F(x_i) - F(x_{i-1}))</script><p>对$F$使用微分中值定理，有</p><script type="math/tex; mode=display">    F(b) - F(a) = \sum_{i=1}^n F^\prime(\xi_i) \Delta x_i = \sum_{i=1}^n f(\xi_i) \Delta x_i \tag{1}</script><p>这里$\xi_i \in (x_{i-1}, x_i)(i=1,2,\cdots,n)$，由于$f$在$[a,b]$上可积，所以当$n \to \infty$时，式(1)的右边以$\displaystyle \int_a^b f(x) \mathrm{d} x$为极限，从而在式(1)两边令$n \to \infty$，可得</p><script type="math/tex; mode=display">    F(b) - F(a) = \int_a^b f(x) \mathrm{d} x</script><p>Q.E.D.</p><h4 id="定理3：分部积分公式"><a href="#定理3：分部积分公式" class="headerlink" title="定理3：分部积分公式"></a>定理3：分部积分公式</h4><blockquote><p>设$u,v$是两个可导的函数，且公式中存在的函数积分在$[a,b]$上都存在，则</p><script type="math/tex; mode=display">    \int_a^b u(x)v^\prime(x) \mathrm{d} x = u(x)v(x)\Big|_a^b - \int_a^b u^\prime(x)v(x) \mathrm{d} x</script><p>或写成微分形式</p><script type="math/tex; mode=display">    \int_a^b u \mathrm{d} v = u v\Big|_a^b  - \int_a^b v \mathrm{d} u</script></blockquote><p>证：由求导法则可知</p><script type="math/tex; mode=display">    (uv)^\prime = uv^\prime + vu^\prime</script><p>对上式两边求不定积分得</p><script type="math/tex; mode=display">    \int_a^b (uv)^\prime \mathrm{d} x = \int_a^b uv^\prime \mathrm{d}x + \int_a^b vu^\prime \mathrm{d}x</script><p>从而有<a href="https://gamersover.github.io/2021/04/28/函数积分2/#定理2：Newton-Leibiniz公式" target="_blank" rel="noopener">Newton-Leibniz公式</a>可得</p><script type="math/tex; mode=display">    \int_a^b u \mathrm{d} v = u v \Big|_a^b - \int_a^b v \mathrm{d} u</script><p>Q.E.D.</p><h4 id="定理4"><a href="#定理4" class="headerlink" title="定理4"></a>定理4</h4><blockquote><p>设函数$f$在区间$I$上连续，$a,b \in I$，函数$\varphi$在区间$[\alpha, \beta]$上有连续的导函数，$\varphi([\alpha, \beta]) \subset I$，且$\varphi(\alpha) = a, \varphi(\beta) = b$，若公式中存在的函数积分在$[a,b]$上都存在，那么</p><script type="math/tex; mode=display">    \int_a^b f(x) \mathrm{d} x = \int_{\alpha}^{\beta} f \circ \varphi(t) \varphi^\prime(t) \mathrm{d} x</script></blockquote><p>证：设$F$是$f$在$[a,b]$上的一个原函数，则</p><script type="math/tex; mode=display">    (F \circ \varphi(t))^\prime = F^\prime \circ \varphi(t) \varphi^\prime(t) = f \circ \varphi(t) \varphi^\prime(t)</script><p>从而$f \circ \varphi(t) \varphi^\prime(t)$的一个原函数为$F\circ \varphi(t)$，从而由<a href="https://gamersover.github.io/2021/04/28/函数积分2/#定理2：Newton-Leibiniz公式" target="_blank" rel="noopener">Newton-Leibniz公式</a>可知</p><script type="math/tex; mode=display">    \int_{\alpha}^{\beta} f \circ \varphi(t) \varphi^\prime(t) \mathrm{d} x = F\circ \varphi(t) \Big|_{\alpha}^{\beta} = F(b) - F(a) = \int_a^b f(x) \mathrm{d} x</script><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数积分 </tag>
            
            <tag> Riemann积分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数积分一：原函数</title>
      <link href="/2021/04/28/%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%861/"/>
      <url>/2021/04/28/%E5%87%BD%E6%95%B0%E7%A7%AF%E5%88%861/</url>
      
        <content type="html"><![CDATA[<h4 id="定义1：原函数"><a href="#定义1：原函数" class="headerlink" title="定义1：原函数"></a>定义1：原函数</h4><blockquote><p>已知区间$D$和函数$f: D \to \mathbb{R}, F: D \to \mathbb{R}$，如果两个函数满足关系</p><script type="math/tex; mode=display">    F^\prime(x) = f(x)</script><p>则称$F$为$f$在$D$上的一个原函数。</p></blockquote><a id="more"></a><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>如果$F$为$f$的一个原函数，那么函数族$\{ F + c: c \in \mathbb{R} \}$是由$f$的全体原函数构成的，且将该集合记为</p><script type="math/tex; mode=display">    \int f(x) \mathrm{d} x</script><p>该式子又称为函数$f$的不定积分。其中$f$称为被积函数。</p></blockquote><p>证：如果$F$是$f$的一个原函数，那么对任何常数$c$，有</p><script type="math/tex; mode=display">    (F(x) + c)^\prime = F^\prime(x) + c^\prime = f(x)</script><p>所以$F(x) + c$也是$f$的一个原函数。又假设$F$和$G$都是$f$的原函数，则有</p><script type="math/tex; mode=display">    (F(x) - G(x))^\prime = F^\prime(x) - G^\prime(x) = f(x) - f(x) = 0</script><p>即$F - G$是个常数，所以$G(x) = F(x) + c$，从而$f$全体原函数</p><script type="math/tex; mode=display">    \int f(x) \mathrm{d} x = F(x) + c</script><p>Q.E.D.</p><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>（1）$\displaystyle \left(\int f(x) \mathrm{d} x\right)^\prime = f(x)$ <br/><br>（2）$\displaystyle \int F^\prime(x) \mathrm{d} x = F(x) + c$ <br/><br>（3）$\displaystyle \int (f(x) + g(x)) \mathrm{d} x = \int f(x) \mathrm{d} x + \int g(x) \mathrm{d} x$ <br/><br>（4）如果$c$是不为$0$的常数，则有</p><script type="math/tex; mode=display">    \int cf(x) \mathrm{d} x = c \int f(x) \mathrm{d} x</script></blockquote><p>证：利用原函数的性质易证。</p><h4 id="定理3：分部积分公式"><a href="#定理3：分部积分公式" class="headerlink" title="定理3：分部积分公式"></a>定理3：分部积分公式</h4><blockquote><p>设$u,v$是两个可导的函数，则</p><script type="math/tex; mode=display">    \int u(x)v^\prime(x) \mathrm{d} x = u(x)v(x) - \int u^\prime(x)v(x) \mathrm{d} x</script><p>利用微分的记号，也可以表示为</p><script type="math/tex; mode=display">    \int u \mathrm{d} v = uv - \int v \mathrm{d} u</script></blockquote><p>证：由求导法则可知</p><script type="math/tex; mode=display">    (uv)^\prime = uv^\prime + vu^\prime</script><p>对上式两边求不定积分得</p><script type="math/tex; mode=display">    uv + c_1= \int uv^\prime \mathrm{d}x + \int vu^\prime \mathrm{d}x</script><p>从而</p><script type="math/tex; mode=display">    \int uv^\prime \mathrm{d}x = uv - \int u^\prime v \mathrm{d}x</script><p>Q.E.D.</p><h4 id="定理4：换元法"><a href="#定理4：换元法" class="headerlink" title="定理4：换元法"></a>定理4：换元法</h4><blockquote><p>设可导函数$\varphi(x)$有复合函数$f(\varphi(x))$，则</p><script type="math/tex; mode=display">    \int f(\varphi(x)) \varphi^\prime(x) \mathrm{d} x = \int f(u) \mathrm{d} u \tag{1}</script><p>其中$u = \varphi(x)$。</p></blockquote><p>证：式(1)两边分别$x$求导，得</p><script type="math/tex; mode=display">    f(\varphi(x))\varphi^\prime(x) = f(u) \frac{\mathrm{d} u}{\mathrm{d}x}</script><p>而右边将$u = \varphi(x)$代入，正是</p><script type="math/tex; mode=display">    f(u) \frac{\mathrm{d} u}{\mathrm{d}x} = f(\varphi(x)) \varphi^\prime(x)</script><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数积分 </tag>
            
            <tag> 原函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数导数十三：极值</title>
      <link href="/2021/04/25/%E5%87%BD%E6%95%B0%E5%AF%BC%E6%95%B013/"/>
      <url>/2021/04/25/%E5%87%BD%E6%95%B0%E5%AF%BC%E6%95%B013/</url>
      
        <content type="html"><![CDATA[<h4 id="定义1"><a href="#定义1" class="headerlink" title="定义1"></a>定义1</h4><blockquote><p>设开集$D \subset \mathbb{R}^n$，函数$f: D \to \mathbb{R}$，点$\boldsymbol{x}_0 \in D$，如果存在一个去心球$B_r(\boldsymbol{\check x}_0) \subset D$，使得对任意的$\boldsymbol{x} \in B_r(\boldsymbol{\check x}_0)$，都有$f(\boldsymbol{x}) \ge f(\boldsymbol{x}_0)(f(\boldsymbol{x}) &gt; f(\boldsymbol{x}_0))$，那么$\boldsymbol{x}_0$称为$f$的一个(严格)极小值点，$f(\boldsymbol{x}_0)$称为函数$f$的一个(严格)极小值。同样可以定义(严格)极大值点与(严格)极大值。极小值与极大值统称为极值。</p></blockquote><a id="more"></a><h4 id="定义2"><a href="#定义2" class="headerlink" title="定义2"></a>定义2</h4><blockquote><p>设开集$D \subset \mathbb{R}^n$，函数$f: D \to \mathbb{R}$，点$\boldsymbol{x}_0 \in D$，如果$\displaystyle \frac{\partial f}{\partial x_i} (\boldsymbol{a})(i=1,2,\cdots,n)$都存在等于$0$，则称点$\boldsymbol{x}_0$为函数$f$的驻点。</p></blockquote><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>设$n$元函数$f$在$\boldsymbol{a} = (a_1,\cdots,a_n)$处取得极值，且$\displaystyle \frac{\partial f}{\partial x_i}(\boldsymbol{a})(i=1,2,\cdots,n)$都存在，那么$\boldsymbol{a}$必定是$f$的驻点。</p></blockquote><p>证：不妨设$f$在$\boldsymbol{a}$处取得极小值，那么存在球$B_{r}(\boldsymbol{a})$，使得对任意的$\boldsymbol{x} \in B_{\boldsymbol{r}}(\boldsymbol{a})$，有</p><script type="math/tex; mode=display">    f(\boldsymbol{x}) \ge f(\boldsymbol{a})</script><p>考虑单变量$t$的函数</p><script type="math/tex; mode=display">    \varphi(t) = f(a_1,\cdots,a_{t-1},t,a_{t+1},\cdots,a_n)</script><p>让$t$满足$|t - a_i| &lt; r$，取$\boldsymbol{x} = (a_1,\cdots,a_{t-1},t,a_{t+1},\cdots,a_n)$，可知$\Vert \boldsymbol{x} - \boldsymbol{a}\Vert = |t - a_i| &lt; r$，即$\boldsymbol{x} \in B_{\boldsymbol{r}}(\boldsymbol{a})$，所以有$f(\boldsymbol{x}) \ge f(\boldsymbol{a})$，即$\varphi(t) \ge \varphi(a_i)$，从而$\varphi$在$a_i$处取得极小值，所以有$\varphi^\prime(a_i) = 0$，即$\displaystyle \frac{\partial f}{\partial x_i} (\boldsymbol{a}) = 0$。</p><p>Q.E.D.</p><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>设$\boldsymbol{x}_0$是$n$元函数$f$的一个驻点，函数$f$在$\boldsymbol{x}_0$的某一邻域内有连续的二阶偏导数，<br/><br>（1）如果Hesse方阵$Hf(\boldsymbol{x}_0)$是严格正(负)定方阵，那么$\boldsymbol{x}_0$是$f$的一个严格极小(大)值点。<br /><br>（2）如果Hesse方阵$Hf(\boldsymbol{x}_0)$是不定方阵，那么$\boldsymbol{x}_0$不是$f$的极值点。</p></blockquote><p>证：（1）设$Hf(\boldsymbol{x}_0)$是严格正定方阵，由于$f$在$\boldsymbol{x}_0$的某一邻域内有连续的二阶偏导数，从而由<a href="https://gamersover.github.io/2021/04/21/函数导数12/#定理5：Taylor公式" target="_blank" rel="noopener">函数导数十二的定理5</a>可知</p><script type="math/tex; mode=display">    f(\boldsymbol{x}_0 + \boldsymbol{h}) = f(\boldsymbol{x}_0) + Jf(\boldsymbol{x}_0)\boldsymbol{h} + \frac{1}{2}\boldsymbol{h}^T Hf(\boldsymbol{x}_0) \boldsymbol{h} + o(\Vert \boldsymbol{h} \Vert^2) \quad (\boldsymbol{h} \to \boldsymbol{0})</script><p>又因为$\boldsymbol{x}_0$是$f$的驻点，从而上式可写为</p><script type="math/tex; mode=display">    f(\boldsymbol{x}_0 + \boldsymbol{h}) - f(\boldsymbol{x}_0) = \frac{1}{2} \boldsymbol{h}^T Hf(\boldsymbol{x}_0) \boldsymbol{h} + o(\Vert \boldsymbol{h} \Vert^2) \tag {1}</script><p>设$\Vert \boldsymbol{y} \Vert = 1$，它的全体是单位球的球面$\partial B_1(\boldsymbol{0})$，因为$Hf(\boldsymbol{x}_0)$是严格正定的，所以</p><script type="math/tex; mode=display">    (y_1,\cdots,y_n) Hf(\boldsymbol{x}_0) \begin{bmatrix} y_1 \\ \vdots \\ y_m \end{bmatrix} = \sum_{i,j=1}^n \frac{\partial^2 f}{\partial x_i \partial x_j}(\boldsymbol{x}_0) y_iy_j > 0</script><p>这时单位球面上的连续函数，而单位球面是一个有界闭集，从而它在单位球面上某点取得最小值，设此最小值为$m&gt;0$，从而有</p><script type="math/tex; mode=display">    \boldsymbol{y}^t Hf(\boldsymbol{x}_0) \boldsymbol{y} \ge m > 0</script><p>而</p><script type="math/tex; mode=display">    \frac{1}{2} \boldsymbol{h}^T Hf(\boldsymbol{x}_0) \boldsymbol{h} = \frac{1}{2} \Vert \boldsymbol{h} \Vert^2 \left( \frac{\boldsymbol{h}^T}{\Vert \boldsymbol{h}\Vert} Hf(\boldsymbol{x}_0) \frac{\boldsymbol{h}}{\Vert \boldsymbol{h} \Vert}\right) \ge \frac{m}{2} \Vert \boldsymbol{h} \Vert^2</script><p>将其代入(1)式中，得</p><script type="math/tex; mode=display">    f(\boldsymbol{x}_0 + \boldsymbol{h}) - f(\boldsymbol{x}_0) = \Vert \boldsymbol{h} \Vert^2 \left(\frac{m}{2} + o(1) \right) > 0</script><p>即当$\Vert \boldsymbol{h} \Vert$充分小时，有$f(\boldsymbol{x}_0 + \boldsymbol{h}) &gt; f(\boldsymbol{x}_0)$。<br/><br>（2）因为$Hf(\boldsymbol{x}_0)$是不定方阵，故存在$\boldsymbol{p},\boldsymbol{q} \in \mathbb{R}^n$，使得</p><script type="math/tex; mode=display">    \boldsymbol{p}^T Hf(\boldsymbol{x}_0) \boldsymbol{p} < 0 < \boldsymbol{q}^T Hf(\boldsymbol{x}_0) \boldsymbol{q}</script><p>在式(1)中分别取$\boldsymbol{h}$为$\varepsilon \boldsymbol{p}$和$\varepsilon \boldsymbol{q}$，得</p><script type="math/tex; mode=display">    \begin{aligned}        f(\boldsymbol{x}_0 + \varepsilon \boldsymbol{p}) - f(\boldsymbol{x}_0) & = \frac{1}{2} (\boldsymbol{p}^T Hf(\boldsymbol{x}_0) \boldsymbol{p}) \varepsilon^2 + o(\varepsilon^2) \\        &= \left( \frac{1}{2} \boldsymbol{p}^T Hf(\boldsymbol{x}_0) \boldsymbol{p} + o(1) \right) \varepsilon^2 \\        f(\boldsymbol{x}_0 + \varepsilon \boldsymbol{q}) - f(\boldsymbol{x}_0) &= \left( \frac{1}{2} \boldsymbol{q}^T Hf(\boldsymbol{x}_0) \boldsymbol{q} + o(1) \right) \varepsilon^2    \end{aligned}</script><p>从而只要$\varepsilon$取得充分小，就有</p><script type="math/tex; mode=display">    f(\boldsymbol{x}_0 + \varepsilon \boldsymbol{p}) < f(\boldsymbol{x}_0) < f(\boldsymbol{x}_0 + \varepsilon \boldsymbol{q})</script><p>也就表明$\boldsymbol{x}_0$不是$f$的极值点。</p><p>Q.E.D.</p><h4 id="定理3"><a href="#定理3" class="headerlink" title="定理3"></a>定理3</h4><blockquote><p>设$(x_0,y_0)$是二元函数$f$的驻点，$f$在$(x_0,y_0)$的某个邻域内有连续的二阶偏导数，记</p><script type="math/tex; mode=display">    a = \frac{\partial^2 f}{\partial x^2}(x_0, y_0) \quad b=\frac{\partial^2 f}{\partial x \partial y}(x_0, y_0) \quad c=\frac{\partial^2 f}{\partial y^2}(x_0, y_0)</script><p>那么：<br/><br>（1）当$ac-b^2 &gt; 0$且$a &gt; 0$时，$f$在$(x_0,y_0)$处有严格极小值；<br/><br>（2）当$ac-b^2 &gt; 0$且$a &lt; 0$时，$f$在$(x_0,y_0)$处有严格极大值；<br/><br>（3）当$ac-b^2 &lt; 0$时，$f$在$(x_0,y_0)$处没有极值。</p></blockquote><p>证：由<a href="https://gamersover.github.io/2021/04/25/函数导数13/#定理2" target="_blank" rel="noopener">定理2</a>易证。</p><p>Q.E.D.</p><h4 id="定义3：条件极值"><a href="#定义3：条件极值" class="headerlink" title="定义3：条件极值"></a>定义3：条件极值</h4><blockquote><p>设$D$是$\mathbb{R}^{n+m}$中的开集，</p><script type="math/tex; mode=display">    f(x_1,\cdots,x_n,y_1,\cdots,y_m) \tag{2}</script><p>是定义在$D$上的一个函数，先设变量$x_1,\cdots,x_n,y_1,\cdots,y_m$满足以下$m$个条件约束：</p><script type="math/tex; mode=display">    \left\{ \begin{aligned}        & \Phi_1(x_1,\cdots,x_n,y_1,\cdots,y_m) = 0 \\        & \cdots \\        & \Phi_m(x_1, \cdots,x_n,y_1,\cdots,y_m) = 0    \end{aligned}    \right. \tag{3}</script><p>那么函数(2)在条件(3)下的极值称为条件极值。</p></blockquote><h4 id="定理4"><a href="#定理4" class="headerlink" title="定理4"></a>定理4</h4><blockquote><p>设开集$D \subset \mathbb{R}^{n+m}$，函数$f: D \to \mathbb{R}$，映射$\boldsymbol{\Phi}: D \to \mathbb{R}^m$，函数$f$映射$\boldsymbol{\Phi}$满足以下条件： <br/><br>（a）$f,\boldsymbol{\Phi} \in C^1(D)$ <br/><br>（b）存在$\boldsymbol{z}_0 = (\boldsymbol{x}_0, \boldsymbol{y}_0) \in D$，满足$\boldsymbol{\Phi}(\boldsymbol{z}_0) = 0$，其中$\boldsymbol{x}_0 = (a_1,\cdots,a_n)$，$\boldsymbol{y}_n=(b_1,\cdots,b_m)$； <br/><br>（c）$\det J_{\boldsymbol{y}}\boldsymbol{\Phi}(\boldsymbol{z}_0) \ne 0$  <br /><br>如果$f$在等式(3)的约束下，在$\boldsymbol{z}_0$处取得极值，那么存在$\boldsymbol{\lambda} \in \mathbb{R}^m$，使得</p><script type="math/tex; mode=display">    Jf(\boldsymbol{z}_0) + \boldsymbol{\lambda} J\boldsymbol{\Phi}(\boldsymbol{z}_0) = \boldsymbol{0}</script></blockquote><p>证：由于$\boldsymbol{\Phi}$满足（a）,（b）,（c）三个条件，根据隐映射定理可知存在$\boldsymbol{z}_0=(\boldsymbol{x}_0, \boldsymbol{y}_0)$的邻域$U = G \times H$，其中$G$和$H$分别是$\boldsymbol{x_0}$和$\boldsymbol{y}_0$的邻域，使得方程</p><script type="math/tex; mode=display">    \boldsymbol{\Phi}(\boldsymbol{x}, \boldsymbol{y}) = \boldsymbol{0}</script><p>对任意的$\boldsymbol{x} \in G$，在$H$中有唯一的解$\boldsymbol{\varphi}(\boldsymbol{x})$，并且满足$\boldsymbol{y}_0 = \boldsymbol{\varphi}(\boldsymbol{x}_0)$且</p><script type="math/tex; mode=display">    J\boldsymbol{\varphi}(\boldsymbol{x}_0) = -(J_y\boldsymbol{\Phi}(\boldsymbol{z}_0))^{-1}J_x\boldsymbol{\Phi}(\boldsymbol{z}_0) \tag{4}</script><p>由于$\boldsymbol{z}_0$是函数$f$在条件式(2)下的极值点，从而$\boldsymbol{x}_0$便是函数$f(\boldsymbol{x}, \boldsymbol{\varphi}(\boldsymbol{x}))$在$G$中的一个极值点，所以$\boldsymbol{x}_0$必是$f(\boldsymbol{x}, \boldsymbol{\varphi}(\boldsymbol{x}))$的一个驻点，从而有</p><script type="math/tex; mode=display">    J_xf(\boldsymbol{z}_0) + J_yf(\boldsymbol{z}_0)J\boldsymbol{\varphi}(\boldsymbol{x}_0) = \boldsymbol{0}</script><p>将(4)式代入上式可得</p><script type="math/tex; mode=display">    J_xf(\boldsymbol{z}_0) - J_yf(\boldsymbol{z}_0)(J_y\boldsymbol{\Phi}(\boldsymbol{z}_0))^{-1}J_x\boldsymbol{\Phi}(\boldsymbol{z}_0) = \boldsymbol{0} \tag{5}</script><p>记</p><script type="math/tex; mode=display">    \boldsymbol{\lambda} = -J_yf(\boldsymbol{z}_0)(J_y\boldsymbol{\Phi}(\boldsymbol{z}_0))^{-1} \tag{6}</script><p>它是一个$m$维的向量，从而式(5)变成</p><script type="math/tex; mode=display">    J_xf(\boldsymbol{z}_0) + \boldsymbol{\lambda}J_x\boldsymbol{\Phi}(\boldsymbol{z}_0) = \boldsymbol{0} \tag{7}</script><p>将式(6)改写为</p><script type="math/tex; mode=display">    J_yf(\boldsymbol{z}_0) + \boldsymbol{\lambda}J_y\boldsymbol{\Phi}(\boldsymbol{z}_0) = \boldsymbol{0} \tag{8}</script><p>结合式(7)和式(8)可得</p><script type="math/tex; mode=display">    Jf(\boldsymbol{z}_0) + \boldsymbol{\lambda}J\boldsymbol{\Phi}(\boldsymbol{z}_0) = \boldsymbol{0}</script><p>Q.E.D.</p><h4 id="定理5"><a href="#定理5" class="headerlink" title="定理5"></a>定理5</h4><blockquote><p>设$\boldsymbol{z}_0$是辅助函数</p><script type="math/tex; mode=display">    F(\boldsymbol{z}) = f(\boldsymbol{z}) + \sum_{i=1}^m \lambda_i \Phi_i(\boldsymbol{z})</script><p>的一个驻点，其中$\boldsymbol{z} = (z_1,\cdots,z_{n+m}) = (x_1,\cdots,x_n,y_1,\cdots,y_m)$，记</p><script type="math/tex; mode=display">    HF(\boldsymbol{z}_0) = \left( \frac{\partial^2 f}{\partial z_j \partial z_k}(\boldsymbol{z}_0) \right)_{i\le j,k \le m+n}</script><p>（1）如果$HF(\boldsymbol{z}_0)$严格正定，那么$f$在$\boldsymbol{z}_0$处取得严格的极小值；<br/><br>（2）如果$HF(\boldsymbol{z}_0)$严格负定，那么$f$在$\boldsymbol{z}_0$处取得严格的极大值。</p></blockquote><p>证：记$E$是满足条件式(2)的点的全体，即</p><script type="math/tex; mode=display">    E = \left\{ \boldsymbol{z} \in \mathbb{R}^{m+n}: \boldsymbol{\Phi}(\boldsymbol{z}) = \boldsymbol{0} \right\}</script><p>已知$\boldsymbol{z}_0 \in E$，再在$\boldsymbol{z}_0$的附近取点$\boldsymbol{z}_0 + \boldsymbol{h} \in E$，由于</p><script type="math/tex; mode=display">    \boldsymbol{\Phi}(\boldsymbol{z}_0) = 0, \quad \boldsymbol{\Phi}(\boldsymbol{z}_0 + \boldsymbol{h}) = 0</script><p>所以</p><script type="math/tex; mode=display">    F(\boldsymbol{z}_0) = f(\boldsymbol{z}_0), \quad F(\boldsymbol{z}_0 + \boldsymbol{h}) = f(\boldsymbol{z}_0 + \boldsymbol{h})</script><p>于是对$F$利用Taylor公式得</p><script type="math/tex; mode=display">    \begin{aligned}    f(\boldsymbol{z}_0 + \boldsymbol{h}) - f(\boldsymbol{z}_0) &= F(\boldsymbol{z}_0 + \boldsymbol{h}) - F(\boldsymbol{z}_0)  \\    &= \sum_{i=j}^{m+n} \frac{\partial F}{\partial z_j}(\boldsymbol{z}_0)h_i + \frac{1}{2}\sum_{j,k=1}^{m+n} \frac{\partial^2 f}{\partial z_j \partial z_k}(\boldsymbol{z}_0)h_jh_k + o(\Vert \boldsymbol{h} \Vert^2) \\    &= \frac{1}{2} \boldsymbol{h}^T HF(\boldsymbol{z}_0) \boldsymbol{h} + o(\Vert \boldsymbol{h} \Vert^2)    \end{aligned}</script><p>接下来的证明方式与<a href="https://gamersover.github.io/2021/04/25/函数导数13/#定理2" target="_blank" rel="noopener">定理2</a>完全一样，不再赘述。</p><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数导数 </tag>
            
            <tag> 极值 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数导数十二：高阶偏导数和Taylor公式</title>
      <link href="/2021/04/21/%E5%87%BD%E6%95%B0%E5%AF%BC%E6%95%B012/"/>
      <url>/2021/04/21/%E5%87%BD%E6%95%B0%E5%AF%BC%E6%95%B012/</url>
      
        <content type="html"><![CDATA[<h4 id="定义1"><a href="#定义1" class="headerlink" title="定义1"></a>定义1</h4><blockquote><p>设函数$f$在开集$D$上的每一点处存在偏导数：</p><script type="math/tex; mode=display">    D_if(\boldsymbol{x}) = \frac{\partial f}{\partial x_i}(\boldsymbol{x}) \quad (i=1,2,\cdots,n)</script><p>称它们为$f$的一阶偏导函数，如果对这些偏导函数又可以取偏导数，得出的就是$f$的二阶偏导函数，依次可以定义三阶偏导数以及更高阶的偏导数。对于二阶偏导数，将一阶偏导函数$\displaystyle \frac{\partial f}{\partial x_j}$再对$x_i$求偏导数，即$\displaystyle \frac{\partial f}{\partial x_i}\left(\frac{\partial f}{\partial x_j}\right)$记作$\displaystyle \frac{\partial^2 f}{\partial x_i \partial x_j}$，这里$i,j$独立地从$1$变到$n$，如果$i=j$，那么把$\displaystyle \frac{\partial^2 f}{\partial x_i \partial x_i}$记作$\displaystyle \frac{\partial^2 f}{\partial x_i^2}(i=1,2,\cdots,n)$；如果$i\ne j$，这类二阶偏导数称为混合偏导数。</p></blockquote><a id="more"></a><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>设开集$D \subset \mathbb{R}^2$，$f: D \to \mathbb{R}$，如果$\displaystyle \frac{\partial f}{\partial x},\frac{\partial f}{\partial y},\frac{\partial^2 f}{\partial y \partial x}$在$(x_0,y_0)$的某个邻域上存在，且$\displaystyle \frac{\partial^2 f}{\partial y\partial x}$在$(x_0,y_0)$处连续，那么$\displaystyle \frac{\partial^2 f}{\partial x \partial y}$在$(x_0,y_0)$处存在，而且</p><script type="math/tex; mode=display">    \frac{\partial^2 f}{\partial x \partial y} = \frac{\partial^2 f}{\partial y \partial x}</script></blockquote><p>证：记</p><script type="math/tex; mode=display">    \varphi(h, k) = f(x_0 + h, y_0 + k) - f(x_0+h, y_0) - f(x_0, y_0+k) + f(x_0, y_0)</script><p>令</p><script type="math/tex; mode=display">    g(x) = f(x, y_0+k) - f(x, y_0)</script><p>从而由微分中值定理可知</p><script type="math/tex; mode=display">    \begin{aligned}    \varphi(h, k) & = g(x_0 + h) - g(x_0) \\    & = g^\prime(x_0 + \theta_1 h)h \\    & = \left(\frac{\partial f}{\partial x}(x_0 + \theta_1 h, y_0 + k) - \frac{\partial f}{\partial x}(x_0 + \theta_1 h, y_0) \right)h \\    & = \frac{\partial^2 f}{\partial y \partial x}(x_0 + \theta_1h, y_0 + \theta_2k)hk    \end{aligned}</script><p>由于$\displaystyle \frac{\partial^2 f}{\partial y \partial x}$在$(x_0, y_0)$处连续，从而有</p><script type="math/tex; mode=display">    \lim \limits_{h\to 0, k \to 0} \frac{\varphi(h ,k)}{hk} = \frac{\partial^2 f}{\partial y \partial x}(x_0, y_0)</script><p>而又有</p><script type="math/tex; mode=display">    \lim \limits_{k \to 0} \frac{\varphi(h ,k)}{hk} = \lim \limits_{k \to 0} \frac{1}{h} \left( \frac{f(x_0+h, y_0+k) - f(x_0+h, y_0)}{k} - \frac{f(x_0, y_0+k) - f(x_0, y_0)}{k}\right) = \frac{1}{h}\left( \frac{\partial f}{\partial y}(x_0 +h, y_0) - \frac{\partial f}{\partial y}(x_0, y_0)\right)</script><p>所以</p><script type="math/tex; mode=display">    \lim \limits_{h \to 0, k \to 0} \frac{\varphi(h ,k)}{hk} = \lim \limits_{h \to 0} \frac{1}{h}\left( \frac{\partial f}{\partial y}(x_0 +h, y_0) - \frac{\partial f}{\partial y}(x_0, y_0)\right) = \frac{\partial^2 f}{\partial x \partial y}(x_0, y_0)</script><p>所以$\displaystyle \frac{\partial^2 f}{\partial x \partial y}(x_0, y_0)$存在，而且</p><script type="math/tex; mode=display">    \frac{\partial^2 f}{\partial x \partial y}(x_0, y_0) = \frac{\partial^2 f}{\partial y \partial x}(x_0, y_0)</script><p>Q.E.D.</p><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>设定义在凸区域$D \subset \mathbb{R}^n$上的函数$f$可微，则对任何两点$\boldsymbol{a}, \boldsymbol{b} \in D$，在由$\boldsymbol{a},\boldsymbol{b}$确定的线段上存在一点$\boldsymbol{\xi}$，使得</p><script type="math/tex; mode=display">    f(\boldsymbol{b}) - f(\boldsymbol{a}) = Jf(\boldsymbol{\xi})(\boldsymbol{b} - \boldsymbol{a})</script></blockquote><p>证：由$\boldsymbol{a}$与$\boldsymbol{b}$确定的线段上的点可表示为$\boldsymbol{a} + t(\boldsymbol{b} - \boldsymbol{a})$，这里$t \in [0, 1]$，令</p><script type="math/tex; mode=display">    \varphi(t) = f(\boldsymbol{a} + t(\boldsymbol{b} - \boldsymbol{a}))</script><p>那么$\varphi$是$[0, 1]$上的可微函数，由单变量的微分中值定理可知，存在$\theta \in (0,1)$，使得</p><script type="math/tex; mode=display">    \varphi(1) - \varphi(0) = \varphi^\prime(\theta)</script><p>即</p><script type="math/tex; mode=display">    f(\boldsymbol{b}) - f(\boldsymbol{a}) = \boldsymbol{J}f(\boldsymbol{a} + \theta (\boldsymbol{b} - \boldsymbol{a}))(\boldsymbol{b} - \boldsymbol{a})</script><p>再令$\boldsymbol{\xi} = \boldsymbol{a} + \theta(\boldsymbol{b} - \boldsymbol{a})$即证得结论。</p><p>Q.E.D.</p><h4 id="定理3"><a href="#定理3" class="headerlink" title="定理3"></a>定理3</h4><blockquote><p>设$D$是$\mathbb{R}^n$中的区域，如果对任意的$\boldsymbol{x} \in D$，有</p><script type="math/tex; mode=display">    \frac{\partial f}{\partial x_1}(\boldsymbol{x}) = \cdots = \frac{\partial f}{\partial x_n}(\boldsymbol{x}) = 0</script><p>那么$f$在$D$上为一个常数。</p></blockquote><p>证：如果$D$是凸区域，则由<a href="https://gamersover.github.io/2021/04/21/函数导数12/#定理1" target="_blank" rel="noopener">定理1</a>立即得出结论。如果$D$不是凸区域，任取$\boldsymbol{x}_0 \in D$，令</p><script type="math/tex; mode=display">    \begin{aligned}    A = \{ \boldsymbol{x} \in D: f(\boldsymbol{x}) = f(\boldsymbol{x_0})\} \\    B = \{ \boldsymbol{x} \in D: f(\boldsymbol{x}) \ne f(\boldsymbol{x_0}) \}    \end{aligned}</script><p>显然$A$非空，而$D=A \cup B$，由于$D$是连通开集，若能证明$A,B$是开集，则由<a href="https://gamersover.github.io/2020/11/10/点列极限6/#定理3" target="_blank" rel="noopener">点列极限六的定理3</a>可知，$B = \varnothing$，从而证得结论。为了证明$A$是开集，任取$\boldsymbol{a} \in A \subset D$，存在$B_{\boldsymbol{r}}(\boldsymbol{a}) \in D$，由于$B_{\boldsymbol{r}}(\boldsymbol{a})$是凸区域，从而$f$在$B_{\boldsymbol{r}}(\boldsymbol{a})$上是常数，且对任意的$\boldsymbol{x} \in B_{\boldsymbol{r}}(\boldsymbol{a})$，有</p><script type="math/tex; mode=display">    f(\boldsymbol{x}) = f(\boldsymbol{a}) = f(\boldsymbol{x}_0)</script><p>从而$B_{\boldsymbol{r}}(\boldsymbol{a}) \subset A$，也就说明$A$是开集。同样的方法也可以证明$B$是开集。再由上面分析可知命题成立。</p><p>Q.E.D.</p><h4 id="定理4"><a href="#定理4" class="headerlink" title="定理4"></a>定理4</h4><blockquote><p>设$k,n$是两个正整数，那么</p><script type="math/tex; mode=display">    (x_1 + \cdots + x_n)^k = \sum_{\alpha_1 + \cdots + \alpha_n = k} \frac{k!}{\alpha_1!\cdots\alpha_n!}x_1^{\alpha_1} \cdots x_n^{\alpha_n}</script><p>这里$\alpha_1,\cdots,\alpha_n$是非负整数。如果记$\boldsymbol{\alpha} = (\alpha_1, \cdots, \alpha_n)$，$\boldsymbol{x}=(x_1,\cdots,x_n)$，且</p><script type="math/tex; mode=display">\begin{aligned}|\boldsymbol{\alpha}| &= \alpha_1 + \cdots + \alpha_n \\\boldsymbol{\alpha}! &= \alpha_1!\cdots\alpha_n! \\\boldsymbol{x}^{\boldsymbol{\alpha}} &= x_1^{\alpha_1} \cdots x_n^{\alpha_n}\end{aligned}</script><p>则上式可简写为</p><script type="math/tex; mode=display">    (x_1 + \cdots + x_n)^k = \sum_{|\boldsymbol{\alpha}|=k}\frac{k!}{\boldsymbol{\alpha}!}\boldsymbol{x}^{\boldsymbol{\alpha}}</script></blockquote><p>证：对加项的个数$n$作归纳。当$n=2$时，该定理就是二项式定理，固然成立。先设$n-1$时命题成立，那么当加项的个数为$n$时，有</p><script type="math/tex; mode=display">    \begin{aligned}    (x_1 + \cdots + x_n)^k &= ((x_1 + \cdots + x_{n-1}) + x_n)^k \\    &= \sum_{\alpha_n=0}^k \frac{k!}{\alpha_n!(k-\alpha_n)!}(x_1+\cdots+x_{n-1})^{k-\alpha_n}x_n^{\alpha_n} \\    &= \sum_{\alpha_n=0}^k \frac{k!}{\alpha_n!(k-\alpha_n)!} \sum_{\alpha_1 + \alpha_{n-1}=k-\alpha_n}\frac{(k-\alpha_n)!}{\alpha_1!\cdots\alpha_{n-1}!} x_1^{\alpha_1} \cdots x_{n-1}^{\alpha_{n-1}} x_n^{\alpha_n} \\    & = \sum_{\alpha_1 + \cdots + \alpha_n = k} \frac{k!}{\alpha_1!\cdots\alpha_n!}x_1^{\alpha_1} \cdots x_n^{\alpha_n}    \end{aligned}</script><p>Q.E.D.</p><h4 id="定理5：Taylor公式"><a href="#定理5：Taylor公式" class="headerlink" title="定理5：Taylor公式"></a>定理5：Taylor公式</h4><blockquote><p>设$D \subset \mathbb{R}^n$是一个凸区域，$f \in C^{m+1}(D)$，$\boldsymbol{a}=(a_1,\cdots,a_n)$，$\boldsymbol{a}+\boldsymbol{h} = (a_1+h_1,\cdots,a_n+h_n)$是$D$中的两个点，则必存在$\theta \in (0, 1)$，使得</p><script type="math/tex; mode=display">    f(\boldsymbol{a} + \boldsymbol{h}) = \sum_{k=0}^m \sum_{|\boldsymbol{a}|=k} \frac{D^{\boldsymbol{\alpha}}f(\boldsymbol{a})}{\boldsymbol{\alpha}!} \boldsymbol{h}^{\boldsymbol{\alpha}} + \boldsymbol{R}_m</script><p>其中</p><script type="math/tex; mode=display">    D^{\boldsymbol{\alpha}}f(\boldsymbol{a}) = \frac{\partial^{\alpha_1+\cdots+\alpha_n}f}{\partial x_1^{\alpha_1} \cdots \partial x_n^{\alpha_n}}(\boldsymbol{a})</script><p>且</p><script type="math/tex; mode=display">    \boldsymbol{R}_m = \sum_{|\boldsymbol{\alpha}|=m+1} \frac{D^{\boldsymbol{\alpha}}f(\boldsymbol{a} + \theta \boldsymbol{h})}{\boldsymbol{\alpha}!} \boldsymbol{h}^{\boldsymbol{\alpha}}</script><p>称为Lagrange余项。</p></blockquote><p>证：固定$\boldsymbol{a},\boldsymbol{h}$，设$t \in [0,1]$，考虑$[0,1]$上的函数$\varphi(t) = f(\boldsymbol{a} + t \boldsymbol{h})$，显然$\varphi$在$[0,1]$上有$m+1$阶的连续导数，对$\varphi$用单变量函数的Taylor公式，得</p><script type="math/tex; mode=display">    \varphi(1) = \varphi(0) + \varphi^\prime(0) + \frac{1}{2!}\varphi^{\prime\prime}(0) + \cdots + \frac{1}{m!}\varphi^{(m)}(0) + \frac{1}{(m+1)!}\varphi^{(m+1)}(\theta) \tag{1}</script><p>其中$\theta \in (0, 1)$。显然$\varphi(1) = f(\boldsymbol{a} + \boldsymbol{h})$，$\varphi(0) = f(\boldsymbol{a})$，根据复合函数的求导公式得</p><script type="math/tex; mode=display">    \varphi^\prime(t) = \frac{\partial f}{\partial x_1}(\boldsymbol{a} + t \boldsymbol{h})h_1 + \cdots + \frac{\partial f}{\partial x_n}(\boldsymbol{a} + t \boldsymbol{h})h_n = \left(h_1\frac{\partial}{\partial x_1} + \cdots + h_n\frac{\partial}{\partial x_n}\right)f(\boldsymbol{a} + t \boldsymbol{h})</script><p>从而可得</p><script type="math/tex; mode=display">    \begin{aligned}        \varphi^{\prime\prime}(t) &= \left(h_1\frac{\partial}{\partial x_1} + \cdots + h_n\frac{\partial}{\partial x_n}\right)^2f(\boldsymbol{a} + t\boldsymbol{h}) \\        \cdots, \\        \varphi^{(m)}(t) &= \left(h_1\frac{\partial}{\partial x_1} + \cdots + h_n\frac{\partial}{\partial x_n}\right)^mf(\boldsymbol{a} + t\boldsymbol{h})    \end{aligned}</script><p>根据<a href="https://gamersover.github.io/2021/04/21/函数导数12/#定理4" target="_blank" rel="noopener">定理4</a>可知，</p><script type="math/tex; mode=display">    \varphi^{(k)}(t) = \sum_{|\boldsymbol{\alpha}|=k}\frac{k!}{\boldsymbol{\alpha}!}\frac{\partial^{\alpha_1}}{\partial x_1^{\alpha_1}}\cdots \frac{\partial ^{\alpha_n}}{\partial x_n^{\alpha_n}}f(\boldsymbol{a} + t\boldsymbol{h})\boldsymbol{h}^{\boldsymbol{\alpha}} = \sum_{|\boldsymbol{\alpha}|=k} \frac{k!}{\boldsymbol{\alpha}!}D^{\boldsymbol{\alpha}}f(\boldsymbol{a} + t\boldsymbol{h}) \boldsymbol{h}^{\boldsymbol{\alpha}}</script><p>所以</p><script type="math/tex; mode=display">    \varphi^{(k)}(0) = \sum_{|\boldsymbol{\alpha}|=k} \frac{k!}{\boldsymbol{\alpha}!}D^{\boldsymbol{\alpha}}f(\boldsymbol{a}) \boldsymbol{h}^{\boldsymbol{\alpha}}</script><p>将其代入(1)式，即得证明的结论。</p><p>Q.E.D.</p><h5 id="特别地"><a href="#特别地" class="headerlink" title="特别地"></a>特别地</h5><p>Taylor公式的前三项写出来就是</p><script type="math/tex; mode=display">    f(\boldsymbol{a} + \boldsymbol{h}) = f(\boldsymbol{a}) + \frac{\partial f}{\partial x_1}(\boldsymbol{a})h_1 + \cdots + \frac{\partial f}{\partial x_n}(\boldsymbol{a})h_n + \frac{1}{2} \sum_{i,j=1}^n\frac{\partial^2 f}{\partial x_i \partial x_j}(\boldsymbol{a})h_ih_j + \cdots</script><p>如果记</p><script type="math/tex; mode=display">    Hf(\boldsymbol{a}) = \begin{bmatrix}             \frac{\partial^2 f}{\partial x_1^2}(\boldsymbol{a}) & \cdots & \frac{\partial^2 f}{\partial x_1 \partial x_n}(\boldsymbol{a}) \\            \vdots & & \vdots \\            \frac{\partial^2 f}{\partial x_n \partial x_1}(\boldsymbol{a}) & \cdots & \frac{\partial^2 f}{\partial x_n^2}(\boldsymbol{a})    \end{bmatrix}</script><p>那么上式可写成</p><script type="math/tex; mode=display">    f(\boldsymbol{a} + \boldsymbol{h}) = f(\boldsymbol{a}) + Jf(\boldsymbol{a})\boldsymbol{h} + \frac{1}{2}\boldsymbol{h}^T Hf(\boldsymbol{a}) \boldsymbol{h} + \cdots</script><p>这里$Hf$称为$f$的Hesse方阵，它是一个$n$阶对称方阵。</p><h4 id="定理6"><a href="#定理6" class="headerlink" title="定理6"></a>定理6</h4><blockquote><p>设$D \subset \mathbb{R}^n$是一个凸区域，$f \in C^m(D)$，$\boldsymbol{a}$和$\boldsymbol{a}+\boldsymbol{h}$是$D$中的两个点，那么</p><script type="math/tex; mode=display">    f(\boldsymbol{a} + \boldsymbol{h}) = \sum_{k=0}^m \sum_{|\boldsymbol{\alpha}|=k} \frac{D^{\boldsymbol{\alpha}}f(\boldsymbol{a})}{\boldsymbol{\alpha}!} \boldsymbol{h}^{\boldsymbol{\alpha}} + o(\Vert \boldsymbol{h} \Vert^m) \quad (\boldsymbol{h} \to \boldsymbol{0})</script></blockquote><p>证：由<a href="https://gamersover.github.io/2021/04/21/函数导数12/#定理5：Taylor公式" target="_blank" rel="noopener">定理5</a>可知</p><script type="math/tex; mode=display">    f(\boldsymbol{a} + \boldsymbol{h}) = \sum_{k=0}^{m-1} \sum_{|\boldsymbol{\alpha}|=k} \frac{D^{\boldsymbol{\alpha}}f(\boldsymbol{a})}{\boldsymbol{\alpha}!} \boldsymbol{h}^{\boldsymbol{\alpha}} + \sum_{|\boldsymbol{\alpha}|=m}\frac{D^{\boldsymbol{\alpha}}f(\boldsymbol{a} + \theta \boldsymbol{h})}{\boldsymbol{\alpha}!} \boldsymbol{h}^{\boldsymbol{\alpha}} \tag{2}</script><p>其中$\theta \in (0, 1)$，因为$f$的$m$阶偏导数连续，所以</p><script type="math/tex; mode=display">    \lim \limits_{\boldsymbol{h} \to \boldsymbol{0}} D^{\boldsymbol{\alpha}}f(\boldsymbol{a} + \theta \boldsymbol{h}) = D^{\boldsymbol{\alpha}}f(\boldsymbol{a}) \quad (|\boldsymbol{\alpha}|=m)</script><p>从而有</p><script type="math/tex; mode=display">    D^{\boldsymbol{\alpha}}f(\boldsymbol{a} + \theta \boldsymbol{h}) = D^{\boldsymbol{\alpha}}f(\boldsymbol{a}) + o(1)  \quad (\boldsymbol{h} \to 0)</script><p>所以</p><script type="math/tex; mode=display">    \frac{D^{\boldsymbol{\alpha}}f(\boldsymbol{a} + \theta \boldsymbol{h})}{\boldsymbol{\alpha}!} \boldsymbol{h}^{\boldsymbol{\alpha}} = \frac{D^{\boldsymbol{\alpha}}f(\boldsymbol{a})}{\boldsymbol{\alpha}!} \boldsymbol{h}^{\boldsymbol{\alpha}} + o(\boldsymbol{h}^{\boldsymbol{\alpha}}) \quad (\boldsymbol{h} \to \boldsymbol{0})</script><p>当$|\boldsymbol{\alpha}|=m$时，有</p><script type="math/tex; mode=display">    |\boldsymbol{h}^{\boldsymbol{\alpha}}| = |h_1^{\alpha_1} \cdots h_n^{\alpha_n}| = |h_1|^{\alpha_1} \cdots |h_n|^{\alpha_n} \le \Vert \boldsymbol{h} \Vert^{m}</script><p>从而</p><script type="math/tex; mode=display">    \sum_{|\boldsymbol{\alpha}| = m}\frac{D^{\boldsymbol{\alpha}}f(\boldsymbol{a} + \theta \boldsymbol{h})}{\boldsymbol{\alpha}!} \boldsymbol{h}^{\boldsymbol{\alpha}} = \sum_{|\boldsymbol{\alpha}| = m}\frac{D^{\boldsymbol{\alpha}}f(\boldsymbol{a})}{\boldsymbol{\alpha}!} \boldsymbol{h}^{\boldsymbol{\alpha}} + o(\Vert \boldsymbol{h} \Vert^{m}) \quad (\boldsymbol{h} \to \boldsymbol{0})</script><p>将上式代入(2)式中，即证得命题成立。</p><p>Q.E.D.</p><h4 id="定理7：拟微分平均值定理"><a href="#定理7：拟微分平均值定理" class="headerlink" title="定理7：拟微分平均值定理"></a>定理7：拟微分平均值定理</h4><blockquote><p>设$\boldsymbol{f}: [a,b] \to \mathbb{R}^m$是$[a,b]$上的连续映射，在开区间$(a,b)$上可微，那么存在一点$\xi \in (a,b)$使得</p><script type="math/tex; mode=display">    \Vert \boldsymbol{f}(b) - \boldsymbol{f}(a) \Vert \le \Vert J\boldsymbol{f}(\xi) \Vert (b-a)</script></blockquote><p>证：设$\boldsymbol{u} = \boldsymbol{f}(b) - \boldsymbol{f}(a)$，利用$\mathbb{R}^m$中的内积来定义函数</p><script type="math/tex; mode=display">    \varphi(t) = \left<\boldsymbol{u}, \boldsymbol{f}(t)\right> \quad (a \le t \le b)</script><p>易知$\varphi$是$[a,b]$上的连续函数，并在开区间$(a,b)$上可微，对$\varphi$使用微分中值定理，可知存在一点$\xi \in (a,b)$使得</p><script type="math/tex; mode=display">    \varphi(b) - \varphi(a) = (b-a)\varphi^\prime(\xi) = (b-a)\left<\boldsymbol{u}, J\boldsymbol{f}(\xi) \right></script><p>而</p><script type="math/tex; mode=display">    \varphi(b) - \varphi(a) = \left< \boldsymbol{u}, \boldsymbol{f}(b) \right> - \left< \boldsymbol{u}, \boldsymbol{f}(a) \right> = \left< \boldsymbol{u}, \boldsymbol{f}(b) - \boldsymbol{f}(a)\right> = \left< \boldsymbol{u}, \boldsymbol{u} \right> = \Vert \boldsymbol{u} \Vert^2</script><p>由Cauchy-Schwarz不等式，可得</p><script type="math/tex; mode=display">    \Vert \boldsymbol{u} \Vert^2 = (b-a)\left< \boldsymbol{u}, J\boldsymbol{f}(\xi) \right> \le (b-a)\Vert \boldsymbol{u} \Vert \Vert J\boldsymbol{f}(\xi) \Vert</script><p>当$\boldsymbol{u} \ne \boldsymbol{0}$时，式子两边消去$\Vert \boldsymbol{u} \Vert$即得证原命题；若$\boldsymbol{u} = \boldsymbol{0}$，命题自然成立。</p><p>Q.E.D.</p><h4 id="定理8"><a href="#定理8" class="headerlink" title="定理8"></a>定理8</h4><blockquote><p>设凸区域$D \subset \mathbb{R}^n$，且映射$\boldsymbol{f}: D \to \mathbb{R}^m$在$D$上可微，则对任何$\boldsymbol{a},\boldsymbol{b} \in D$，在由$\boldsymbol{a}, \boldsymbol{b}$所决定的线段上必有一点$\boldsymbol{\xi}$，使得</p><script type="math/tex; mode=display">    \boldsymbol{f}(\boldsymbol{b}) - \boldsymbol{f}(\boldsymbol{a}) \le \Vert J\boldsymbol{f}(\boldsymbol{\xi}) \Vert \Vert \boldsymbol{b} - \boldsymbol{a}\Vert</script></blockquote><p>证：由$\boldsymbol{a}$与$\boldsymbol{b}$所决定的线段可表示为</p><script type="math/tex; mode=display">    \boldsymbol{r}(t) = \boldsymbol{a} + t (\boldsymbol{b} - \boldsymbol{a}) \quad (0 \le t \le 1)</script><p>令</p><script type="math/tex; mode=display">    \boldsymbol{g}(t) = \boldsymbol{f} \circ \boldsymbol{r}(t)</script><p>映射$g$在$[0,1]$上连续，在$(0,1)$内可微，从而</p><script type="math/tex; mode=display">    J\boldsymbol{g}(t) = J\boldsymbol{f}(\boldsymbol{r}(t))(\boldsymbol{b} - \boldsymbol{a})</script><p>由<a href="https://gamersover.github.io/2021/04/21/函数导数12/#定理7：拟微分平均值定理" target="_blank" rel="noopener">定理7</a>可知存在$\tau \in (0, 1)$，使得</p><script type="math/tex; mode=display">    \Vert \boldsymbol{g}(1) - \boldsymbol{g}(0)\Vert = \Vert J\boldsymbol{g}(\tau)\Vert</script><p>即</p><script type="math/tex; mode=display">    \Vert \boldsymbol{f}(\boldsymbol{b}) - \boldsymbol{f}(\boldsymbol{a}) \Vert \le \Vert J\boldsymbol{f}(\boldsymbol{r}(\tau))(\boldsymbol{b} - \boldsymbol{a}) \Vert</script><p>令$\boldsymbol{\xi} = \boldsymbol{r}(\tau)$，可得</p><script type="math/tex; mode=display">    \Vert \boldsymbol{f}(\boldsymbol{b}) - \boldsymbol{f}(\boldsymbol{a}) \Vert \le \Vert J\boldsymbol{f}(\boldsymbol{\xi})(\boldsymbol{b} - \boldsymbol{a}) \Vert \le \Vert J\boldsymbol{f}(\boldsymbol{\xi}) \Vert \Vert \boldsymbol{b} - \boldsymbol{a} \Vert</script><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数导数 </tag>
            
            <tag> 微分 </tag>
            
            <tag> Taylor定理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数导数十一：逆映射定理</title>
      <link href="/2021/04/19/%E5%87%BD%E6%95%B0%E5%AF%BC%E6%95%B011/"/>
      <url>/2021/04/19/%E5%87%BD%E6%95%B0%E5%AF%BC%E6%95%B011/</url>
      
        <content type="html"><![CDATA[<h4 id="定理1-局部逆映射定理"><a href="#定理1-局部逆映射定理" class="headerlink" title="定理1: 局部逆映射定理"></a>定理1: 局部逆映射定理</h4><blockquote><p>设开集$D \subset \mathbb{R}^n$，$\boldsymbol{f}: D \to \mathbb{R}^n$，满足：<br/><br>（a）$\boldsymbol{f} \in C^1(D)$； <br/><br>（b）有$\boldsymbol{x}_0 \in D$，使得</p><script type="math/tex; mode=display">    \det J\boldsymbol{f}(\boldsymbol{x}_0) \ne 0</script><p>记$\boldsymbol{y}_0 = \boldsymbol{f}(\boldsymbol{x}_0)$，那么存在$\boldsymbol{x}_0$的一个邻域$U$和$\boldsymbol{y}_0$的一个邻域$V$，使得 <br/><br>（1）$\boldsymbol{f}(U) = V$，且$\boldsymbol{f}$在$U$上是单射；<br/><br>（2）记$\boldsymbol{g}$是$\boldsymbol{f}$在$U$上的逆映射，$\boldsymbol{g} \in C^1(V)$；<br/><br>（3）当$\boldsymbol{y} \in V$时，</p><script type="math/tex; mode=display">    J\boldsymbol{g}(\boldsymbol{y}) = (J\boldsymbol{f}(\boldsymbol{x}))^{-1}</script><p>其中$\boldsymbol{x} = \boldsymbol{g}(\boldsymbol{y})$。</p></blockquote><a id="more"></a><p>证：令</p><script type="math/tex; mode=display">    \boldsymbol{F}(\boldsymbol{x}, \boldsymbol{y}) = \boldsymbol{f}(\boldsymbol{x}) - \boldsymbol{y}</script><p>这个映射定义在$D \times \mathbb{R}^n$上，显然有$\boldsymbol{F} \in C^1(D \times \mathbb{R}^n)$，并且、</p><script type="math/tex; mode=display">    \boldsymbol{F}(\boldsymbol{x}_0, \boldsymbol{y}_0) = \boldsymbol{f}(\boldsymbol{x}_0) - \boldsymbol{y}_0 = \boldsymbol{0}</script><p>再由条件（b）可知，</p><script type="math/tex; mode=display">    \det J_{\boldsymbol{x}} \boldsymbol{F} (\boldsymbol{x}_0, \boldsymbol{y}_0) = \det J\boldsymbol{f}(\boldsymbol{x}_0) \ne 0</script><p>从而由<a href="https://gamersover.github.io/2021/04/13/函数导数10/#定理3：隐映射定理" target="_blank" rel="noopener">函数导数十的定理3</a>可知，存在$\boldsymbol{x}_0$的邻域$H$和$\boldsymbol{y}_0$的邻域$V$，其中$H \subset D$，使得对每一点$\boldsymbol{y} \in V$，方程$\boldsymbol{F}(\boldsymbol{x}, \boldsymbol{y}) = \boldsymbol{0}$即$\boldsymbol{f}(\boldsymbol{x}) = \boldsymbol{y}$在$H$中有唯一解，记作$\boldsymbol{g}(\boldsymbol{y})$，其中$\boldsymbol{g} \in C^1(V)$，并且当$\boldsymbol{y} \in V$时，</p><script type="math/tex; mode=display">    \begin{aligned}    J\boldsymbol{g}(\boldsymbol{y}) &= -(J_{\boldsymbol{x}}\boldsymbol{F}(\boldsymbol{x}, \boldsymbol{y}))^{-1}J_{\boldsymbol{y}}\boldsymbol{F}(\boldsymbol{x}, \boldsymbol{y}) \\    &= -(J\boldsymbol{f}(\boldsymbol{x}))^{-1}(-\boldsymbol{I}_n) \\    &= (J\boldsymbol{f}(\boldsymbol{x}))^{-1}    \end{aligned}</script><p>其中$\boldsymbol{x} = \boldsymbol{g}(\boldsymbol{y})$。令$U = \boldsymbol{g}(V)$，可见$V = \boldsymbol{f}(U)$，$\boldsymbol{f}$与$\boldsymbol{U}$互为逆映射，最后证明$U$是开集，事实上有$U = H \cap \boldsymbol{f}^{-1}(V)$，由于$V$是开集且$\boldsymbol{f}$是连续映射，从而根据<a href="https://gamersover.github.io/2021/01/21/函数极限7/#定理3" target="_blank" rel="noopener">函数极限七的定理3</a>知$\boldsymbol{f}^{-1}(V)$是开集，又英文$H$是开集，所以$U$也是开集。</p><h4 id="定理2：逆映射定理"><a href="#定理2：逆映射定理" class="headerlink" title="定理2：逆映射定理"></a>定理2：逆映射定理</h4><blockquote><p>设开集$D \subset \mathbb{R}^n$，$\boldsymbol{f}: D \to \mathbb{R}^n$，满足：<br/><br>（a）$\boldsymbol{f} \in C^1(D)$；<br/><br>（b）对每一个$\boldsymbol{x} \in D$，有$\det J\boldsymbol{f}(\boldsymbol{x}) \ne 0$ <br /><br>那么$G = \boldsymbol{f}(D)$是一开集，又如果：<br/><br>（c）$\boldsymbol{f}$是$D$上的单射，<br/><br>那么：<br/><br>（1）存在从$G$到$D$上的映射$\boldsymbol{f}^{-1}$，满足：对一切$\boldsymbol{y} \in G$，有</p><script type="math/tex; mode=display">    \boldsymbol{f} \circ \boldsymbol{f}^{-1}(\boldsymbol{y}) = \boldsymbol{y}</script><p>（2）$\boldsymbol{f}^{-1} \in C^1(G)$；<br/><br>（3）</p><script type="math/tex; mode=display">    J\boldsymbol{f}^{-1}(\boldsymbol{y}) = (J\boldsymbol{f}(\boldsymbol{x}))^{-1} \quad (\boldsymbol{x} = J\boldsymbol{f}^{-1}(\boldsymbol{y}))</script></blockquote><p>证：由于$\boldsymbol{f}$是单射，所以逆映射$\boldsymbol{f}^{-1}$必然存在，所以（1）成立；再由<a href="https://gamersover.github.io/2021/04/19/函数导数11/#定理1-局部逆映射定理" target="_blank" rel="noopener">定理1</a>可知，（2）（3）自然也成立。接下来只需证明$\boldsymbol{f}(D)$是开集，任取$\boldsymbol{y} \in G$，由<a href="https://gamersover.github.io/2021/04/19/函数导数11/#定理1-局部逆映射定理" target="_blank" rel="noopener">定理1</a>可知，存在$\boldsymbol{x}$的一个邻域$U$和$\boldsymbol{y}$的一个邻域$V$，使得$V = \boldsymbol{f}(U) \subset \boldsymbol{f}(D) = G$，即$\boldsymbol{y}$是$G$的内点，从而$G$是开集。</p><h4 id="定义2：正则映射"><a href="#定义2：正则映射" class="headerlink" title="定义2：正则映射"></a>定义2：正则映射</h4><blockquote><p>设开集$D \subset \mathbb{R}^n$，$\boldsymbol{f}: D \to \mathbb{R}^n$，满足以下三个条件：<br/><br>（1）$\boldsymbol{f} \in C^1(D)$；<br/><br>（2）$\boldsymbol{f}$是$D$上的单射；<br/><br>（3）$\det J\boldsymbol{f}(\boldsymbol{x}) \ne 0$对一切$\boldsymbol{x} \in D$成立。<br/><br>则称$\boldsymbol{f}$是$D$上的一个正则映射。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数导数 </tag>
            
            <tag> 微分 </tag>
            
            <tag> 逆映射 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UI开发之PyQt5一：控件和布局的关系</title>
      <link href="/2021/04/16/UI%E5%BC%80%E5%8F%91%E4%B9%8BpyQt5-1/"/>
      <url>/2021/04/16/UI%E5%BC%80%E5%8F%91%E4%B9%8BpyQt5-1/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>PyQt5是一个用来开发UI的python第三方库，UI不外乎显示控件，布局与交互，简单说就是确定UI需要展示哪些东西，这些东西如何排布在界面上以及操作这些东西的逻辑是什么。而PyQt5的控件与布局几乎都在QtWidgets这个类里面，至于交互就是后面所要讲的信号与槽。</p><a id="more"></a><h3 id="显示控件"><a href="#显示控件" class="headerlink" title="显示控件"></a>显示控件</h3><p>PyQt5要显示控件，需要依附在顶层类中，这些顶层类作为主入口来显示其他控件，而顶层显示类大概有三种：</p><ol><li><strong>QMainWindow</strong><br>最常用的顶层显示类，具有菜单栏、工具栏、状态栏、标题栏等</li><li><strong>QDialog</strong><br>一般用在对话窗口，属于非长时间展示的窗口，没有菜单栏，工具栏等</li><li><strong>Qwidget</strong><br>所有显示控件的父类，可以作为UI显示的主窗口，也可以作为子窗口嵌入到其他控件，比较灵活</li></ol><p>以上三个类都在<code>PyQt5.QtWidgets</code>类下面。</p><p>常用显示控件有：</p><ul><li><code>QMenu</code>：菜单栏</li><li><code>QLineEdit</code>：单行文本编辑框</li><li><code>QTextEdit</code>：多行文本编辑框</li><li><code>QProgressBar</code>：进度条</li><li><code>QPushButton</code>：按钮</li><li><code>QRadioButton</code>：单选按钮</li><li><code>QCheckBox</code>：复选按钮</li><li><code>QLable</code>：标签类，用来显示文本或图片</li></ul><p>以上控件也在<code>PyQt5.QtWidgets</code>类下面。</p><h3 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h3><p>一个父控件下面可以包含许多子控件，而子控件的显示方式就依赖于布局，PyQt5中的布局方式有很多，这里先简单介绍几种：</p><ol><li><strong>QHBoxLayout</strong><br> 水平显示布局，所有的控件水平排列</li><li><strong>QVBoxLayout</strong><br> 垂直显示布局，所有的控件垂直排列</li><li><strong>QGridLayout</strong><br> 网格布局，可以指定控件的具体位置（哪行哪列）</li></ol><p>以上布局在<code>PyQt5.QtWidgets</code>类下面。</p><p>PyQt5控件布局的基本逻辑是：</p><ol><li>父控件假设为<code>pWidget</code>，<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pWidget = QWidget()</span><br></pre></td></tr></table></figure></li><li>给该控件添加一种布局<code>layout</code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pWidget.setLayout(layout)</span><br></pre></td></tr></table></figure></li><li>在layout里面添加子控件<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">layout.addWidget(widget1)</span><br><span class="line">layout.addWidget(widget2)</span><br></pre></td></tr></table></figure></li></ol><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><h3 id="主窗口写法"><a href="#主窗口写法" class="headerlink" title="主窗口写法"></a>主窗口写法</h3><p>界面展示：<br><img src="https://raw.githubusercontent.com/gamersover/hexo_blog_assets/main/pyqt%E6%95%99%E7%A8%8B/No1.jpg" width="25%"><br>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QMainWindow, QApplication</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainWindow</span><span class="params">(QMainWindow)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, parent=None)</span>:</span></span><br><span class="line">        super(MainWindow, self).__init__(parent)   </span><br><span class="line">        self.init_ui()</span><br><span class="line">        self.show()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">init_ui</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.setGeometry(<span class="number">200</span>, <span class="number">200</span>, <span class="number">1600</span>, <span class="number">800</span>)</span><br><span class="line">        self.setWindowTitle(<span class="string">"主窗口"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    app = QApplication(sys.argv[<span class="number">1</span>:])</span><br><span class="line"></span><br><span class="line">    window = MainWindow()</span><br><span class="line">    window.show()</span><br><span class="line"></span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure><p>可以看到初始化了一个主窗口<code>QMainWindow</code>，其中Qt程序的入口使用<code>QApplication</code>类实现，主窗口的属性如下：</p><div class="table-container"><table><thead><tr><th style="text-align:left"></th><th style="text-align:left">API</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">窗口大小与位置</td><td style="text-align:left">setGeometry(ax: int, ay: int, aw: int, ah: int)</td><td style="text-align:left">统一设置窗口的显示位置和大小，ax,ay表示窗口左上角坐标，aw,ah表示窗口的宽和高，都是以像素为单位</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">move(ax: int, ay: int)</td><td style="text-align:left">单独设置窗口的显示位置即左上角坐标</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setFixedSize(w: int, h: int)</td><td style="text-align:left">单独设置窗口的大小即宽和高</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setFixedWidth(w: int)</td><td style="text-align:left">单独设置窗口的宽</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setFixedHeight(h: int)</td><td style="text-align:left">单独设置窗口的高</td></tr><tr><td style="text-align:left">窗口标题与图标</td><td style="text-align:left">setWindowTitle(a0: str)</td><td style="text-align:left">设置窗口标题</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">setWindowIcon(icon: QIcon)</td><td style="text-align:left">设置窗口图标</td></tr><tr><td style="text-align:left">控件显示</td><td style="text-align:left">show()</td><td style="text-align:left">显示控件与其子控件</td></tr></tbody></table></div><h3 id="设置布局和添加控件"><a href="#设置布局和添加控件" class="headerlink" title="设置布局和添加控件"></a>设置布局和添加控件</h3><p>有了主窗口后，就可以添加想要添加的控件了，如下面代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init_ui</span><span class="params">(self)</span>:</span></span><br><span class="line">    self.setGeometry(<span class="number">200</span>, <span class="number">200</span>, <span class="number">1600</span>, <span class="number">800</span>)</span><br><span class="line">    self.setWindowTitle(<span class="string">"主窗口"</span>)</span><br><span class="line"></span><br><span class="line">    main_widget = QWidget()</span><br><span class="line">    main_layout = QVBoxLayout()</span><br><span class="line">    main_widget.setLayout(main_layout)</span><br><span class="line">    line_edit1 = QLineEdit()</span><br><span class="line">    line_edit1.setPlaceholderText(<span class="string">"用户名"</span>)</span><br><span class="line">    line_edit2 = QLineEdit()</span><br><span class="line">    line_edit2.setPlaceholderText(<span class="string">"密码"</span>)</span><br><span class="line">    main_layout.addWidget(line_edit1)</span><br><span class="line">    main_layout.addWidget(line_edit2)</span><br><span class="line"></span><br><span class="line">    self.setCentralWidget(main_widget)</span><br></pre></td></tr></table></figure><p>其中创建了一个主控件<code>main_widget</code>用来显示其他控件，使用<code>setCentralWidget(main_widget)</code>可以将<code>main_widget</code>设置为主窗口<code>QMainWindow</code>的中央控件，该控件使用了垂直布局方式<code>QVBoxlayout</code>，其中包含两个文本编辑子控件<code>QLineEdit</code>。从这里也可以看出widget和layout的关系：</p><blockquote><p>widget.setLayout(layout)<br>layout.addWidget(widget)</p></blockquote><p><code>widget</code>通过<code>setLayout</code>方法添加布局，而<code>layout</code>通过<code>addWidget</code>方法添加子控件。</p><h3 id="控件的嵌套"><a href="#控件的嵌套" class="headerlink" title="控件的嵌套"></a>控件的嵌套</h3><p>当需要实现复杂的UI界面时，控件之间嵌套必不可少，比如要实现下图中的界面：<br><img src="https://raw.githubusercontent.com/gamersover/hexo_blog_assets/main/pyqt%E6%95%99%E7%A8%8B/No3.jpg" width="25%"><br>可以先整理下该界面中的有哪些控件以及包含关系：<br><img src="https://raw.githubusercontent.com/gamersover/hexo_blog_assets/main/pyqt%E6%95%99%E7%A8%8B/No2.jpg" width="60%"><br>其中主控件(<code>main_widget</code>)包含左右两个控件，而右边控件(<code>right_widget</code>)又包含两个控件，所以代码实现为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QMainWindow, QApplication, QVBoxLayout, QWidget, QHBoxLayout</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainWindow</span><span class="params">(QMainWindow)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, parent=None)</span>:</span></span><br><span class="line">        super(MainWindow, self).__init__(parent)   </span><br><span class="line">        self.init_ui()</span><br><span class="line">        self.show()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">init_ui</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.setStyleSheet(<span class="string">"border:2px solid black"</span>)</span><br><span class="line">        self.setGeometry(<span class="number">1000</span>, <span class="number">400</span>, <span class="number">300</span>, <span class="number">300</span>)</span><br><span class="line">        self.setWindowTitle(<span class="string">"主窗口"</span>)</span><br><span class="line"></span><br><span class="line">        main_widget = QWidget()</span><br><span class="line">        self.setCentralWidget(main_widget)</span><br><span class="line"></span><br><span class="line">        main_layout = QHBoxLayout()</span><br><span class="line">        main_widget.setLayout(main_layout)</span><br><span class="line">        </span><br><span class="line">        left_widget = QWidget()</span><br><span class="line">        right_widget = QWidget()</span><br><span class="line">        main_layout.addWidget(left_widget)</span><br><span class="line">        main_layout.addWidget(right_widget)</span><br><span class="line"></span><br><span class="line">        right_layout = QVBoxLayout()</span><br><span class="line">        right_widget.setLayout(right_layout)</span><br><span class="line">        </span><br><span class="line">        top_widget = QWidget()</span><br><span class="line">        buttom_widget = QWidget()</span><br><span class="line">        right_layout.addWidget(top_widget)</span><br><span class="line">        right_layout.addWidget(buttom_widget)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    app = QApplication(sys.argv[<span class="number">1</span>:])</span><br><span class="line"></span><br><span class="line">    window = MainWindow()</span><br><span class="line">    window.show()</span><br><span class="line"></span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure><p><code>main_widget</code>使用了<code>QHBoxLayout</code>布局方式，包含<code>left_widget</code>和<code>right_widget</code>两个子控件；而<code>right_widget</code>使用了<code>QVBoxLayout</code>布局方式，包含了<code>top_widget</code>和<code>buttom_widget</code>两个子控件。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UI开发 </tag>
            
            <tag> Qt </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库之sql实践</title>
      <link href="/2021/04/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8Bsql%E5%AE%9E%E8%B7%B5/"/>
      <url>/2021/04/16/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8Bsql%E5%AE%9E%E8%B7%B5/</url>
      
        <content type="html"><![CDATA[<!--    view视图的概念？    开始声明多种sql数据库的存在，然后这里使用hivesql2.x版本作为演示等等等    1. 可首先用脑图作为辅助介绍数据库->表->字段->数据的概念    2. 接着介绍sql关键词的书写顺序和执行顺序    3. 再介绍一些实践操作和join等等操作--><h1 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h1><p>数据库，顾名思义用来存放数据的地方，可以把数据库比作图书馆，图书馆里面有不同区域相当于不同的数据库（database），而每个区域又存放着不同的书籍，相当于每个database含有很多表（table），图中表现了这种关系。<br><a id="more"></a></p><p><img src="https://raw.githubusercontent.com/gamersover/hexo_blog_assets/main/%E6%95%B0%E6%8D%AE%E5%BA%93/No1.jpg" width="25%"></p><p>而表中有包含数据，数据是由记录（行）和字段（列）构成的，每条记录的字段的数据就是存储的数据。表即普通的表格，下表中有两条记录（两行），三个字段（三列）为<code>id</code>，<code>name</code>，<code>age</code>。</p><div class="table-container"><table><thead><tr><th style="text-align:center">id</th><th style="text-align:center">name</th><th style="text-align:center">age</th></tr></thead><tbody><tr><td style="text-align:center">0</td><td style="text-align:center">superman</td><td style="text-align:center">32</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">wonderwoman</td><td style="text-align:center">102</td></tr></tbody></table></div><p>对于数据库，表，记录，字段都有增、删、改、查的操作，而sql（Structured Query Language）即结构化查询语言就是用来完成这些操作的，对于不同的对象有着不同的sql语句。大致包含对数据库的操作，对表的操作，对字段的操作，对记录的操作。在执行单条sql语句时可以不以<code>;</code>结束，但是执行多条语句时需要以<code>;</code>结束。而且sql语句大小写不敏感，即不区分大小写。</p><h1 id="2-数据库操作sql"><a href="#2-数据库操作sql" class="headerlink" title="2. 数据库操作sql"></a>2. 数据库操作sql</h1><h2 id="2-1-查"><a href="#2-1-查" class="headerlink" title="2.1 查"></a>2.1 查</h2><ul><li><p><strong>show databases</strong>：查询当前所有数据库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> SHOW DATABASES;</span></span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></li><li><p><strong>use 数据库名</strong>：连接到指定的数据库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> use mysql;</span></span><br><span class="line">Database changed</span><br></pre></td></tr></table></figure></li><li><p><strong>show tables</strong>：查看该数据库中的所有表</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show tables;</span></span><br><span class="line">+------------------------------------------------------+</span><br><span class="line">| Tables_in_mysql                                      |</span><br><span class="line">+------------------------------------------------------+</span><br><span class="line">| columns_priv                                         |</span><br><span class="line">| component                                            |</span><br><span class="line">| db                                                   |</span><br><span class="line">| default_roles                                        |</span><br><span class="line">...                                                  </span><br><span class="line">| engine_cost                                          |</span><br><span class="line">| func                                                 |</span><br><span class="line">| time_zone_name                                       |</span><br><span class="line">+------------------------------------------------------+</span><br><span class="line">35 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></li></ul><h2 id="2-2-增"><a href="#2-2-增" class="headerlink" title="2.2 增"></a>2.2 增</h2><ul><li><strong>create database 数据库名</strong>：创建数据库<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create database mydatabase;</span></span><br><span class="line">Query OK, 1 row affected (1.93 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show databases;</span></span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mydatabase         |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></li></ul><h2 id="2-3-删"><a href="#2-3-删" class="headerlink" title="2.3 删"></a>2.3 删</h2><ul><li><strong>drop database 数据库名</strong>：删除数据库<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> drop database mydatabase;</span></span><br><span class="line">Query OK, 0 rows affected (2.01 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show databases;</span></span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></li></ul><h2 id="2-4-改"><a href="#2-4-改" class="headerlink" title="2.4 改"></a>2.4 改</h2><p>数据库名称没有直接修改命令，只能重新创建新库然后导入旧库</p><h1 id="3-表操作sql"><a href="#3-表操作sql" class="headerlink" title="3. 表操作sql"></a>3. 表操作sql</h1><h2 id="3-1-增"><a href="#3-1-增" class="headerlink" title="3.1 增"></a>3.1 增</h2><ul><li><strong>create table</strong>： 创建表<br>语法：  <figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE 表名</span><br><span class="line">(</span><br><span class="line">字段名<span class="number">1</span> 数据类型,</span><br><span class="line">字段名<span class="number">2</span> 数据类型,</span><br><span class="line">字段名<span class="number">3</span> 数据类型,</span><br><span class="line">...</span><br><span class="line">)</span><br></pre></td></tr></table></figure>数据库的基本数据类型可以分为三种：数字型，字符串型，日期型，而数字型又有整型和小数。由于每一种数据库的数据类型不太一样，以mysql为例<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create table dc_character(</span></span><br><span class="line">       id int,</span><br><span class="line">       name varchar(255),</span><br><span class="line">       age int)</span><br><span class="line">Query OK, 0 rows affected (2.60 sec)</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-2-查"><a href="#3-2-查" class="headerlink" title="3.2 查"></a>3.2 查</h2><ul><li><strong>desc 表名</strong>：查看表详情<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> desc dc_character;</span></span><br><span class="line">+-------+--------------+------+-----+---------+-------+</span><br><span class="line">| Field | Type         | Null | Key | Default | Extra |</span><br><span class="line">+-------+--------------+------+-----+---------+-------+</span><br><span class="line">| id    | int          | YES  |     | NULL    |       |</span><br><span class="line">| name  | varchar(255) | YES  |     | NULL    |       |</span><br><span class="line">| age   | int          | YES  |     | NULL    |       |</span><br><span class="line">+-------+--------------+------+-----+---------+-------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-3-改"><a href="#3-3-改" class="headerlink" title="3.3 改"></a>3.3 改</h2><ul><li><strong>alter table 旧表名 rename to 新表名</strong>：修改表名<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> alter table dc_character rename to dc;</span></span><br><span class="line">Query OK, 0 rows affected (2.17 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show tables;</span></span><br><span class="line">+----------------------+</span><br><span class="line">| Tables_in_mydatabase |</span><br><span class="line">+----------------------+</span><br><span class="line">| dc                   |</span><br><span class="line">+----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-4-删"><a href="#3-4-删" class="headerlink" title="3.4 删"></a>3.4 删</h2><ul><li><strong>drop table 表名</strong>：删除表<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> drop table dc;</span></span><br><span class="line">Query OK, 0 rows affected (2.14 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show databases;</span></span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mydatabase         |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-5-字段操作sql"><a href="#3-5-字段操作sql" class="headerlink" title="3.5 字段操作sql"></a>3.5 字段操作sql</h2><p>字段即表的列属性，而表字段本身包含5个属性：</p><ol><li><strong>Field</strong>：字段的名称</li><li><strong>Type</strong>：字段数据类型</li><li><strong>Null</strong>：字段的数据是否可以为<code>Null</code>，取值可以是<code>null</code>或者<code>not null</code>，后者就表示字段取值不可以是空</li><li><strong>KEY</strong>：字段是否是主键或外来键，取值有<code>primary key</code>，<code>unique Key</code>, <code>key</code> 和 <code>foreign Key</code></li><li><strong>Default</strong>：字段的默认值</li><li><strong>Extra</strong>：字段的一些额外信息</li></ol><h3 id="3-5-1-增"><a href="#3-5-1-增" class="headerlink" title="3.5.1 增"></a>3.5.1 增</h3><p>创建字段时可以加入属性，基本语法为<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">字段名 字段类型 <span class="selector-attr">[Null取值]</span> <span class="selector-attr">[KEY取值]</span> <span class="selector-attr">[Default 默认值]</span> <span class="selector-attr">[Extra信息]</span></span><br></pre></td></tr></table></figure></p><p>比如<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create table dc(</span></span><br><span class="line"><span class="meta">  -&gt;</span><span class="bash"> id int primary key auto_increment,</span></span><br><span class="line"><span class="meta">  -&gt;</span><span class="bash"> name varchar(255) not null,</span></span><br><span class="line"><span class="meta">  -&gt;</span><span class="bash"> age int default 30);</span></span><br><span class="line">Query OK, 0 rows affected (1.35 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> desc dc;</span></span><br><span class="line">+-------+--------------+------+-----+---------+----------------+</span><br><span class="line">| Field | Type         | Null | Key | Default | Extra          |</span><br><span class="line">+-------+--------------+------+-----+---------+----------------+</span><br><span class="line">| id    | int          | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| name  | varchar(255) | YES  |     | NULL    |                |</span><br><span class="line">| age   | int          | YES  |     | 30      |                |</span><br><span class="line">+-------+--------------+------+-----+---------+----------------+</span><br></pre></td></tr></table></figure></p><p>创建了表，其中<code>id</code>字段设置为主键，并设置为自增；<code>name</code>字段设置数据不能为<code>Null</code>；<code>age</code>字段设置默认值为30。</p><h3 id="3-5-2-查"><a href="#3-5-2-查" class="headerlink" title="3.5.2 查"></a>3.5.2 查</h3><p>查询表的字段信息与前面的<a href="https://gamersover.github.io/2021/04/16/数据库之sql实践/#3-2-查" target="_blank" rel="noopener">表操作查询</a>一样</p><h3 id="3-5-3-改"><a href="#3-5-3-改" class="headerlink" title="3.5.3 改"></a>3.5.3 改</h3><ul><li><p><strong>alter table 表名 add 新字段名 数据类型</strong>：增加字段</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> alter table dc add power bigint;</span></span><br><span class="line">Query OK, 0 rows affected (2.14 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> desc dc;</span></span><br><span class="line">+-------+--------------+------+-----+---------+-------+</span><br><span class="line">| Field | Type         | Null | Key | Default | Extra |</span><br><span class="line">+-------+--------------+------+-----+---------+-------+</span><br><span class="line">| id    | int          | YES  |     | NULL    |       |</span><br><span class="line">| name  | varchar(255) | YES  |     | NULL    |       |</span><br><span class="line">| age   | int          | YES  |     | NULL    |       |</span><br><span class="line">| power | bigint       | YES  |     | NULL    |       |</span><br><span class="line">+-------+--------------+------+-----+---------+-------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></li><li><p><strong>alter table 表名称 change 旧字段名 新字段名 新字段类型</strong>：修改字段</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> alter table dc change power power_level int;</span></span><br><span class="line">Query OK, 2 rows affected (2.36 sec)</span><br><span class="line">Records: 2  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> desc dc;</span></span><br><span class="line">+-------------+--------------+------+-----+---------+-------+</span><br><span class="line">| Field       | Type         | Null | Key | Default | Extra |</span><br><span class="line">+-------------+--------------+------+-----+---------+-------+</span><br><span class="line">| id          | int          | YES  |     | NULL    |       |</span><br><span class="line">| name        | varchar(255) | YES  |     | NULL    |       |</span><br><span class="line">| age         | int          | YES  |     | NULL    |       |</span><br><span class="line">| power_level | int          | YES  |     | NULL    |       |</span><br><span class="line">+-------------+--------------+------+-----+---------+-------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></li><li><p><strong>alter table 表名称 modify 字段名称 新字段类型</strong>：只修改字段类型</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> alter table dc modify power_level bigint;</span></span><br><span class="line">Query OK, 2 rows affected (2.56 sec)</span><br><span class="line">Records: 2  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> desc dc;</span></span><br><span class="line">+-------------+--------------+------+-----+---------+-------+</span><br><span class="line">| Field       | Type         | Null | Key | Default | Extra |</span><br><span class="line">+-------------+--------------+------+-----+---------+-------+</span><br><span class="line">| id          | int          | YES  |     | NULL    |       |</span><br><span class="line">| name        | varchar(255) | YES  |     | NULL    |       |</span><br><span class="line">| age         | int          | YES  |     | NULL    |       |</span><br><span class="line">| power_level | bigint       | YES  |     | NULL    |       |</span><br><span class="line">+-------------+--------------+------+-----+---------+-------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-5-4-删"><a href="#3-5-4-删" class="headerlink" title="3.5.4 删"></a>3.5.4 删</h3><ul><li><strong>alter table 表名 drop 字段名</strong>：删除字段<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">ysql&gt;</span><span class="bash"> alter table dc drop power_level;</span></span><br><span class="line">Query OK, 0 rows affected (1.14 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> desc dc;</span></span><br><span class="line">+-------+--------------+------+-----+---------+-------+</span><br><span class="line">| Field | Type         | Null | Key | Default | Extra |</span><br><span class="line">+-------+--------------+------+-----+---------+-------+</span><br><span class="line">| id    | int          | YES  |     | NULL    |       |</span><br><span class="line">| name  | varchar(255) | YES  |     | NULL    |       |</span><br><span class="line">| age   | int          | YES  |     | NULL    |       |</span><br><span class="line">+-------+--------------+------+-----+---------+-------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-6-数据操作sql"><a href="#3-6-数据操作sql" class="headerlink" title="3.6 数据操作sql"></a>3.6 数据操作sql</h2><p>假设表<code>dc</code>的结构为<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> desc dc;</span></span><br><span class="line">+------------+--------------+------+-----+---------+----------------+</span><br><span class="line">| Field      | Type         | Null | Key | Default | Extra          |</span><br><span class="line">+------------+--------------+------+-----+---------+----------------+</span><br><span class="line">| id         | int          | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| name       | varchar(255) | NO   |     | NULL    |                |</span><br><span class="line">| age        | int          | YES  |     | 30      |                |</span><br><span class="line">| powerlevel | int          | YES  |     | NULL    |                |</span><br><span class="line">+------------+--------------+------+-----+---------+----------------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></p><h3 id="3-6-1-查"><a href="#3-6-1-查" class="headerlink" title="3.6.1 查"></a>3.6.1 查</h3><p>查询表数据是最重要，也是最常用的sql语句。</p><h4 id="3-6-1-1-基本语法"><a href="#3-6-1-1-基本语法" class="headerlink" title="3.6.1.1 基本语法"></a>3.6.1.1 基本语法</h4><ul><li><strong>select 字段1 [as 别名1], 字段2 [as 别名2], … from 表名 [where 条件] [order by 字段名 [desc|asc]] [limit 条数]</strong>：从表中选择满足条件的数据的指定字段，再按照某个字段排序后并限制前面多少条输出<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from dc; -- 最简单的查询语句，查询所有记录，* 表示所有字段</span><br><span class="line">+<span class="comment">----+-------------+------+------------+</span></span><br><span class="line">| id | name        | age  | powerlevel |</span><br><span class="line">+<span class="comment">----+-------------+------+------------+</span></span><br><span class="line">|  1 | superman    |   35 |         10 |</span><br><span class="line">|  2 | wonderwoman |   32 |          8 |</span><br><span class="line">|  3 | batman      |   35 |          4 |</span><br><span class="line">|  4 | flash       |   30 |          7 |</span><br><span class="line">|  5 | lantern     |   30 |          6 |</span><br><span class="line">|  6 | supergirl   |   33 |          8 |</span><br><span class="line">|  7 | cyborg      |   32 |          5 |</span><br><span class="line">+<span class="comment">----+-------------+------+------------+</span></span><br><span class="line">7 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">select</span> * <span class="keyword">from</span> dc <span class="keyword">where</span> age&gt;=<span class="number">35</span>; <span class="comment">-- 加入条件查询年龄age大于等于25的记录</span></span><br><span class="line">+<span class="comment">----+----------+------+------------+</span></span><br><span class="line">| id | name     | age  | powerlevel |</span><br><span class="line">+<span class="comment">----+----------+------+------------+</span></span><br><span class="line">|  1 | superman |   35 |         10 |</span><br><span class="line">|  3 | batman   |   35 |          4 |</span><br><span class="line">+<span class="comment">----+----------+------+------------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">select</span> <span class="keyword">name</span>, age, powerlevel <span class="keyword">from</span> dc <span class="keyword">where</span> age&gt;= <span class="number">35</span> <span class="keyword">order</span> <span class="keyword">by</span> powerlevel; <span class="comment">-- 在上一个查询基础上加入对结果按powerlevel排序，默认按升序（asc），加入关键词desc，可以使结果按降序</span></span><br><span class="line">+<span class="comment">----+----------+------+------------+</span></span><br><span class="line">| id | name     | age  | powerlevel |</span><br><span class="line">+<span class="comment">----+----------+------+------------+</span></span><br><span class="line">|  3 | batman   |   35 |          4 |</span><br><span class="line">|  1 | superman |   35 |         10 |</span><br><span class="line">+<span class="comment">----+----------+------+------------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">select</span> * <span class="keyword">from</span> dc <span class="keyword">limit</span> <span class="number">3</span>; <span class="comment">-- 查询记录只显示前面3条</span></span><br><span class="line">+<span class="comment">----+-------------+------+------------+</span></span><br><span class="line">| id | name        | age  | powerlevel |</span><br><span class="line">+<span class="comment">----+-------------+------+------------+</span></span><br><span class="line">|  1 | superman    |   35 |         10 |</span><br><span class="line">|  2 | wonderwoman |   32 |          8 |</span><br><span class="line">|  3 | batman      |   35 |          4 |</span><br><span class="line">+<span class="comment">----+-------------+------+------------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-6-1-2-聚合语法"><a href="#3-6-1-2-聚合语法" class="headerlink" title="3.6.1.2 聚合语法"></a>3.6.1.2 聚合语法</h4><ul><li><strong>select [字段1, 字段2, …] 聚合函数3(字段3) [ [as] 别名3], 聚合函数4(字段4) [ [as] 别名4], … from 表名 [group by 字段1, 字段2, …]</strong>：对某几个字段聚合，即相同的归一类，然后对其他字段求聚合函数，比如最大最小值等<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select max(powerlevel) from dc where age&lt;35; -- 不加group by 对所有记录取聚合函数</span><br><span class="line">+<span class="comment">-----------------+</span></span><br><span class="line">| max(powerlevel) |</span><br><span class="line">+<span class="comment">-----------------+</span></span><br><span class="line">|               8 |</span><br><span class="line">+<span class="comment">-----------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">select</span> age, <span class="keyword">max</span>(powerlevel) <span class="keyword">as</span> mp <span class="keyword">from</span> dc <span class="keyword">group</span> <span class="keyword">by</span> age <span class="keyword">order</span> <span class="keyword">by</span> mp <span class="keyword">desc</span>; <span class="comment">-- 查看年龄相同的数据中分别最大的powerlevel，并按照最大值降序排序，取别名 as 可以省略，直接 max(powerlevel) mp</span></span><br><span class="line">+<span class="comment">------+------+</span></span><br><span class="line">| age  | mp   |</span><br><span class="line">+<span class="comment">------+------+</span></span><br><span class="line">|   35 |   10 |</span><br><span class="line">|   32 |    8 |</span><br><span class="line">|   33 |    8 |</span><br><span class="line">|   30 |    7 |</span><br><span class="line">+<span class="comment">------+------+</span></span><br><span class="line">4 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-6-1-3-多表联合查询"><a href="#3-6-1-3-多表联合查询" class="headerlink" title="3.6.1.3 多表联合查询"></a>3.6.1.3 多表联合查询</h4><p>有时候需要联合多个表的数据来统计结果，这时需要用到<code>join</code>语句，与前面两种语法相比，只需要改变<code>from</code>后面的语法即可。</p><ul><li><strong>select … from 表1 [ [as] 别名1 ] [left|right|outer|inner] join 表2 [ [as] 别名2 ] on ([表1|别名1].字段1=[表2|别名2].字段1 [and 表1.字段1=表2.字段1]…)</strong>：基于相同字段的值联合多个表查询</li></ul><p>假设新增一个表<code>dc_name</code>，其数据为<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from dc_name;</span><br><span class="line">+<span class="comment">------+------------+------+</span></span><br><span class="line">| id   | name       | iq   |</span><br><span class="line">+<span class="comment">------+------------+------+</span></span><br><span class="line">|    1 | lex luthor |  100 |</span><br><span class="line">|    2 | batman     |  100 |</span><br><span class="line">+<span class="comment">------+------------+------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></p><h5 id="inner-join"><a href="#inner-join" class="headerlink" title="inner join"></a>inner join</h5><blockquote><p>表示两个表取交集，即两个表都存在的数据取出</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> dc t1 <span class="keyword">inner</span> <span class="keyword">join</span> dc_name t2 <span class="keyword">on</span> (t1.name=t2.name); <span class="comment">-- 默认会输出两个表的所有字段，若只写join，则默认是inner join</span></span><br><span class="line">+<span class="comment">----+--------+------+------------+------+--------+------+</span></span><br><span class="line">| id | name   | age  | powerlevel | id   | name   | iq   |</span><br><span class="line">+<span class="comment">----+--------+------+------------+------+--------+------+</span></span><br><span class="line">|  3 | batman |   35 |          4 |    2 | batman |  100 |</span><br><span class="line">+<span class="comment">----+--------+------+------------+------+--------+------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">select</span> t1.*, t2.iq <span class="keyword">from</span> dc t1 <span class="keyword">inner</span> <span class="keyword">join</span> dc_name t2 <span class="keyword">on</span> (t1.name=t2.name); <span class="comment">-- 只要t1的所有字段，t2的iq字段</span></span><br><span class="line">+<span class="comment">----+--------+------+------------+------+</span></span><br><span class="line">| id | name   | age  | powerlevel | iq   |</span><br><span class="line">+<span class="comment">----+--------+------+------------+------+</span></span><br><span class="line">|  3 | batman |   35 |          4 |  100 |</span><br><span class="line">+<span class="comment">----+--------+------+------------+------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h5 id="outer-join"><a href="#outer-join" class="headerlink" title="outer join"></a>outer join</h5><blockquote><p>表示两个表取并集，即两个表存在的数据都会取出，全称 <code>full outer join</code>，不过有些mysql版本不支持，具体可以使用下面介绍到的<code>union</code>语法替代</p></blockquote><h5 id="left-join"><a href="#left-join" class="headerlink" title="left join"></a>left join</h5><blockquote><p>左表的数据不会丢失，将右表的数据添加到左表中；即左表有而右边没有的数据填null，而左表没有右表有的数据丢弃，左右表都有的数据直接添加</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select t1.*, t2.iq from dc t1 left join dc_name t2 on (t1.name=t2.name); -- 一般left join 或者 right join 会加入where条件过滤，比如where iq is not null，则效果相当于inner join的效果</span><br><span class="line">+<span class="comment">----+-------------+------+------------+------+</span></span><br><span class="line">| id | name        | age  | powerlevel | iq   |</span><br><span class="line">+<span class="comment">----+-------------+------+------------+------+</span></span><br><span class="line">|  1 | superman    |   35 |         10 | NULL |</span><br><span class="line">|  2 | wonderwoman |   32 |          8 | NULL |</span><br><span class="line">|  3 | batman      |   35 |          4 |  100 |</span><br><span class="line">|  4 | flash       |   30 |          7 | NULL |</span><br><span class="line">|  5 | lantern     |   30 |          6 | NULL |</span><br><span class="line">|  6 | supergirl   |   33 |          8 | NULL |</span><br><span class="line">|  7 | cyborg      |   32 |          5 | NULL |</span><br><span class="line">+<span class="comment">----+-------------+------+------------+------+</span></span><br><span class="line">7 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h5 id="right-join"><a href="#right-join" class="headerlink" title="right join"></a>right join</h5><blockquote><p>与left join正好相反，右表的数据不会丢失</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select t1.*, t2.iq from dc t1 right join dc_name t2 on (t1.name=t2.name);</span><br><span class="line">+<span class="comment">------+--------+------+------------+------+</span></span><br><span class="line">| id   | name   | age  | powerlevel | iq   |</span><br><span class="line">+<span class="comment">------+--------+------+------------+------+</span></span><br><span class="line">| NULL | NULL   | NULL |       NULL |  100 |</span><br><span class="line">|    3 | batman |   35 |          4 |  100 |</span><br><span class="line">+<span class="comment">------+--------+------+------------+------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>注意：2个以上表的join语法<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> a</span><br><span class="line"><span class="keyword">join</span> b <span class="keyword">on</span> (a.a1=b.b1)</span><br><span class="line"><span class="keyword">join</span> c <span class="keyword">on</span> (a.a1=c.c1)</span><br></pre></td></tr></table></figure></p><h4 id="3-6-1-4-子查询"><a href="#3-6-1-4-子查询" class="headerlink" title="3.6.1.4 子查询"></a>3.6.1.4 子查询</h4><p>以上语法中<code>from</code>语法后的表名都可以替换为<code>select</code>查询语句得到的中间结果，相当于从中间查询结果中再次查询，具体语法是</p><ul><li><strong>select … from (select … from …) …</strong>：嵌套查询，从中间查询结果中再次查询，一般会将中间查询结果与原表<code>join</code>后再查询<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select dc.* from dc inner join (select age, max(powerlevel) as mp from dc group by age) t1 on (dc.age=t1.age and dc.powerlevel=t1.mp); -- 查询年龄age相同的数据中，powerlevel最大的记录并包含名字name等所有原始信息的数据</span><br><span class="line">+<span class="comment">----+-------------+------+------------+</span></span><br><span class="line">| id | name        | age  | powerlevel |</span><br><span class="line">+<span class="comment">----+-------------+------+------------+</span></span><br><span class="line">|  1 | superman    |   35 |         10 |</span><br><span class="line">|  2 | wonderwoman |   32 |          8 |</span><br><span class="line">|  4 | flash       |   30 |          7 |</span><br><span class="line">|  6 | supergirl   |   33 |          8 |</span><br><span class="line">+<span class="comment">----+-------------+------+------------+</span></span><br><span class="line">4 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-6-1-5-查询结果合并"><a href="#3-6-1-5-查询结果合并" class="headerlink" title="3.6.1.5 查询结果合并"></a>3.6.1.5 查询结果合并</h4><p>union语法，可以合并多个<code>select</code>语句的查询结果，具体语法：</p><ul><li><strong>select … from … [distinct] union select … from …</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from dc t1 left join dc_name t2 on (t1.name=t2.name)</span><br><span class="line">    -&gt; union</span><br><span class="line">    -&gt; select * from dc t1 right join dc_name t2 on (t1.name=t2.name);  -- 使用union语句合并left join与right join的结果，相当于full outer join</span><br><span class="line">+<span class="comment">------+-------------+------+------------+------+------------+------+</span></span><br><span class="line">| id   | name        | age  | powerlevel | id   | name       | iq   |</span><br><span class="line">+<span class="comment">------+-------------+------+------------+------+------------+------+</span></span><br><span class="line">|    1 | superman    |   35 |         10 | NULL | NULL       | NULL |</span><br><span class="line">|    2 | wonderwoman |   32 |          8 | NULL | NULL       | NULL |</span><br><span class="line">|    3 | batman      |   35 |          4 |    2 | batman     |  100 |</span><br><span class="line">|    4 | flash       |   30 |          7 | NULL | NULL       | NULL |</span><br><span class="line">|    5 | lantern     |   30 |          6 | NULL | NULL       | NULL |</span><br><span class="line">|    6 | supergirl   |   33 |          8 | NULL | NULL       | NULL |</span><br><span class="line">|    7 | cyborg      |   32 |          5 | NULL | NULL       | NULL |</span><br><span class="line">| NULL | NULL        | NULL |       NULL |    1 | lex luthor |  100 |</span><br><span class="line">+<span class="comment">------+-------------+------+------------+------+------------+------+</span></span><br><span class="line">8 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h3 id="3-6-2-增"><a href="#3-6-2-增" class="headerlink" title="3.6.2 增"></a>3.6.2 增</h3><ul><li><p><strong>insert into 表名 (字段1, 字段2, …) values (字段1数据, 字段2数据, …)</strong>：向表中添加一行数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> insert into dc values (0, <span class="string">'superman'</span>, 35, 10);</span></span><br><span class="line">Query OK, 1 row affected (0.08 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from dc;</span></span><br><span class="line">+----+----------+------+------------+</span><br><span class="line">| id | name     | age  | powerlevel |</span><br><span class="line">+----+----------+------+------------+</span><br><span class="line">|  1 | superman |   35 |         10 |</span><br><span class="line">+----+----------+------+------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>注意到:</p><ul><li>如果不填字段名称，默认所有字段按顺序匹配</li><li>由于<code>id</code>是自增的，所以<code>id</code>默认从1开始，添加数据的时候也可以指定字段，这样<code>id</code>会自动加1。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> insert into dc (name, age) values (<span class="string">'wonderwoman'</span>, 34);</span></span><br><span class="line">Query OK, 1 row affected (0.12 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from mydatabase.dc;</span></span><br><span class="line">+----+-------------+------+------------+</span><br><span class="line">| id | name        | age  | powerlevel |</span><br><span class="line">+----+-------------+------+------------+</span><br><span class="line">|  1 | superman    |   35 |         10 |</span><br><span class="line">|  2 | wonderwoman |   34 |       NULL |</span><br><span class="line">+----+-------------+------+------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>注意到<code>id</code>自增1，<code>powerlevel</code>会取默认值<code>NULL</code>。</p></li></ul><ul><li><p><strong>insert (into|overwrite) 表名 select查询语句</strong>：从另一表中中导入数据</p><ul><li>into是追加方式</li><li>overwirte是重写方式</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table dc_name (id int, name varchar(255)); -- 创建新表dc_name</span><br><span class="line">Query OK, 0 rows affected (2.56 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show tables;</span><br><span class="line">+<span class="comment">----------------------+</span></span><br><span class="line">| Tables_in_mydatabase |</span><br><span class="line">+<span class="comment">----------------------+</span></span><br><span class="line">| dc                   |</span><br><span class="line">| dc_name              |</span><br><span class="line">+<span class="comment">----------------------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">insert</span> <span class="keyword">into</span> dc_name <span class="keyword">select</span> <span class="keyword">id</span>, <span class="keyword">name</span> <span class="keyword">from</span> dc; <span class="comment">-- 从dc表中导入数据给新表dc_name</span></span><br><span class="line">Query OK, 2 rows affected (0.92 sec)</span><br><span class="line">Records: 2  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from dc_name;</span><br><span class="line">+<span class="comment">------+-------------+</span></span><br><span class="line">| id   | name        |</span><br><span class="line">+<span class="comment">------+-------------+</span></span><br><span class="line">|    1 | superman    |</span><br><span class="line">|    2 | wonderwoman |</span><br><span class="line">+<span class="comment">------+-------------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h3 id="3-6-3-删"><a href="#3-6-3-删" class="headerlink" title="3.6.3 删"></a>3.6.3 删</h3></li><li><strong>delete from 表名 [where 条件]</strong>：根据条件从表中删除数据<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; delete from dc_name where id=1; -- 删除id=1的记录</span><br><span class="line">Query OK, 1 row affected (0.10 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from dc_name;</span><br><span class="line">+<span class="comment">------+-------------+</span></span><br><span class="line">| id   | name        |</span><br><span class="line">+<span class="comment">------+-------------+</span></span><br><span class="line">|    2 | wonderwoman |</span><br><span class="line">+<span class="comment">------+-------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">delete</span> <span class="keyword">from</span> dc_name; <span class="comment">-- 不加条件，默认删除所有记录</span></span><br><span class="line">Query OK, 1 row affected (0.08 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from dc_name;</span><br><span class="line">Empty <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-6-4-改"><a href="#3-6-4-改" class="headerlink" title="3.6.4 改"></a>3.6.4 改</h3><ul><li><strong>update 表名 set 字段1=值1 [, 字段2=值2, …] where 条件</strong>：修改某个数据<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from dc;</span><br><span class="line">+<span class="comment">----+-------------+------+------------+</span></span><br><span class="line">| id | name        | age  | powerlevel |</span><br><span class="line">+<span class="comment">----+-------------+------+------------+</span></span><br><span class="line">|  1 | superman    |   35 |         10 |</span><br><span class="line">|  2 | wonderwoman |   34 |       NULL |</span><br><span class="line">+<span class="comment">----+-------------+------+------------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">update</span> dc <span class="keyword">set</span> age=<span class="number">30</span>, powerlevel=<span class="number">8</span> <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">2</span>; <span class="comment">-- 修改id=2的age字段与powerlevel字段</span></span><br><span class="line">Query OK, 1 row affected (0.08 sec)</span><br><span class="line">Rows matched: 2  Changed: 2  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from dc;</span><br><span class="line">+<span class="comment">----+-------------+------+------------+</span></span><br><span class="line">| id | name        | age  | powerlevel |</span><br><span class="line">+<span class="comment">----+-------------+------+------------+</span></span><br><span class="line">|  1 | superman    |   35 |         10 |</span><br><span class="line">|  2 | wonderwoman |   30 |          8 |</span><br><span class="line">+<span class="comment">----+-------------+------+------------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">update</span> dc <span class="keyword">set</span> age=<span class="number">35</span>; <span class="comment">-- 不加where条件，默认修改所有行的age字段值</span></span><br><span class="line">Query OK, 1 row affected (1.94 sec)</span><br><span class="line">Rows matched: 2  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from dc;</span><br><span class="line">+<span class="comment">----+-------------+------+------------+</span></span><br><span class="line">| id | name        | age  | powerlevel |</span><br><span class="line">+<span class="comment">----+-------------+------+------------+</span></span><br><span class="line">|  1 | superman    |   35 |         10 |</span><br><span class="line">|  2 | wonderwoman |   35 |          8 |</span><br><span class="line">+<span class="comment">----+-------------+------+------------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数导数十：隐函数、隐映射定理</title>
      <link href="/2021/04/13/%E5%87%BD%E6%95%B0%E5%AF%BC%E6%95%B010/"/>
      <url>/2021/04/13/%E5%87%BD%E6%95%B0%E5%AF%BC%E6%95%B010/</url>
      
        <content type="html"><![CDATA[<h4 id="定义1：隐式方程"><a href="#定义1：隐式方程" class="headerlink" title="定义1：隐式方程"></a>定义1：隐式方程</h4><blockquote><p>设$D \subset \mathbb{R}^2$是一开集，$F: D \to \mathbb{R}$是一个含有两个自变量$x,y$的函数，对于$D$中的点$(x,y)$满足方程</p><script type="math/tex; mode=display">    F(x,y) = 0</script><p>的点的全体组成$D$内的一条曲线，而方程就称为该曲线的隐式方程。</p></blockquote><a id="more"></a><h4 id="定理1：隐函数定理"><a href="#定理1：隐函数定理" class="headerlink" title="定理1：隐函数定理"></a>定理1：隐函数定理</h4><blockquote><p>设开集$D \subset \mathbb{R}^2$，函数$F: D \to \mathbb{R}$满足条件：<br/><br>（a）$F \in C^1(D)$； <br/><br>（b）点$(x_0,y_0) \in D$使得$F(x_0,y_0) = 0$；<br/><br>（c）$\frac{\partial F(x_0,y_0)}{\partial y} \ne 0$ <br/><br>那么存在一个包含$(x_0,y_0)$的开矩形$I \times J \subset D$，使得：<br/><br>（1）对每一个$x \in I$，方程$F(x,y)=0$在$J$中有唯一的解$f(x)$；<br /><br>（2）$y_0 = f(x_0)$； <br/><br>（3）$f \in C^1(I)$；<br/><br>（4）当$x \in I$时，有</p><script type="math/tex; mode=display">    f^\prime(x) = -\frac{\frac{\partial F}{\partial x}(x,y)}{\frac{\partial F}{\partial y}(x,y)}</script><p>其中$y = f(x)$。</p></blockquote><p>证：不妨设$\displaystyle \frac{\partial F(x_0,y_0)}{\partial y} &gt; 0$，由条件$(a)$可知，存在一个包含$(x_0,y_0)$的开矩形$I^\prime \times J$，满足$I^\prime \times \bar J \subset D$，且在$I^\prime \times \bar J$上有$\displaystyle \frac{\partial F}{\partial y} &gt; 0$。从而对任意给定的$x \in I^\prime$，$F(x,y)$在闭区间$\bar J$上是严格递增的连续函数。设$J = (c,d)$，由条件$(b)$可知必有</p><script type="math/tex; mode=display">    F(x_0, c) < 0, \quad F(x_0, d) > 0</script><p>由条件$(a)$能推出$F \in C(D)$，因此存在含$x_0$的开区间$I \subset I^\prime$，使得当$x \in I$时，</p><script type="math/tex; mode=display">    F(x, c) < 0, \quad F(x, d) > 0</script><p>由连续函数的零值定理和严格单调性可知，对每一个$x \in I$，存在唯一的一个数，记作$f(x) \in (c, d) = J$，使得$F(x, f(x)) = 0$，这就证明了（1），显然$f$满足（2）。<br/><br>为了证明（3）和（4），先证明$f$在开区间$I$上连续。特别地，$x_0 \in I$，由上面的证明可知无论区间$J$取得多小，一定存在足够小的区间$I$使得对每一个$x \in I$时，有$f(x) \in J$；这时$|f(x) - f(x_0)| &lt; |J|$，其中$|J|$表示区间$J$的长度。即证明了$f$在$x_0$处连续。现任取$x_1 \in I$，设$y_1 = f(x_1)$，则$(x_1,y_1) \in I \times J$。因为有$F(x_1,y_1)=0$，$\displaystyle \frac{\partial F(x_1,y_1)}{\partial y} &gt; 0$，所以$F$在点$(x_1,y_1)$处满足它在$(x_0,y_0)$处的同样条件，所以$f$在$x_1$处也是连续的，从而$f$在整个区间$I$上连续。<br/><br>再证$(3)$和$(4)$。设$x \in I$，取$h$很小，使得$x+h \in I$。令$y = f(x)$，$k = f(x+h) - f(x)$。由$F$的可微性，并利用<a href="https://gamersover.github.io/2021/03/31/函数导数8/#定理1" target="_blank" rel="noopener">函数导数八的定理1</a>可得</p><script type="math/tex; mode=display">    0 = F(x+h, y+k) - F(x, y) = \frac{\partial F}{\partial x}(x, y) h + \frac{\partial F}{\partial y}(x, y) k + \alpha h + \beta k</script><p>其中当$h \to 0$时，$\alpha \to 0$，当$k \to 0$时，$\beta \to 0$。又由于$f \in C(I)$，所以当$h \to 0$时，$k \to 0$，从而$\beta \to 0$。从而</p><script type="math/tex; mode=display">    \lim \limits_{h \to 0} \frac{f(x + h) - f(x)}{h} = \lim \limits_{h \to 0} \frac{k}{h} = \lim\limits_{h \to 0} \frac{-\frac{\partial F}{\partial x} + \alpha}{\frac{\partial F}{\partial y} + \beta}</script><p>即</p><script type="math/tex; mode=display">    f^\prime(x) = - \frac{\frac{\partial F}{\partial x} (x, y)}{\frac{\partial F}{\partial y} (x,y)}</script><p>其中$x \in I$且$y = f(x)$。由于$(a)$知，$f^\prime$在$I$上连续。</p><p>Q.E.D.</p><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>设开集$D \subset \mathbb{R}^{n+1}$，$F: D \to \mathbb{R}$，满足条件：<br/><br>（a）$F \in C^1(D)$；<br/><br>（b）$F(\boldsymbol{x}_0, y_0) = 0$，这里$\boldsymbol{x}_0 \in \mathbb{R}^n,y_0 \in \mathbb{R}$且$(\boldsymbol{x}_0, y_0) \in D$；<br/><br>（c）$\frac{\partial F(\boldsymbol{x}_0, y_0)}{\partial y} \ne 0$。<br/><br>那么存在$(\boldsymbol{x}_0, y_0)$的一个邻域$G \times J$，其中$G$是$\boldsymbol{x_0}$在$\mathbb{R}^n$的一个邻域，$J$是$\mathbb{R}$中的一个开区间，使得：<br/><br>（1）对每一个$\boldsymbol{x} \in G$，方程</p><script type="math/tex; mode=display">    F(\boldsymbol{x}, y) = 0</script><p>在$J$中存在唯一的解，记为$f(\boldsymbol{x})$；<br/><br>（2）$y_0 = f(\boldsymbol{x}_0)$； <br/><br>（3）$f \in C^1(G)$； <br/><br>（4）当$\boldsymbol{x} \in G$时，</p><script type="math/tex; mode=display">    \frac{\partial f}{\partial x_i} = - \frac{\frac{\partial F}{\partial x_i}(\boldsymbol{x}, y)}{\frac{\partial F}{\partial y}(\boldsymbol{x}, y)} \quad (i=1,2,\cdots,n)</script><p>其中$y = f(\boldsymbol{x})$。</p></blockquote><p>证：由<a href="https://gamersover.github.io/2021/04/13/函数导数10/#定理1：隐函数定理" target="_blank" rel="noopener">定理1</a>的证明，可知（1）（2）的证明方式一模一样；而在证明（3）（4）时，只需令$\boldsymbol{h} = (0, \cdots, h_i, \cdots, 0)^T$，固定$x_i$，其他证明过程一样，即可证得（3）和（4）。</p><p>Q.E.D.</p><hr><p>设有$m$个方程组成的方程组</p><script type="math/tex; mode=display">    \left\{ \begin{aligned}        & F_1(x_1,x_2,\cdots,x_n, y_1,\cdots, y_m) = 0 \\        & \cdots, \\        & F_m(x_1,x_2,\cdots,x_n, y_1,\cdots, y_m) = 0     \end{aligned} \right.</script><p>按照隐函数的想法，是否可以解出</p><script type="math/tex; mode=display">    \left\{ \begin{aligned}        & y_1 = f_1(x_1,\cdots,x_n) \\        & \cdots \\        & y_m = f_m(x_1,\cdots,x_n)    \end{aligned} \right.</script><p>为了缩短记号，可令</p><script type="math/tex; mode=display">    \boldsymbol{F} = \left[ \begin{matrix}         F_1 \\         \vdots \\         F_m    \end{matrix} \right], \quad    \boldsymbol{f} = \left[ \begin{matrix}         f_1 \\         \vdots \\         f_m    \end{matrix} \right]</script><p>从而可以把方程改写为</p><script type="math/tex; mode=display">    \boldsymbol{F}(\boldsymbol{x}, \boldsymbol{y}) = \boldsymbol{0}</script><p>而解出式可改写为</p><script type="math/tex; mode=display">    \boldsymbol{y} = \boldsymbol{f}(\boldsymbol{x})</script><p>需要再定义几个记号，设$\boldsymbol{F}$定义在开集$D \subset \mathbb{R}^{m+n}$上，在$m \times (m+n)$矩阵</p><script type="math/tex; mode=display">    J\boldsymbol{F} = \left[        \begin{matrix}            \frac{\partial F_1}{\partial x_1} & \cdots & \frac{\partial F_1}{x_n} & \frac{\partial F_1}{\partial y_1} & \cdots & \frac{\partial F_1}{\partial y_m} \\            \vdots & & \vdots & \vdots & & \vdots \\            \frac{\partial F_m}{\partial x_1} & \cdots & \frac{\partial F_m}{x_n} & \frac{\partial F_m}{\partial y_1} & \cdots & \frac{\partial F_m}{\partial y_m}        \end{matrix}        \right]</script><p>中做分块：$J\boldsymbol{F} = (J_{\boldsymbol{x}}\boldsymbol{F}, J_{\boldsymbol{y}}\boldsymbol{F})$，其中</p><script type="math/tex; mode=display">    J_{\boldsymbol{x}}\boldsymbol{F} = \left[        \begin{matrix}            \frac{\partial F_1}{\partial x_1} & \cdots & \frac{\partial F_1}{x_n}  \\            \vdots & & \vdots\\            \frac{\partial F_m}{\partial x_1} & \cdots & \frac{\partial F_m}{x_n}        \end{matrix}        \right], \quad    J_{\boldsymbol{y}}\boldsymbol{F} = \left[        \begin{matrix}            \frac{\partial F_1}{\partial y_1} & \cdots & \frac{\partial F_1}{\partial y_m} \\            \vdots & & \vdots \\            \frac{\partial F_m}{\partial y_1} & \cdots & \frac{\partial F_m}{\partial y_m}        \end{matrix}        \right]</script><p>$J_{\boldsymbol{x}}\boldsymbol{F}$是一个$m \times n$矩阵，$J_{\boldsymbol{y}}\boldsymbol{F}$是一个$m$阶方阵。</p><h4 id="定理3：隐映射定理"><a href="#定理3：隐映射定理" class="headerlink" title="定理3：隐映射定理"></a>定理3：隐映射定理</h4><blockquote><p>设开集$D \subset \mathbb{R}^{n+m}$，$\boldsymbol{F}: D \to \mathbb{R}^m$，满足下列条件：<br/><br>（a）$\boldsymbol{F} \in C^1(D)$；<br/><br>（b）有一点$(\boldsymbol{x}_0, \boldsymbol{y}_0) \in D$，使得$\boldsymbol{F}(\boldsymbol{x}_0, \boldsymbol{y}_0) = \boldsymbol{0}$；<br/><br>（c）行列式$\det J_{\boldsymbol{y}} \boldsymbol{F}(\boldsymbol{x}_0, \boldsymbol{y}_0) \ne 0$ <br/><br>那么存在$(\boldsymbol{x}_0, \boldsymbol{y}_0)$的一个邻域$G \times H$，使得：<br/><br>（1）对每一个$\boldsymbol{x} \in G$，方程$\boldsymbol{F}(\boldsymbol{x}, \boldsymbol{y})=\boldsymbol{0}$在$H$中有唯一的解，记为$\boldsymbol{f}(\boldsymbol{x})$；<br/><br>（2）$\boldsymbol{y}_0 = \boldsymbol{f}(\boldsymbol{x}_0)$ <br/><br>（3）$\boldsymbol{f} \in C^1(D)$<br>（4）当$\boldsymbol{x} \in G$时，</p><script type="math/tex; mode=display">    J\boldsymbol{f}(\boldsymbol{x}) = -(J_{\boldsymbol{y}}\boldsymbol{F}(\boldsymbol{x}, \boldsymbol{y})^{-1})J_{\boldsymbol{x}}\boldsymbol{F}(\boldsymbol{x}, \boldsymbol{y})</script><p>其中$\boldsymbol{y} = \boldsymbol{f}(\boldsymbol{x})$</p></blockquote><p>证：对方程组的个数$m$进行归纳。当$m=1$时，即为该定理<a href="https://gamersover.github.io/2021/04/13/函数导数10/#定理2" target="_blank" rel="noopener">定理2</a>。先设方程组个数为$m-1$时该定理成立，再证明在$m$时依然成立即可。<br/><br>由于$\det J_{\boldsymbol{y}}\boldsymbol{F}(\boldsymbol{x}_0, \boldsymbol{y}_0) \ne 0$，且$\boldsymbol{F} \in C^1(D)$，所以总可以找到一个包含$(\boldsymbol{x}_0, \boldsymbol{y}_0)$的开集$D^\prime$满足$(\boldsymbol{x}_0, \boldsymbol{y}_0) \in D^\prime \subset D$，且在$D^\prime$上的每一个点处都有$\det J_{\boldsymbol{y}}\boldsymbol{F} \ne 0$。由条件$（c）$可知$m$阶方阵$J_{\boldsymbol{y}}\boldsymbol{F}(\boldsymbol{x}_0, \boldsymbol{y}_0)$的元素不全为$0$，不妨设</p><script type="math/tex; mode=display">    \frac{\partial F_m}{\partial y_j}(\boldsymbol{x}_0, \boldsymbol{y}_0) \ne 0 \tag{1}</script><p>同时令</p><script type="math/tex; mode=display">    \boldsymbol{u} = (y_1, \cdots, y_{m-1}), \quad t = y_m, \quad \boldsymbol{y} = (\boldsymbol{u}, t)</script><p>同样可以定义$\boldsymbol{y}_0 = (\boldsymbol{u}_0, t_0)$来规定$\boldsymbol{u}_0$和$t_0$的意义，从而式(1)可写成</p><script type="math/tex; mode=display">    \frac{\partial F_m}{\partial t}(\boldsymbol{x}_0, \boldsymbol{u}_0, t_0) \ne 0</script><p>又有</p><script type="math/tex; mode=display">    F_m (\boldsymbol{x}_0, \boldsymbol{u}_0, t_0) = F_m(\boldsymbol{x}_0, \boldsymbol{y}_0) = 0</script><p>由<a href="https://gamersover.github.io/2021/04/13/函数导数10/#定理2" target="_blank" rel="noopener">定理2</a>可知，存在$(\boldsymbol{x}_0, \boldsymbol{u}_0, t_0)$的一个邻域$(G_n \times G_{m-1}) \times J \subset D^\prime$，使得：<br/><br>（i）对每一点$(\boldsymbol{x}, \boldsymbol{u}) \in G_{n} \times G_{m=1}$，方程</p><script type="math/tex; mode=display">    F_m(\boldsymbol{x}, \boldsymbol{u}, t) = 0</script><p>在$J$中有唯一的解$t = \varphi(\boldsymbol{x}, \boldsymbol{u})$，这里函数$\varphi: G_n \times G_{m-1} \to J$；<br/><br>（ii）$\varphi(\boldsymbol{x}_0, \boldsymbol{u}_0) = t_0$；<br/><br>（iii）$\varphi \in C^1(G_{n} \times G_{m-1})$；<br/><br>这时将$t = \varphi(\boldsymbol{x}, \boldsymbol{u})$代入到原始方程中，即将$y_m$用$x_1,\cdots,x_n,y_1,\cdots,y_{m-1}$代入，</p><script type="math/tex; mode=display"> \Phi_i(\boldsymbol{x}, \boldsymbol{u}) = F_i(\boldsymbol{x}, \boldsymbol{u}, \varphi(\boldsymbol{x}, \boldsymbol{u})) = 0 \quad (i=1,2,\cdots,m-1) \tag{2}</script><p>考虑映射</p><script type="math/tex; mode=display">    \boldsymbol{\Phi} = \left[\begin{matrix}            \Phi_1 \\            \vdots \\            \Phi_{m-1}        \end{matrix}\right]: G_n \times G_{m-1} \to \mathbb{R}^{m-1}</script><p>若能证明$\boldsymbol{\Phi}$满足定理的三个条件，便可使用归纳假设了。显然$\boldsymbol{\Phi} \in C^1$，并且</p><script type="math/tex; mode=display">    \phi_i(\boldsymbol{x}_0, \boldsymbol{u}_0) = F_i(\boldsymbol{x}_0, \boldsymbol{u}_0, \varphi(\boldsymbol{x}_0, \boldsymbol{u}_0)) = 0 \quad (i=1,2\cdots,m-1)</script><p>所以$\boldsymbol{\Phi}(\boldsymbol{x}_0, \boldsymbol{y}_0)=\boldsymbol{0}$。对式(2)两边同时关于$u_j$（即$y_j$）$(j=1,2,\cdots,m-1)$求导，得</p><script type="math/tex; mode=display">    \frac{\partial \Phi_i}{\partial u_j} = \frac{\partial F_i}{\partial y_j} + \frac{\partial F_i}{\partial y_m} \frac{\partial \varphi}{\partial u_j} \quad (i,j=1,2,\cdots,m-1)</script><p>又由（i）可知</p><script type="math/tex; mode=display">    F_m(\boldsymbol{x}, \boldsymbol{u}, \varphi(\boldsymbol{x}, \boldsymbol{u})) = 0</script><p>对上式也关于$u_j$（即$y_j$）$(j=1,2,\cdots,m-1)$求导得</p><script type="math/tex; mode=display">    \frac{\partial F_m}{\partial y_j} + \frac{\partial F_m}{\partial y_m} \frac{\partial \varphi}{\partial u_j} = 0 \quad (j=1,2,\cdots,m-1)</script><p>从而由</p><script type="math/tex; mode=display">    \begin{aligned}        \left|             \begin{matrix}                \frac{\partial F_1}{\partial y_1} & \cdots & \frac{\partial F_1}{\partial y_m} \\                \vdots & & \vdots \\                \frac{\partial F_m}{\partial y_1} & \cdots & \frac{\partial F_m}{\partial y_m}             \end{matrix}         \right|         & =         \left|             \begin{matrix}                \frac{\partial F_1}{\partial y_1} + \frac{\partial F_1}{\partial y_m}\frac{\partial \varphi}{\partial u_1} & \frac{\partial F_1}{\partial y_2} + \frac{\partial F_1}{\partial y_m}\frac{\partial \varphi}{\partial u_2} & \cdots & \frac{\partial F_1}{\partial y_m} \\                \vdots & \vdots & & \vdots \\                \frac{\partial F_m}{\partial y_1} + \frac{\partial F_m}{\partial y_m}\frac{\partial \varphi}{\partial u_1} & \frac{\partial F_m}{\partial y_2} + \frac{\partial F_m}{\partial y_m}\frac{\partial \varphi}{\partial u_2} & \cdots & \frac{\partial F_m}{\partial y_m}            \end{matrix}         \right| \\        & =         \left|             \begin{matrix}                \frac{\partial \Phi_1}{\partial u_1} & \cdots & \frac{\partial \Phi_1}{\partial u_{m-1}} & \frac{\partial F_1}{\partial y_m} \\                \vdots & & \vdots & \vdots \\                \frac{\partial \Phi_{m-1}}{\partial u_1} & \cdots & \frac{\partial \Phi_{m-1}}{\partial u_{m-1}} & \frac{\partial F_{m-1}}{\partial y_m} \\                0 & \cdots & 0 & \frac{\partial F_m}{\partial y_m}            \end{matrix}         \right| \\        & = \frac{\partial F_m}{\partial y_m}(\boldsymbol{x}_0, \boldsymbol{u}_0, t_0) \det(J_{\boldsymbol{u}} \boldsymbol{\Phi}(\boldsymbol{x}_0, \boldsymbol{u}_0))    \end{aligned} \tag{3}</script><p>根据条件（c），式子(3)的左边不等于0，因为有</p><script type="math/tex; mode=display">     \det(J_{\boldsymbol{u}} \boldsymbol{\Phi}(\boldsymbol{x}_0, \boldsymbol{u}_0)) \ne 0</script><p>从而证明了$\boldsymbol{\Phi}$满足本定理中的三个条件，从而对$\boldsymbol{\Phi}$使用归纳假设，可知定理中的结论（1），（2）和（3）对$\boldsymbol{\Phi}$都成立。即存在点$(\boldsymbol{x}_0, \boldsymbol{y}_0)$的邻域$G \times H_{m-1} \subset G_n \times G_{m-1}$使得：<br/><br>（aa）当$\boldsymbol{x} \in G$时，方程$\boldsymbol{\phi}(\boldsymbol{x}, \boldsymbol{u}) = \boldsymbol{0}$在$H_{m-1}$中有唯一解$\boldsymbol{u} = \boldsymbol{g}(\boldsymbol{x})$，其中映射$\boldsymbol{g}: G \to H_{m-1}$；<br/><br>（ab）$\boldsymbol{\boldsymbol{x}_0} = \boldsymbol{u}_0$；<br/><br>（ac）$\boldsymbol{g} \in C^1(G)$ <br/><br>令</p><script type="math/tex; mode=display">    \boldsymbol{f}(\boldsymbol{x}) = (\boldsymbol{g}(\boldsymbol{x}), \varphi(\boldsymbol{x}, \boldsymbol{g}(\boldsymbol{x}))) \quad (\boldsymbol{x} \in G)</script><script type="math/tex; mode=display">    H = H_{m-1} \times J</script><p>于是$\boldsymbol{f}: G \to H$。我们要证明$\boldsymbol{f}$满足条件（1），（2）和（3）。当$\boldsymbol{x} \in G$，$(\boldsymbol{x}, \boldsymbol{g}(\boldsymbol{x})) \in G \times H_{m-1} \subset G_n \times G_{m-1}$，从而由（aa）可得</p><script type="math/tex; mode=display">    F_i(\boldsymbol{x}, \boldsymbol{f}(\boldsymbol{x})) = F_i(\boldsymbol{x}, \boldsymbol{g}(\boldsymbol{x}), \varphi(\boldsymbol{x}, \boldsymbol{g}(\boldsymbol{x}))) = \Phi_i(\boldsymbol{x}, \boldsymbol{g}(\boldsymbol{x})) = 0 \quad (i=1,2,\cdots,m-1)</script><p>另外由（i）可知</p><script type="math/tex; mode=display">    F_m(\boldsymbol{x}, \boldsymbol{g}(\boldsymbol{x})) = F_m(\boldsymbol{x}, \boldsymbol{g}(\boldsymbol{x}), \varphi(\boldsymbol{x}, \boldsymbol{g}(\boldsymbol{x}))) =  0</script><p>从而$\boldsymbol{f}$满足（1）。由（ab）和（ii）可知</p><script type="math/tex; mode=display">    \boldsymbol{f}(\boldsymbol{x}_0) = (\boldsymbol{g}(\boldsymbol{x}_0), \varphi(\boldsymbol{x}_0, \boldsymbol{g}(\boldsymbol{x}_0))) = (\boldsymbol{u}_0, \varphi(\boldsymbol{x}_0, \boldsymbol{u}_0)) = (\boldsymbol{u}_0, t_0) = \boldsymbol{y}_0</script><p>所以$\boldsymbol{f}$满足（2）。再由（ac）和（iii）即知$\boldsymbol{f}$满足（3）。再由恒等式</p><script type="math/tex; mode=display">    \boldsymbol{F}(\boldsymbol{x}, \boldsymbol{f}(\boldsymbol{x})) = \boldsymbol{0}</script><p>对上式复合求导，得</p><script type="math/tex; mode=display">    J_{\boldsymbol{x}} \boldsymbol{F}(\boldsymbol{x}, \boldsymbol{f}(\boldsymbol{x})) + J_y \boldsymbol{F}(\boldsymbol{x}, \boldsymbol{f}(\boldsymbol{x})) J\boldsymbol{f}(\boldsymbol{x}) = \boldsymbol{0}</script><p>由于在$D^\prime$上$\det J_{\boldsymbol{y}}\boldsymbol{F}$处处不为0，所以$J_{\boldsymbol{y}}\boldsymbol{F}$是可逆方阵，在上式中取逆方阵，得出</p><script type="math/tex; mode=display">    J\boldsymbol{f}(\boldsymbol{x}) = -(J_{\boldsymbol{y}}\boldsymbol{F}(\boldsymbol{x}, \boldsymbol{f}(\boldsymbol{x})))^{-1}J_{\boldsymbol{x}}\boldsymbol{F}(\boldsymbol{x}, \boldsymbol{f}(\boldsymbol{x}))</script><p>即表明$\boldsymbol{f}$满足（4）。</p><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数导数 </tag>
            
            <tag> 隐函数 </tag>
            
            <tag> 隐映射 </tag>
            
            <tag> 微分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数导数九：映射微分和复合求导</title>
      <link href="/2021/04/11/%E5%87%BD%E6%95%B0%E5%AF%BC%E6%95%B09/"/>
      <url>/2021/04/11/%E5%87%BD%E6%95%B0%E5%AF%BC%E6%95%B09/</url>
      
        <content type="html"><![CDATA[<p>设开集$D \subset \mathbb{R}^n$，$\boldsymbol{f}: D \to \mathbb{R}^m$。记$\boldsymbol{f}$的分量依次为$f_1,f_2,\cdots,f_m$，可以把$\boldsymbol{f}(\boldsymbol{x})$写成</p><script type="math/tex; mode=display">    \boldsymbol{f(x)} = \left(        \begin{matrix}             f_1(\boldsymbol{x}) \\            f_2(\boldsymbol{x}) \\            \vdots \\            f_m(\boldsymbol{x})        \end{matrix}     \right) \quad (\boldsymbol{x} \in D)</script><p>设点$\boldsymbol{x}_0 \in D, \boldsymbol{h} \in \mathbb{R}^n$。由于$\boldsymbol{x}_0$是$D$的内点，所以总可以找到充分小的$\Vert \boldsymbol{h} \Vert$使得$\boldsymbol{x}_0 + \boldsymbol{h} \in D$。</p><a id="more"></a><h4 id="定义1"><a href="#定义1" class="headerlink" title="定义1"></a>定义1</h4><blockquote><p>如果映射$\boldsymbol{f}$满足</p><script type="math/tex; mode=display">    \boldsymbol{f}(\boldsymbol{x}_0 + \boldsymbol{h}) - \boldsymbol{f}(\boldsymbol{x}_0) = \boldsymbol{Ah} + \boldsymbol{r}(\boldsymbol{h})</script><p>式中$\boldsymbol{A}$是一个$m \times n$矩阵，它的元素不依赖于$\boldsymbol{h}$，且</p><script type="math/tex; mode=display">    \lim \limits_{\boldsymbol{h} \to \boldsymbol{0}} \frac{\Vert \boldsymbol{r}(\boldsymbol{h}) \Vert}{\Vert \boldsymbol{h} \Vert} = 0</script><p>则称映射$\boldsymbol{f}$在点$\boldsymbol{x}_0$处可微，并称$\boldsymbol{Ah}$是$\boldsymbol{f}$在点$\boldsymbol{x}_0$处的微分，记作</p><script type="math/tex; mode=display">    \mathrm{d}\boldsymbol{f}(\boldsymbol{x}_0) = \boldsymbol{Ah}</script></blockquote><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>若映射$\boldsymbol{f}$在点$\boldsymbol{x}_0$处可微，则有</p><script type="math/tex; mode=display">    \mathrm{d}\boldsymbol{f}(\boldsymbol{x}_0) = \boldsymbol{Jf}(\boldsymbol{x}_0)\boldsymbol{h}</script><p>其中</p><script type="math/tex; mode=display">    \boldsymbol{Jf}(\boldsymbol{x}_0) = \left[        \begin{matrix}            \frac{\partial f_1(\boldsymbol{x}_0)}{\partial x_1}  & \cdots & \frac{\partial f_1(\boldsymbol{x}_0)}{\partial x_n} \\            \vdots & & \vdots \\            \frac{\partial f_m(\boldsymbol{x}_0)}{\partial x_1}  & \cdots & \frac{\partial f_m(\boldsymbol{x}_0)}{\partial x_n}        \end{matrix}    \right]</script><p>称之为映射$\boldsymbol{f}$在点$\boldsymbol{x}_0$处的Jacobi矩阵，也称为导数。</p></blockquote><p>证：有定义可知，</p><script type="math/tex; mode=display">    \boldsymbol{f}(\boldsymbol{x}_0 + \boldsymbol{h}) - \boldsymbol{f}(\boldsymbol{x}_0) = \boldsymbol{Ah} + \boldsymbol{r}(\boldsymbol{h})</script><p>设</p><script type="math/tex; mode=display">    \boldsymbol{A} = \left[\begin{matrix}        a_{11} & \cdots & a_{1n} \\        \vdots & & \vdots \\        a_{m1} & \cdots & a_{mn}    \end{matrix}\right]</script><p>将其代入上式中得</p><script type="math/tex; mode=display">    f_i(\boldsymbol{x}_0 + \boldsymbol{h}) - f_i(\boldsymbol{x}_0) = \sum_{j=1}^n a_{ij} h_j + r_i(\boldsymbol{h})</script><p>其中$r_i(\boldsymbol{h})$表示$\boldsymbol{r}(\boldsymbol{h})$的第$i$个分量，由$\boldsymbol{r}(\boldsymbol{h})$的性质可知</p><script type="math/tex; mode=display">    r_i(\boldsymbol{h}) = o(\Vert \boldsymbol{h} \Vert) \quad (\boldsymbol{h} \to 0, i=1,2,\cdots,m)</script><p>从而继续由<a href="https://gamersover.github.io/2021/03/31/函数导数8/#定理1" target="_blank" rel="noopener">函数导数八定理1</a>可知</p><script type="math/tex; mode=display">    a_{ij} = \frac{\partial f_i(\boldsymbol{x}_0)}{\partial x_j} (i=1,2,\cdots,m;j=1,2,\cdots,n)</script><p>从而得证。</p><p>Q.E.D.</p><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>若映射$\boldsymbol{f}$在点$\boldsymbol{x}_0$的某一邻域内存在Jacobi矩阵$\boldsymbol{Jf}$，且$\boldsymbol{Jf}$的各元素在$\boldsymbol{x}_0$处都连续，则映射$\boldsymbol{f}$在点$\boldsymbol{x}_0$处可微。</p></blockquote><p>证：由<a href="https://gamersover.github.io/2021/04/11/函数导数9/#定理1" target="_blank" rel="noopener">定理1</a>与<a href="https://gamersover.github.io/2021/03/31/函数导数8/#定理2" target="_blank" rel="noopener">函数导数八的定理2</a>易证。</p><p>Q.E.D.</p><h4 id="定义2"><a href="#定义2" class="headerlink" title="定义2"></a>定义2</h4><blockquote><p>设开集$D \subset \mathbb{R}^n$，$\boldsymbol{f}: D \to \mathbb{R}^m$。如果$\boldsymbol{f}$在$D$上的每一点处都连续，则记$\boldsymbol{f} \in C(D)$；如果$\boldsymbol{Jf}$在$\boldsymbol{D}$上的每一点处都连续，则记$\boldsymbol{f} \in C^1(D)$。</p></blockquote><h4 id="定理3"><a href="#定理3" class="headerlink" title="定理3"></a>定理3</h4><blockquote><p>设开集$D \subset \mathbb{R}^n$，$\boldsymbol{g}: D \to \mathbb{R}^m$，$\boldsymbol{g}$在点$\boldsymbol{x}_0 \in D$处可微，又设$\boldsymbol{f}$把包含$\boldsymbol{g}(D)$的一个开集映射至$\mathbb{R}^l$，并且$\boldsymbol{f}$在$\boldsymbol{g}(\boldsymbol{x}_0)$处可微，那么复合映射$\boldsymbol{f} \circ \boldsymbol{g}$在点$\boldsymbol{x}_0$处可微，并且</p><script type="math/tex; mode=display">    \boldsymbol{J}(\boldsymbol{f}\circ \boldsymbol{g})(\boldsymbol{x}_0) = \boldsymbol{Jf}(\boldsymbol{g}(\boldsymbol{x}_0)) \boldsymbol{Jg}(\boldsymbol{x}_0)</script></blockquote><p>证：令$\boldsymbol{y}_0 = \boldsymbol{g}(\boldsymbol{x}_0)$，$\boldsymbol{A} = \boldsymbol{Jf}(\boldsymbol{y}_0)，\boldsymbol{B} = \boldsymbol{Jg}(\boldsymbol{x}_0)$，易知$\boldsymbol{A}$是$l\times m$矩阵，$\boldsymbol{B}$是$m \times n$矩阵，从而若能证明</p><script type="math/tex; mode=display">    \lim \limits_{\Vert \boldsymbol{h} \Vert \to 0} \frac{\Vert (\boldsymbol{f} \circ \boldsymbol{g})(\boldsymbol{x}_0 + \boldsymbol{h}) - (\boldsymbol{f} \circ \boldsymbol{g})(\boldsymbol{x}_0) - \boldsymbol{ABh} \Vert}{\Vert \boldsymbol{h} \Vert} = 0 \tag{1}</script><p>则由<a href="https://gamersover.github.io/2021/04/11/函数导数9/#定义1" target="_blank" rel="noopener">定义1</a>可知，$\boldsymbol{J}(\boldsymbol{f}\circ \boldsymbol{g})(\boldsymbol{x}_0) = \boldsymbol{AB}$。<br/><br>由于$\boldsymbol{g},\boldsymbol{f}$分别在$\boldsymbol{x}_0,\boldsymbol{y}_0$处可微，从而有</p><script type="math/tex; mode=display">    \begin{aligned}    \boldsymbol{g}(\boldsymbol{x}_0 + \boldsymbol{h}) - \boldsymbol{g}(\boldsymbol{x}_0) = \boldsymbol{Bh} + \boldsymbol{u}(\boldsymbol{h}) \\    \boldsymbol{f}(\boldsymbol{y}_0 + \boldsymbol{k}) - \boldsymbol{f}(\boldsymbol{y}_0) = \boldsymbol{Ak} + \boldsymbol{v}(\boldsymbol{k})     \end{aligned} \tag{2}</script><p>其中$\boldsymbol{h}，\boldsymbol{k}$分别为$n \times 1$矩阵和$m \times 1$矩阵，且</p><script type="math/tex; mode=display">    \begin{aligned}        \frac{\Vert \boldsymbol{u}(\boldsymbol{h}) \Vert}{\Vert \boldsymbol{h} \Vert} \to 0 \quad (\Vert \boldsymbol{h} \Vert \to 0) \\        \frac{\Vert \boldsymbol{v}(\boldsymbol{k}) \Vert}{\Vert \boldsymbol{k} \Vert} \to 0 \quad (\Vert \boldsymbol{k} \Vert \to 0)    \end{aligned}</script><p>记</p><script type="math/tex; mode=display">    \frac{\Vert \boldsymbol{u}(\boldsymbol{h}) \Vert}{\Vert \boldsymbol{h} \Vert} = \varepsilon(\boldsymbol{h})， \quad \frac{\Vert \boldsymbol{v}(\boldsymbol{h}) \Vert}{\Vert \boldsymbol{h} \Vert} = \eta(\boldsymbol{h})</script><p>则</p><script type="math/tex; mode=display">    \Vert \boldsymbol{u}(\boldsymbol{h}) \Vert = \varepsilon(\boldsymbol{h}) \Vert \boldsymbol{h} \Vert， \quad \Vert \boldsymbol{v}(\boldsymbol{k}) \Vert = \eta(\boldsymbol{k}) \Vert \boldsymbol{k} \Vert</script><p>且</p><script type="math/tex; mode=display">    \lim \limits_{\Vert \boldsymbol{h} \Vert \to 0} \varepsilon(\boldsymbol{h}) = 0， \quad \lim \limits_{\Vert \boldsymbol{k} \Vert \to 0} \eta(\boldsymbol{k}) = 0 \tag{3}</script><p>对给定的$\boldsymbol{h}$，令$\boldsymbol{k} = \boldsymbol{g}(\boldsymbol{x}_0 + \boldsymbol{h}) - \boldsymbol{g}(\boldsymbol{x}_0)$，由式(2)可得</p><script type="math/tex; mode=display">    \Vert \boldsymbol{k} \Vert \le \Vert \boldsymbol{Bh} \Vert + \Vert \boldsymbol{u}(\boldsymbol{h})\Vert \le (\Vert \boldsymbol{B} \Vert + \varepsilon(\boldsymbol{h})) \Vert \boldsymbol{h} \Vert</script><p>从而有</p><script type="math/tex; mode=display">    \begin{aligned}        & \Vert \boldsymbol{f} \circ \boldsymbol{g} (\boldsymbol{x}_0 + \boldsymbol{h}) - \boldsymbol{f} \circ \boldsymbol{g} (\boldsymbol{x}_0) - \boldsymbol{ABh} \Vert \\        & = \Vert \boldsymbol{f}(\boldsymbol{g} (\boldsymbol{x}_0 + \boldsymbol{h})) - \boldsymbol{f}(\boldsymbol{g} (\boldsymbol{x}_0)) - \boldsymbol{ABh} \Vert \\        & = \Vert \boldsymbol{f}(\boldsymbol{y}_0 + \boldsymbol{k}) - \boldsymbol{f}(\boldsymbol{y}_0) - \boldsymbol{ABh} \Vert \\        & = \Vert \boldsymbol{Ak} + \boldsymbol{v}(\boldsymbol{k}) - \boldsymbol{ABh} \Vert \\        & = \Vert \boldsymbol{A}(\boldsymbol{k} - \boldsymbol{Bh}) + \boldsymbol{v}{\boldsymbol{k}} \Vert \\        & \le \Vert \boldsymbol{A} \Vert u(\boldsymbol{h}) + \eta(\boldsymbol{k})\Vert \boldsymbol{k} \Vert \\        & \le \Vert \boldsymbol{A} \Vert \varepsilon(\boldsymbol{h}) \Vert \boldsymbol{h} \Vert + \eta(\boldsymbol{k})(\Vert \boldsymbol{B} \Vert + \varepsilon(\boldsymbol{h})) \Vert \boldsymbol{h} \Vert    \end{aligned}</script><p>所以</p><script type="math/tex; mode=display">    \frac{\Vert (\boldsymbol{f} \circ \boldsymbol{g})(\boldsymbol{x}_0 + \boldsymbol{h}) - (\boldsymbol{f} \circ \boldsymbol{g})(\boldsymbol{x}_0) - \boldsymbol{ABh} \Vert}{\Vert \boldsymbol{h} \Vert} \le \Vert \boldsymbol{A} \Vert \varepsilon(\boldsymbol{h}) + \eta(\boldsymbol{k})(\Vert \boldsymbol{B} \Vert + \varepsilon(\boldsymbol{h}))</script><p>再由式(3)可知式(1)成立。</p><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数导数 </tag>
            
            <tag> 微分 </tag>
            
            <tag> 映射 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode题解22：括号生成</title>
      <link href="/2021/04/05/leetcode%E9%A2%98%E8%A7%A322/"/>
      <url>/2021/04/05/leetcode%E9%A2%98%E8%A7%A322/</url>
      
        <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>该题来自于<a href="https://leetcode-cn.com/problems/generate-parentheses/" target="_blank" rel="noopener">力扣第22题</a></p><p>数字<code>n</code>代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且有效的括号组合。<br><a id="more"></a> </p><p>示例 1：</p><blockquote><p>输入：n = 3<br>输出：[“((()))”,”(()())”,”(())()”,”()(())”,”()()()”]</p></blockquote><p>示例 2：</p><blockquote><p>输入：n = 1<br>输出：[“()”]</p></blockquote><p>提示：</p><ul><li><code>1 &lt;= n &lt;= 8</code></li></ul><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>要生成有效的括号，第一个字符必然是左括号<code>(</code>，那么第二个有可能是<code>(</code>或者<code>)</code>，以<code>n=3</code>为例，生成有效括号的过程应该如下：<br><img src="https://raw.githubusercontent.com/gamersover/hexo_blog_assets/main/leetcode/No1.jpg" width="25%"></p><p>可以看出是一颗二叉树，二叉树的每条路径对应着一个有效括号组合，所以关键在于如何生成这颗树。思路也很简单，第一层已经确定只能是<code>(</code>，由于<code>n=3</code>表示最多可以有<code>3</code>个<code>(</code>，所以第二层可能是<code>(</code>，也可能是<code>)</code>，那第三层如何确定呢？</p><p>假如第二层选择的是<code>(</code>，由于左括号的个数为2，小于<code>n</code>，所以第三层也可能是<code>(</code>或者<code>)</code>；如果第二层选择的是<code>)</code>，一样的分析。</p><p>第三层如果选择的是<code>(</code>，这是左括号的个数已经等于<code>n</code>，所以第四层只能添加<code>)</code>了。</p><p>综上分析可知，假设当前层已有的左括号个数为<code>left</code>，已有右括号个数为<code>right</code>，若<code>left&lt;n</code>，则当前层可以为<code>(</code>，同时若<code>right&lt;left</code>，那么当前层也可以是<code>)</code>；否则结束，所有括号添加完毕。</p><p>树生成后，可以使用深度优先遍历所有的路径得到结果，这里可以采用递归的写法，注意一点就是遍历到叶子结点后，需要回溯到初始状态，具体可以看算法说明。</p><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><ol><li>初始化<code>n</code>,<code>left=right=0</code>，以及路径<code>s=&quot;&quot;</code></li><li>递归函数<code>f(n, left, rihgt, s)</code></li><li>进入递归主体，如果<code>len(s)==2*n</code>，表明<code>s</code>已经包含了所有括号，添加到结果列表中，并退出函数</li><li>如果<code>left &lt; n</code>，这时添加<code>(</code>，进入函数<code>f(n, left+1, right, s+&quot;(&quot;)</code>，这里<code>s+&quot;(&quot;</code>写在函数形参内，刚好避免回溯时<code>s</code>不受影响，<code>s</code>的变化至于该路径的前面所有层有关。</li><li>如果<code>right &lt; n</code>，这时添加<code>)</code>，进入函数<code>f(n, left, right, s+&quot;)&quot;)</code></li></ol><p>具体算法执行步骤可以这么理解：<br>首先一直添加<code>(</code>直到无法添加为止，然后添加<code>)</code>直到无法添加为止，即一直遍历树的左节点，然后开始回溯，这时<code>s</code>为<code>((()))</code>，根据算法会回溯到<code>s=&quot;((&quot;</code>即第二层的左节点也是步骤4的结尾，之后进入步骤5。依次下去。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><details open><summary>python3</summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">generateParenthesis</span><span class="params">(self, n)</span>:</span></span><br><span class="line">        self.n = n</span><br><span class="line">        self.result = []</span><br><span class="line">        self.generate(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> self.result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">generate</span><span class="params">(self, left, right, s=<span class="string">""</span>)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> len(s) == self.n * <span class="number">2</span>:</span><br><span class="line">            self.result.append(s)</span><br><span class="line">            <span class="keyword">return</span> </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> left &lt; self.n:</span><br><span class="line">            self.generate(left+<span class="number">1</span>, right, s+<span class="string">"("</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> right &lt; left:</span><br><span class="line">            self.generate(left, right+<span class="number">1</span>, s+<span class="string">")"</span>)</span><br></pre></td></tr></table></figure></details><details><summary>c++</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; arr;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; generateParenthesis(<span class="keyword">int</span> n) &#123;</span><br><span class="line">        generate(<span class="number">0</span>, <span class="number">0</span>, <span class="string">""</span>, n);</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">generate</span><span class="params">(<span class="keyword">int</span> left, <span class="keyword">int</span> right, <span class="built_in">string</span> s, <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(s.size() == <span class="number">2</span> * n) &#123;</span><br><span class="line">            arr.push_back(s);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(left &lt; n)&#123;</span><br><span class="line">            generate(left+<span class="number">1</span>, right, s+<span class="string">"("</span>, n);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (right &lt; left)&#123;</span><br><span class="line">            generate(left, right+<span class="number">1</span>, s+<span class="string">")"</span>, n);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></details><details><summary>java</summary><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    List&lt;String&gt; res = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">generateParenthesis</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        generate(n, <span class="number">0</span>, <span class="number">0</span>, <span class="string">""</span>);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">generate</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> left, <span class="keyword">int</span> right, String s)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (s.length() == <span class="number">2</span>*n) &#123;</span><br><span class="line">            res.add(s);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (left &lt; n)&#123;</span><br><span class="line">            generate(n, left+<span class="number">1</span>, right, s+<span class="string">"("</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (right &lt; left)&#123;</span><br><span class="line">            generate(n, left, right+<span class="number">1</span>, s+<span class="string">")"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 递归 </tag>
            
            <tag> 回溯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数导数八：多变量函数的微分</title>
      <link href="/2021/03/31/%E5%87%BD%E6%95%B0%E5%AF%BC%E6%95%B08/"/>
      <url>/2021/03/31/%E5%87%BD%E6%95%B0%E5%AF%BC%E6%95%B08/</url>
      
        <content type="html"><![CDATA[<h4 id="定义1"><a href="#定义1" class="headerlink" title="定义1"></a>定义1</h4><blockquote><p>设开集$D \subset \mathbb{R}^n$，$f: D \to \mathbb{R}$，$\boldsymbol{u}$是一个方向，$x_0 \in D$，如果极限</p><script type="math/tex; mode=display">    \lim \limits_{t \to 0} \frac{f(\boldsymbol{x}_0 + t\boldsymbol{u}) - f(\boldsymbol{x})}{t}</script><p>存在且有限，则称这个极限为函数$f$在$\boldsymbol{x}_0$处沿方向$u$的方向导数，记为$\frac{\partial f}{\partial \boldsymbol{u}}(\boldsymbol{x}_0)$。</p></blockquote><a id="more"></a><h4 id="定义2"><a href="#定义2" class="headerlink" title="定义2"></a>定义2</h4><blockquote><p>记单位坐标向量</p><script type="math/tex; mode=display">    \begin{aligned}        & \boldsymbol{e}_1 = (1, 0, 0, \cdots, 0) \\        & \boldsymbol{e}_2 = (0, 1, 0, \cdots, 0) \\        & \cdots \\        & \boldsymbol{e}_n = (0, 0, 0, \cdots, 1)    \end{aligned}</script><p>称函数$f$在点$\boldsymbol{x}_0$处沿方向$\boldsymbol{e}_i$的方向导数为$f$在$\boldsymbol{x}_0$处的第$i$个一阶偏导数，记作</p><script type="math/tex; mode=display">    \frac{\partial f}{\partial x_i} (\boldsymbol{x}_0) 或 \mathrm{D}_if(\boldsymbol{x}_0)</script><p>并称$\mathrm{D}_i = \frac{\partial}{\partial x_i}$为第$i$个偏微分算子$(i=1,2,\cdots,n)$；令</p><script type="math/tex; mode=display">    \boldsymbol{J}f(\boldsymbol{x}) = (\mathrm{D_1}f(\boldsymbol{x}),\mathrm{D_2}f(\boldsymbol{x}),\cdots,\mathrm{D_n}f(\boldsymbol{x}))</script><p>并称它为函数$f$在点$\boldsymbol{x}$处的Jacobi矩阵$1 \times n$矩阵。Jacobi矩阵也常记作$\mathrm{grad} f$或$\nabla f$，也称为数量函数$f$的梯度。</p></blockquote><hr><p>设开集$D \subset \mathbb{R}^n$，$f: D \to \mathbb{R}$，取定一点$\boldsymbol{x}_0 \in D$，$\boldsymbol{h} \in \mathbb{R}^n$。由于$\boldsymbol{x}_0$是$D$的一个内点，故当$\Vert \boldsymbol{h} \Vert$充分小时，可以使$\boldsymbol{x}_0+\boldsymbol{h}$完全在$D$之内。</p><h4 id="定义3"><a href="#定义3" class="headerlink" title="定义3"></a>定义3</h4><blockquote><p>设$\boldsymbol{h}=(h_1,h_2,\cdots,h_n)$，如果成立</p><script type="math/tex; mode=display">    f(\boldsymbol{x}_0 + \boldsymbol{h}) - f(\boldsymbol{x}_0) = \sum_{i=1}^n \lambda_i h_i + o(\Vert \boldsymbol{h} \Vert) \quad (\Vert \boldsymbol{h} \Vert \to 0)</script><p>其中$\lambda_i(i=1,2,\cdots,n)$是不依赖于$\boldsymbol{h}$的常数，那么称函数$f$在点$\boldsymbol{x}_0$处可微，并称$\sum \limits_{i=1}^n \lambda_i h_i$为$f$在$\boldsymbol{x}_0$处的微分，记作</p><script type="math/tex; mode=display">    \mathrm{d}f(\boldsymbol{x}_0) (\boldsymbol{h}) = \sum_{i=1}^n \lambda_i h_i</script><p>如果$f$在开集$D$上的每一点处都可微，则称$f$是$D$上的可微函数。</p></blockquote><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>为了方便，将$\boldsymbol{x}_0,\boldsymbol{h}$表示列向量形式，设函数$f$在$\boldsymbol{x}_0 = (x_1,x_2,\cdots,x_n)^T$处可微，则</p><script type="math/tex; mode=display">    \mathrm{d}f(\boldsymbol{x}_0) (\boldsymbol{h}) = \boldsymbol{J}f(\boldsymbol{x_0}) \boldsymbol{h}</script></blockquote><p>证：<a href="https://gamersover.github.io/2021/03/31/函数导数8/#定义3" target="_blank" rel="noopener">定义3</a>中令$\boldsymbol{h} = (h_1,0,\cdots, 0)^T$，此时</p><script type="math/tex; mode=display">    f(x_1+h_1, x_2, \cdots, x_n) - f(x_1,x_2,\cdots,x_n) = \lambda_1 h_1 + o(|h_1|)</script><p>从而</p><script type="math/tex; mode=display">    \frac{f(x_1+h_1, x_2, \cdots, x_n) - f(x_1,x_2,\cdots,x_n)}{h_1} = \lambda_1 + o(1)</script><p>令$h_1 \to 0$，得</p><script type="math/tex; mode=display">    \lambda_1 = \mathrm{D}_1f(\boldsymbol{x}_0)</script><p>一般地，有</p><script type="math/tex; mode=display">    \lambda_i = \mathrm{D}_if(\boldsymbol{x}_0) \quad (i=1,2,\cdots,n)</script><p>所以有</p><script type="math/tex; mode=display">    \mathrm{d}f(\boldsymbol{x}_0) (\boldsymbol{h}) = \boldsymbol{J}f(\boldsymbol{x_0}) \boldsymbol{h}</script><p>Q.E.D.</p><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>设$f$在$\boldsymbol{x}_0$处可微，则$f$必在$\boldsymbol{x}_0$处连续。</p></blockquote><p>证：由于$f$在$\boldsymbol{x}_0$处可微，当$\boldsymbol{h} \to \boldsymbol{0}$时，有$h_i \to 0 (i=1,2,\cdots,n)$，此时$\mathrm{d}f(\boldsymbol{x}_0) (\boldsymbol{h}) = \sum \limits_{i=1}^n \lambda_i h_i \to 0$，从而$f(\boldsymbol{x_0} + \boldsymbol{h}) - f(\boldsymbol{x}_0) \to 0$，所以$f$在$\boldsymbol{x}_0$处连续。<br>Q.E.D.</p><h4 id="定理3"><a href="#定理3" class="headerlink" title="定理3"></a>定理3</h4><blockquote><p>函数$f$在$\boldsymbol{x}_0$处可微当且仅当等式</p><script type="math/tex; mode=display">    f(\boldsymbol{x}_0 + \boldsymbol{h}) - f(\boldsymbol{x}_0) = \boldsymbol{J}f(\boldsymbol{x}_0) \boldsymbol{h} + \sum_{i=1}^n \beta_i(\boldsymbol{h}) h_i</script><p>成立。其中，当$\Vert \boldsymbol{h} \Vert \to 0$时，</p><script type="math/tex; mode=display">    \beta_i(\boldsymbol{h}) \to 0 \quad (i=1,2,\cdots,n)</script></blockquote><p>证：充分性。当$\boldsymbol{h} \to \boldsymbol{0}$时，有</p><script type="math/tex; mode=display">    \frac{1}{\Vert \boldsymbol{h} \Vert} |\sum_{i=1}^n \beta_i(\boldsymbol{h})h_i| = \left| \sum_{i=1}^n \beta_i(\boldsymbol{h}) \frac{h_i}{\boldsymbol{\Vert h \Vert}} \right| \le \left| \sum_{i=1}^n \beta_i(\boldsymbol{h}) \right| \to 0</script><p>即</p><script type="math/tex; mode=display">    \sum_{i=1}^n \beta_i(\boldsymbol{h}) h_i = o(\Vert \boldsymbol{h} \Vert)</script><p>由<a href="https://gamersover.github.io/2021/03/31/函数导数8/#定义3" target="_blank" rel="noopener">定义3</a>可知，函数$f$在$\boldsymbol{x}_0$处可微。 <br/><br>必要性。记</p><script type="math/tex; mode=display">    r(\boldsymbol{h}) = f(\boldsymbol{x}_0 + \boldsymbol{h}) - f(\boldsymbol{x}_0) - \boldsymbol{J}f(\boldsymbol{x_0}) \boldsymbol{h}</script><p>可知当$\Vert \boldsymbol{h} \Vert \to 0$时，有$r(\boldsymbol{h}) = o(\Vert \boldsymbol{h} \Vert)$，由于</p><script type="math/tex; mode=display">    r(\boldsymbol{h}) = \left(\sum_{i=1}^n \frac{h_i}{\Vert \boldsymbol{h} \Vert} h_i \right)\frac{r(\boldsymbol{h})}{\Vert \boldsymbol{h} \Vert}</script><p>故令</p><script type="math/tex; mode=display">    \beta_i(\boldsymbol{h}) = \frac{r(\boldsymbol{h})}{\Vert \boldsymbol{h} \Vert} \frac{h_i}{\Vert \boldsymbol{h} \Vert}</script><p>由于</p><script type="math/tex; mode=display">    \frac{h_i}{\Vert \boldsymbol{h} \Vert} \le 1 \quad (i=1,2,\cdots,n)</script><p>从而可知$\beta_i(\boldsymbol{h}) \to 0$，且</p><script type="math/tex; mode=display">    f(\boldsymbol{x}_0 + \boldsymbol{h}) - f(\boldsymbol{x}_0) = \boldsymbol{J}f(\boldsymbol{x}_0) \boldsymbol{h} + \sum_{i=1}^n \beta_i(\boldsymbol{h}) h_i</script><p>Q.E.D.</p><h4 id="定理4"><a href="#定理4" class="headerlink" title="定理4"></a>定理4</h4><blockquote><p>设开集$D \subset \mathbb{R}^n$，$f: D \to \mathbb{R}$，$\boldsymbol{x}_0 \in D$，如果$\mathrm{D}_if(\boldsymbol{x}) (i=1,2,\cdots,n)$在$\boldsymbol{x}_0$的一个邻域中存在且在点$\boldsymbol{x}_0$处连续，则$f$在点$\boldsymbol{x}_0$处可微。</p></blockquote><p>证：使用数学归纳法。当$n=1$时自然成立，因为单变量函数的导数存在即可微。设定理对$n-1$维成立，令</p><script type="math/tex; mode=display">    f(\boldsymbol{x}_0 + \boldsymbol{h}) - f(\boldsymbol{x}_0) = K_1 + K_2</script><p>其中</p><script type="math/tex; mode=display">    \begin{aligned}    & K_1 = f(x_1+h_1,x_2+h_2,\cdots,x_n+h_n) - f(x_1+h_1,\cdots,x_{n-1}+h_{n-1},x_n) \\    & K_2 = f(x_1+h_1,\cdots,x_{n-1}+h_{n-1},x_n) - f(x_1,x_2,\cdots,x_n)    \end{aligned}</script><p>对$K_1$运用一元微分中值定理，得到</p><script type="math/tex; mode=display">    K_1 = \frac{\partial f}{\partial x_n}(x_1+h_1,\cdots,x_{n-1}+h_{n-1},x_n+\theta h_n) h_n</script><p>其中$\theta \in (0, 1)$，可以令</p><script type="math/tex; mode=display">    K_1 = \frac{\partial f}{\partial x_n}(\boldsymbol{x}_0) h_n + r_1</script><p>其中</p><script type="math/tex; mode=display">    \begin{aligned}    r_1 & = \left( \frac{\partial f}{\partial x_n}(x_1+h_1,\cdots,x_{n-1}+h_{n-1},x_n+\theta h_n) - \frac{\partial f}{\partial x_n}(\boldsymbol{x}_0) \right) h_n \\    & = \beta_n(\boldsymbol{h}) h_n    \end{aligned}</script><p>由$\frac{\partial f}{\partial x_n}$函数的连续性可知，当$\Vert \boldsymbol{h} \Vert \to 0$时，$\beta_n(\boldsymbol{h}) \to 0$，从而</p><script type="math/tex; mode=display">    K_1 = \frac{\partial f}{\partial x_n}(\boldsymbol{x}_0)h_n + \beta_n(\boldsymbol{h})h_n</script><p>对$K_2$使用$n-1$维的归纳假设，可知</p><script type="math/tex; mode=display">    K_2 = \sum_{i=1}^{n-1} \frac{\partial f}{\partial x_i} h_i + \sum_{i=1}^{n-1} \beta_i(\boldsymbol{h}) h_i</script><p>当$\Vert \boldsymbol{h} \Vert \to 0$时，$\beta_i(\boldsymbol{h}) \to 0 (i=1,2,\cdots,n-1)$，从而</p><script type="math/tex; mode=display">    f(\boldsymbol{x}_0 + \boldsymbol{h}) - f(\boldsymbol{x}_0) = K_1+K_2 = \sum \limits_{i=1}^n \frac{\partial f}{\partial x_i} (\boldsymbol{x}_0) h_i + \sum_{i=1}^{n-1} \beta_i(\boldsymbol{h})h_i</script><p>其中$\beta_i(\boldsymbol{h}) \to 0 (\Vert \boldsymbol{h} \Vert \to 0)(i=1,2,\cdots,n)$。所以$f$在$\boldsymbol{x}_0$处可微。即对$n$维定理也成立。</p><p>Q.E.D.</p><h4 id="定理5"><a href="#定理5" class="headerlink" title="定理5"></a>定理5</h4><blockquote><p>若$f$在$\boldsymbol{x}_0$处可微，则$f$在$\boldsymbol{x}_0$处的任意方向$\boldsymbol{u} = (u_1,u_2,\cdots,u_n)$的方向导数都存在，且</p><script type="math/tex; mode=display">    \frac{\partial f}{\partial \boldsymbol{u}}(\boldsymbol{x}_0) = \frac{\partial f}{\partial x_1}(\boldsymbol{x}_0) u_1 +  \frac{\partial f}{\partial x_2}(\boldsymbol{x}_0) u_2 + \cdots + \frac{\partial f}{\partial x_n}(\boldsymbol{x}_0) u_n</script></blockquote><p>证：由于$f$在$\boldsymbol{x}_0$处可微，从而</p><script type="math/tex; mode=display">    f(\boldsymbol{x}_0 + t \boldsymbol{u}) - f(\boldsymbol{x}_0) = \sum_{i=1}^n \frac{\partial f}{\partial x_i} (\boldsymbol{x}_0) tu_i + o(t)</script><p>而</p><script type="math/tex; mode=display">    \frac{\partial f}{\partial \boldsymbol{u}}(\boldsymbol{x}_0) = \lim \limits_{t \to 0} \frac{f(\boldsymbol{x}_0+t \boldsymbol{u}) - f(\boldsymbol{x})}{t} = \sum_{i=1}^n \frac{\partial f}{\partial x_i} u_i</script><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数导数 </tag>
            
            <tag> 微分 </tag>
            
            <tag> 多变量函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数导数七：Taylor定理</title>
      <link href="/2021/03/28/%E5%87%BD%E6%95%B0%E5%AF%BC%E6%95%B07/"/>
      <url>/2021/03/28/%E5%87%BD%E6%95%B0%E5%AF%BC%E6%95%B07/</url>
      
        <content type="html"><![CDATA[<h4 id="定义1"><a href="#定义1" class="headerlink" title="定义1"></a>定义1</h4><blockquote><p>设函数$f$在$x_0$处有直到$n$阶的导数，这里$n$是任意给定的正整数，令</p><script type="math/tex; mode=display">    T_n(f,x_0;x) = f(x_0) + \frac{1}{1!}f^\prime(x_0)(x - x_0) + \frac{1}{2!}f^{\prime\prime}(x_0)(x-x_0)^2 + \cdots + \frac{1}{n!}f^{(n)}(x_0)(x-x_0)^n</script><p>称它为$f$在$x_0$处的$n$次Taylor多项式。</p></blockquote><a id="more"></a><h4 id="定理1：带Peano余项的Taylor定理"><a href="#定理1：带Peano余项的Taylor定理" class="headerlink" title="定理1：带Peano余项的Taylor定理"></a>定理1：带Peano余项的Taylor定理</h4><blockquote><p>设函数$f$在$x_0$处有直到$n$阶的导数，则有</p><script type="math/tex; mode=display">    f(x) = T_n(f,x_0;x) + o((x-x_0)^n)  \quad (x \to x_0)</script></blockquote><p>证：用数学归纳法。当$n=1$时，由微分性质可知成立。现设$n=k$时，上式成立。由于</p><script type="math/tex; mode=display">    T_{k+1}^{\prime}(f,x_0;x) = T_k(f^\prime, x_0; x)</script><p>由L’Hospital法则可知</p><script type="math/tex; mode=display">    \lim \limits_{x \to x_0} \frac{f(x) - T_{k+1}(f,x_0,x)}{(x-x_0)^{k+1}} = \frac{1}{k+1}\lim \limits_{x \to x_0} \frac{f^\prime(x) - T_k(f^\prime, x_0;x)}{(x-x_0)^k}</script><p>而$f^\prime$在$n = k$时定理成立，从而</p><script type="math/tex; mode=display">    \lim \limits_{x \to x_0} \frac{f^\prime(x) - T_k(f^\prime, x_0;x)}{(x-x_0)^k} = 0</script><p>所以</p><script type="math/tex; mode=display">    \lim \limits_{x \to x_0} \frac{f(x) - T_{k+1}(f,x_0,x)}{(x-x_0)^{k+1}} = 0</script><p>令</p><script type="math/tex; mode=display">    R_n(x) = f(x) - T_n(f,x_0;x) \quad (n=1,2,\cdots)</script><p>称它为余项，满足</p><script type="math/tex; mode=display">    \lim \limits_{x \to x_0} \frac{R_n(x)}{(x-x_0)^n} = 0</script><p>这种余项称为Peano余项，该定理也称为带有Peano余项的Tyalor定理，也叫做函数$f$的Taylor展开式。</p><p>Q.E.D.</p><h4 id="定理2：带Peano余项的Maclaurin定理"><a href="#定理2：带Peano余项的Maclaurin定理" class="headerlink" title="定理2：带Peano余项的Maclaurin定理"></a>定理2：带Peano余项的Maclaurin定理</h4><blockquote><p>设函数$f$在$x=0$处有直到$n$阶的导数，则多项式</p><script type="math/tex; mode=display">    T_n(f,0;x) = f(0) + \frac{f^\prime(0)}{1!} x + \frac{f^{\prime\prime}(0)}{2!}x^2 + \cdots + \frac{f^{(n)}(0)}{n!}x^n</script><p>为$f$的$n$次Maclaurin多项式，相应地，</p><script type="math/tex; mode=display">    f(x) = T_n(f,0,x) + o(x^n) \quad (x \to x_0)</script><p>称为带Peano余项的Maclaurin定理，也叫做函数$f$的Maclaurin展开式。</p></blockquote><h4 id="定理3"><a href="#定理3" class="headerlink" title="定理3"></a>定理3</h4><blockquote><p>设函数$f$在$x_0$处有直到$k$阶的导数，并且</p><script type="math/tex; mode=display">    f^\prime(x_0) = f^{\prime\prime}(x_0) = \cdots = f^{(k-1)} (x_0) = 0, f^{(k)}(x_0) \ne 0</script><p>那么： <br/><br>（1）当$k$为奇数时，$x_0$不是$f$的极值点。<br/><br>（2）当$k$为偶数时，若$f^{(k)}(x_0)&gt;0$，则$x_0$是$f$的严格极小值；若$f^{(k)}(x_0)&lt;0$，则$x_0$是$f$的严格极大值。</p></blockquote><p>证：由Peano余项的Taylor定理可知：</p><script type="math/tex; mode=display">    f(x) = f(x_0) + \frac{f^{(k)}(x_0)}{k!}(x-x_0)^k + o((x-x_0)^k) \quad (x \to x_0)</script><p>即</p><script type="math/tex; mode=display">    \frac{f(x) - f(x_0)}{(x-x_0)^k} = \frac{f^{(k)}(x_0)}{k!} + o(1)</script><p>（1）当$k$为奇数时。若$f^{(k)}(x_0) &gt; 0$，则当$x&gt;x_0$时，$f(x)&gt;f(x_0)$，$x<x_0$时，$f(x)<f(x_0)$，表明$x_0$不是极值点；对于$f^{(k)}(x_0) < 0$时，讨论是一样的；<br/><br>（2）当$k$为偶数时，由于$(x - x_0)^k$在$x\ne x_0$处总是正值，所以当$f^{(k)}(x_0)&gt;0$时，总有$f(x)&gt;f(x_0)$，可知此时$x_0$是极小值；同理当$f^{(k)}(x_0)&lt;0$时，总有$f(x)&lt;f(x_0)$，此时$x_0$是极大值点。</p><p>Q.E.D.</p><h4 id="定理4：带Lagrange余项和Cauchy余项的Taylor定理"><a href="#定理4：带Lagrange余项和Cauchy余项的Taylor定理" class="headerlink" title="定理4：带Lagrange余项和Cauchy余项的Taylor定理"></a>定理4：带Lagrange余项和Cauchy余项的Taylor定理</h4><blockquote><p>设$f$在开区间$(a,b)$上有$n+1$阶导数，$x_0,x$是$(a,b)$中任意两点，那么</p><script type="math/tex; mode=display">    f(x) = T_n(f,x_0;x) + R_n(x)</script><p>其中</p><script type="math/tex; mode=display">    R_n(x) = \frac{f^{(n+1)}(\xi)}{(n+1)!}(x - x_0)^{(n+1)}</script><p>称为Lagrange余项；<br>或者</p><script type="math/tex; mode=display">    R_n(x) = \frac{f^{(n+1)}(\xi)}{n!}(x - \xi)^n(x - x_0)</script><p>称为Cauchy余项。</p></blockquote><p>证：记</p><script type="math/tex; mode=display">    F(t) = T_n(f,t;x) = f(t) + \sum_{k=1}^n \frac{f^{(k)}(t)}{k!}(x-t)^k</script><p>有</p><script type="math/tex; mode=display">\begin{aligned}    F^\prime(t) & = f^\prime(t) + \sum_{k=1}^n \left(\frac{f^{(k+1)}(t)}{k!}(x-t)^k - \frac{f^{(k)}(t)}{(k-1)!}(x-t)^{(k-1)} \right) \\    & = f^\prime(t) + \sum_{k=1}^n \frac{f^{(k+1)}(t)}{k!}(x-t)^k + \sum_{k=1}^n \frac{f^{(k)}(t)}{(k-1)!}(x-t)^{(k-1)} \\    & = f^\prime(t) + \frac{f^{(n+1)}(t)}{n!}(x-t)^{(n)} - f^\prime(t) = \frac{f^{(n+1)}(t)}{n!}(x-t)^{(n)}\end{aligned}</script><p>对函数$g(t)=F(t),\lambda(t) = \left( \frac{x-t}{x-x_0}\right)^{n+1}$，在区间$[x_0,x]$（先设$x_0&lt;x$）上使用<a href="https://gamersover.github.io/2021/02/01/函数导数3/#定理3" target="_blank" rel="noopener">函数导数三的定理3</a>可知，必存在$\xi \in (x_0, x)$，使得</p><script type="math/tex; mode=display">    F^\prime(\xi) = \lambda^\prime(\xi)(F(x_0) - F(x))</script><p>而</p><script type="math/tex; mode=display">    \lambda^\prime(t) = -(n+1)\frac{(x-t)^n}{(x-x_0)^{n+1}}</script><p>从而</p><script type="math/tex; mode=display">    \frac{f^{(n+1)}(\xi)}{n!}(x-\xi)^{n} = -(n+1)\frac{(x-\xi)^n}{(x-x_0)^{n+1}}(T_n(f,x_0;x)-f(x))</script><p>即</p><script type="math/tex; mode=display">    f(x) = T_n(f,x_0;x) + \frac{f^{(n+1)}(\xi)}{(n+1)!}(x-x_0)^{n+1}</script><p>这就是带Lagrange余项的Taylor定理；若令$\lambda(t) = \frac{x-t}{x- x_0}$，则同上可得</p><script type="math/tex; mode=display">    \frac{f^{(n+1)}(\xi)}{n!}(x-\xi)^{n} = -\frac{1}{x-x_0}(T_n(f,x_0;x)-f(x))</script><p>即</p><script type="math/tex; mode=display">    f(x) = T_n(f,x_0;x) + \frac{f^{(n+1)}(\xi)}{n!}(x-\xi)^n(x-x_0)</script><p>这就是带Cauchy余项的Taylor定理。<br/></p><p>如果$x &lt; x_0$，分别取</p><script type="math/tex; mode=display">    \lambda(t) = 1 - \left( \frac{x - t}{x-x_0} \right)^{(n+1)}, \quad \lambda(t) = 1 - \frac{x-t}{x-x_0}</script><p>即可证。</p><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数导数 </tag>
            
            <tag> Taylor定理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode题解19：删除链表的倒数第N个结点</title>
      <link href="/2021/03/28/leetcode%E9%A2%98%E8%A7%A319/"/>
      <url>/2021/03/28/leetcode%E9%A2%98%E8%A7%A319/</url>
      
        <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>该题来自于<a href="https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/" target="_blank" rel="noopener">力扣第19题</a></p><p>给你一个链表，删除链表的倒数第<code>n</code>个结点，并且返回链表的头结点。<br>进阶：你能尝试使用一趟扫描实现吗？</p><a id="more"></a><p>示例 1：</p><blockquote><p>输入：head = [1,2,3,4,5], n = 2<br>输出：[1,2,3,5]</p></blockquote><p>示例 2：</p><blockquote><p>输入：head = [1], n = 1<br>输出：[]</p></blockquote><p>示例 3：</p><blockquote><p>输入：head = [1,2], n = 1<br>输出：[1]</p></blockquote><p>提示：</p><ul><li>链表中结点的数目为<code>sz</code></li><li>1 &lt;= <code>sz</code> &lt;= 30</li><li>0 &lt;= <code>Node.val</code> &lt;= 100</li><li>1 &lt;= <code>n</code> &lt;= sz</li></ul><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>想找到倒数第<code>n</code>个结点，就相当于找到第<code>sz - n + 1</code>个结点，但是<code>sz</code>不知道，需要一趟遍历整个链表才能获得，这样看来无论如何都需要两遍扫描；还记得找到中点结点的方法吗？快慢指针，一遍扫描即可；这里也可以用类似的想法；比如，现有一链表如下，要删除倒数第2个结点：</p><blockquote><p>1 -&gt; 2 -&gt; 3 -&gt; <font color='blue'>4</font> -&gt; 5 -&gt; <font color='red'>6</font></p></blockquote><p>如果我们能够让第一个指针<code>p1</code>指向4，那么就可以进行删除操作了；利用快慢指针的想法，第二个指针<code>p2</code>需要指向最后一个结点即6，所以两个指针相差2个结点，如果最开始让<code>p1</code>指向1，<code>p2</code>指向3，然后只需让<code>p1++,p2++</code>直到<code>p2</code>到达最后一个结点，这时<code>p1</code>自然达到了倒数第<code>n</code>个结点了。</p><p>所以先让<code>p2</code>指针往右走<code>n</code>步，达到第<code>n+1</code>个结点，然后<code>p1,p2</code>指针同时走动1步，直到<code>p2</code>指针指向<code>sz</code>，这时<code>p1</code>自然会指向<code>sz -n</code>，即要删除结点的父结点位置，然后就可以删除了。当然，还要考虑特殊情况：删除一个结点的时候的特殊处理。或者用一个虚假的头指向链表原有head，这样就不用考虑特殊情况了。</p><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><p>采用双指针法，</p><ol><li>初始化<code>p1=head,p2=head</code></li><li>进入循环<code>p2 = p2-&gt;next</code>，直到<code>i==n</code>，如果<code>p2==null</code>，表明删除的是头结点，则让<code>head = p1-&gt;next</code>退出程序，或则进入3</li><li>进入循环<code>p1 = p1-&gt;next, p2=p2-&gt;next</code>，直到<code>p2-&gt;next == null</code>，表明<code>p2</code>已到达最后一个结点，此时让<code>p1-&gt;next = p1-&gt;next-&gt;next</code></li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><details open><summary>python3</summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">removeNthFromEnd</span><span class="params">(self, head, n)</span>:</span></span><br><span class="line">        p1, p2 = head, head</span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; n <span class="keyword">and</span> p2 <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            p2 = p2.next</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> p2 <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            head = p1.next</span><br><span class="line">            <span class="keyword">return</span> head</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> p2.next <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            p1 = p1.next</span><br><span class="line">            p2 = p2.next        </span><br><span class="line">        p1.next = p1.next.next</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> head</span><br></pre></td></tr></table></figure></details><details><summary>c++</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">removeNthFromEnd</span><span class="params">(ListNode* head, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        ListNode* p1 = head;</span><br><span class="line">        ListNode* p2 = head;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; n &amp;&amp; p2 != <span class="literal">nullptr</span>)&#123;</span><br><span class="line">            p2 = p2-&gt;next;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(p2 == <span class="literal">nullptr</span>)&#123;</span><br><span class="line">            head = head-&gt;next;</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(p2-&gt;next != <span class="literal">nullptr</span>)&#123;</span><br><span class="line">            p1 = p1-&gt;next;</span><br><span class="line">            p2 = p2-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        p1-&gt;next = p1-&gt;next-&gt;next;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></details><details><summary>java</summary><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">removeNthFromEnd</span><span class="params">(ListNode head, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        ListNode p1 = head;</span><br><span class="line">        ListNode p2 = head;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; n &amp;&amp; p2 != <span class="keyword">null</span>)&#123;</span><br><span class="line">            p2 = p2.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(p2 == <span class="keyword">null</span>)&#123;</span><br><span class="line">            head = head.next;</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(p2.next != <span class="keyword">null</span>)&#123;</span><br><span class="line">            p1 = p1.next;</span><br><span class="line">            p2 = p2.next;</span><br><span class="line">        &#125;</span><br><span class="line">        p1.next = p1.next.next;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 双指针 </tag>
            
            <tag> 链表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数导数六：函数的微分</title>
      <link href="/2021/03/16/%E5%87%BD%E6%95%B0%E5%AF%BC%E6%95%B06/"/>
      <url>/2021/03/16/%E5%87%BD%E6%95%B0%E5%AF%BC%E6%95%B06/</url>
      
        <content type="html"><![CDATA[<h4 id="定义1：微分"><a href="#定义1：微分" class="headerlink" title="定义1：微分"></a>定义1：微分</h4><blockquote><p>设函数$f$在$(a,b)$上有定义，且$x_0 \in (a,b)$，如果存在一个常熟$\lambda$，使得</p><script type="math/tex; mode=display">    f(x_0 + \Delta x) - f(x_0) = \lambda \Delta x + o(\Delta x)  \quad (\Delta x \to 0)</script><p>则称函数$f$在点$x_0$处可微，$\lambda \Delta x$称为$f$在$x_0$处的微分，记作$\mathrm{d}f(x_0)$。如果$f$在$(a,b)$上任意一点都可微，则称$f$在$(a,b)$上可微。</p></blockquote><a id="more"></a><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>函数$f$在点$x_0$处可微的充分必要条件是$f$在$x_0$出可导。</p></blockquote><p>证：必要性。由可微的定义可知</p><script type="math/tex; mode=display">    f(x_0 + \Delta x) - f(x_0) = \lambda \Delta x + o(\Delta x)  \quad (\Delta x \to 0)</script><p>上式两边同时除以$\Delta x$，可得</p><script type="math/tex; mode=display">    \frac{f(x_0 + \Delta x) - f(x_0)}{\Delta x} = \lambda + o(1)  \quad (\Delta x \to 0)</script><p>从而得到</p><script type="math/tex; mode=display">    \lambda = \lim \limits_{\Delta x \to 0} \frac{f(x_0 + \Delta x) - f(x_0)}{\Delta x} = f^\prime(x_0)</script><p>这就表明$f$在$x_0$处可导；</p><p>充分性。由可导的定义可知</p><script type="math/tex; mode=display">    f^\prime(x_0) = \lim \limits_{\Delta x \to 0} \frac{f(x_0 + \Delta x) - f(x_0)}{\Delta x}</script><p>然后根据上面的证明反推，即可证。<br /><br>从而对单变量函数来说，可导和可微是同一回事。且有</p><script type="math/tex; mode=display">    \mathrm{d} f(x_0) = f^\prime(x_0) \Delta x</script><p>Q.E.D.</p><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>（1）$\mathrm{d} x = \Delta x$ <br /><br>（2）$\mathrm{d} f(x) = f^\prime(x) \mathrm{d}x$</p></blockquote><p>证：由于</p><script type="math/tex; mode=display">    \mathrm{d} f(x) = f^\prime(x) \Delta x \tag 1</script><p>从而当$f(x) = x$时，有$f^\prime(x) = 1$，所以</p><script type="math/tex; mode=display">    \mathrm{d} f(x) = \Delta x \tag 2</script><p>将(2)式代入(1)式即可得</p><script type="math/tex; mode=display">    \mathrm{d} f(x) = f^\prime(x) \mathrm{d}x</script><h4 id="定义2：微商"><a href="#定义2：微商" class="headerlink" title="定义2：微商"></a>定义2：微商</h4><blockquote><p>函数$f$如果在区间$I$上可微，则称$\frac{\mathrm{d}f(x)}{\mathrm{d}x}$为函数$f$的微商，由于$\frac{\mathrm{d}f(x)}{\mathrm{d}x} = f^\prime(x)$，所以微商也称为导数。</p></blockquote><h4 id="定理3：微分的四则运算"><a href="#定理3：微分的四则运算" class="headerlink" title="定理3：微分的四则运算"></a>定理3：微分的四则运算</h4><blockquote><p>函数$f,g$在区间$I$上可微，则 <br /><br>（1）$\mathrm{d} (f \pm g) = \mathrm{d} f + \mathrm{d} g$ <br /><br>（2）$\mathrm{d} (fg) = g \mathrm{d}f + f \mathrm{d} g$ <br /><br>（3）$\mathrm{d} \left(\frac{f}{g}\right) = \frac{g \mathrm{d}f - f \mathrm{d} g}{g^2}$</p></blockquote><p>证：利用微分与导数的关系易证。</p><h4 id="定义3"><a href="#定义3" class="headerlink" title="定义3"></a>定义3</h4><blockquote><p>设函数$y=f(x)$在区间$I$上可微，那么$\mathrm{d} y = f^\prime(x) \mathrm{d}x$仍然是$x$的函数，如果$f^\prime(x)$仍可微，则可计算$\mathrm{d}y$的微分，记$\mathrm{d}^2 y = \mathrm{d} (\mathrm{d} y)$，可知</p><script type="math/tex; mode=display">    \mathrm{d}^2 y = \mathrm{d} (\mathrm{d} y) = \mathrm{d} (f^\prime(x) \mathrm{d} x) = f^{\prime\prime}(x) \mathrm{d} x^2</script><p>这里$\mathrm{d} x^2 = (\mathrm{d} x)^2$，称$\mathrm{d}^2y$为$y = f(x)$的二次微分。如果$f^{\prime\prime}(x)$仍可微，则可定义三阶微分</p><script type="math/tex; mode=display">    \mathrm{d}^3 y = f^{\prime\prime\prime}(x) \mathrm{d} x^3</script><p>如果$f$在$x$处有$n$阶导数，那么有</p><script type="math/tex; mode=display">    \mathrm{d}^n y = f^{(n)}(x) \mathrm{d} x^n</script><p>且有$n$阶导数的记号</p><script type="math/tex; mode=display">    \frac{\mathrm{d}^n y}{\mathrm{d} x^n} = f^{(n)} (x)</script></blockquote><h4 id="定理4：复合函数的微分"><a href="#定理4：复合函数的微分" class="headerlink" title="定理4：复合函数的微分"></a>定理4：复合函数的微分</h4><blockquote><p>设$y=f(x)$且$x = \varphi(t)$，当$t$在$\varphi$的定义域内变化时，$\varphi(t)$的值也在$f$的定义域内。且函数$f,\varphi$都可微，则复合函数$y = f\circ \varphi (t)$，也可微。</p></blockquote><p>证：由于</p><script type="math/tex; mode=display">    \mathrm{d} y = (f \circ \varphi)^\prime \mathrm{d}t  = f^\prime(x) \varphi^\prime(t) \mathrm{d} t</script><p>又知$\mathrm{d} x = \varphi(t)^\prime \mathrm{d} t$，代入上式，可得</p><script type="math/tex; mode=display">    \mathrm{d} y = f^\prime(x) \mathrm{d} x</script><p>如果$x$是自变量，上式自然成立。也就是无论是对独立的自变量还是对中间变量上式都是正确的，这称为一阶微分形式的不变性。</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数导数 </tag>
            
            <tag> 微分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode题解16：最接近的三数之和</title>
      <link href="/2021/03/13/leetcode%E9%A2%98%E8%A7%A316/"/>
      <url>/2021/03/13/leetcode%E9%A2%98%E8%A7%A316/</url>
      
        <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>该题来自于<a href="https://leetcode-cn.com/problems/3sum-closest/" target="_blank" rel="noopener">力扣第16题</a><br>给定一个包括<code>n</code>个整数的数组<code>nums</code>和一个目标值<code>target</code>。找出<code>nums</code>中的三个整数，使得它们的和与<code>target</code>最接近。返回这三个数的和。假定每组输入只存在唯一答案。</p><a id="more"></a><p>示例：</p><blockquote><p>输入：nums = [-1,2,1,-4], target = 1<br>输出：2<br>解释：与 target 最接近的和是 2 (-1 + 2 + 1 = 2) 。</p></blockquote><p>提示：</p><ul><li><code>3 &lt;= nums.length &lt;= 10^3</code></li><li><code>-10^3 &lt;= nums[i] &lt;= 10^3</code></li><li><code>-10^4 &lt;= target &lt;= 10^4</code></li></ul><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>首先想到三数之和的解法，将数组排序，然后先固定第一个数，接下来就是如何找到另外两个数，使得三个数的和最接近target。还是用双指针法，假设第一个数下标为<code>first</code>，第二个数下标为<code>second=first+1</code>，第三个数下标为<code>third=n-1</code>，记<code>s=nums[first]+nums[second]+nums[third]</code>，由于数组是排过序的，所以分三种情况</p><ol><li>如果<code>s=target</code>，直接返回这<code>target</code>就可以了；</li><li>如果<code>s&gt;target</code>，那么移动指针<code>second</code>，只会让<code>s</code>更大，从而与<code>target</code>相差更大，所以让<code>third--</code>；</li><li>如果<code>s&lt;target</code>，那么移动指针<code>third</code>，只会让<code>s</code>更小，从而与<code>target</code>相差更大，所以让<code>second--</code></li></ol><p>经过上述步骤，如果没有返回，记录<code>s-target</code>的绝对值是否是最小的，并更新s，然后遍历<code>first</code>就可以找到最终结果了。</p><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><ol><li>排序数组</li><li>将最接近<code>target</code>的值<code>closest</code>初始化为<code>nums[0]+nums[1]+nums[2]</code></li><li>第一个数下标<code>first</code>从<code>0</code>到<code>n-3</code>遍历数组</li><li>进入循环体，设<code>second=first + 1</code>，<code>third=n-1</code>，计算<code>s=nums[first] + nums[second] + nums[third]</code></li><li>判断<code>s</code>与<code>target</code>的关系，如果<code>s==target</code>，直接返回target，退出程序；否则按照上面的分析更新<code>second</code>，<code>third</code></li><li>如果<code>|s-target|&lt;|closest-target|</code>，那么更新<code>closest=s</code></li><li>判断<code>second</code>是否大于等于<code>third</code>，如果是，退出循环；否则<code>first++</code>，并进入循环体（第4步）</li></ol><p>小优化：</p><blockquote><p>在三数之和中，为了避免找到重复解，每到一个新数时可以和前面数比较，如果一样直接跳过。这里在遍历<code>first,second,third</code>三个数时都可以跳过重复值，避免重复计算。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2></blockquote><details open><summary>python3</summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">threeSumClosest</span><span class="params">(self, nums, target)</span>:</span></span><br><span class="line">        nums.sort()</span><br><span class="line">        closest = sum(nums[:<span class="number">3</span>])</span><br><span class="line">        first = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> first &lt; len(nums) - <span class="number">2</span>:</span><br><span class="line">            second, third = first + <span class="number">1</span>, len(nums) - <span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> second &lt; third:</span><br><span class="line">                s = nums[first] + nums[second] + nums[third]</span><br><span class="line">                <span class="keyword">if</span> abs(s - target) &lt;= abs(closest - target):</span><br><span class="line">                    closest = s</span><br><span class="line">                    <span class="keyword">if</span> closest == target:</span><br><span class="line">                        <span class="keyword">return</span> target</span><br><span class="line">                <span class="keyword">if</span> s &gt; target:</span><br><span class="line">                    <span class="keyword">while</span> third &gt; second <span class="keyword">and</span> nums[third] == nums[third<span class="number">-1</span>]:</span><br><span class="line">                        third -= <span class="number">1</span></span><br><span class="line">                    third -= <span class="number">1</span></span><br><span class="line">                <span class="keyword">elif</span> s &lt; target:</span><br><span class="line">                    <span class="keyword">while</span> second &lt; third <span class="keyword">and</span> nums[second] == nums[second+<span class="number">1</span>]:</span><br><span class="line">                        second += <span class="number">1</span></span><br><span class="line">                    second += <span class="number">1</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">while</span> first &lt; len(nums) - <span class="number">2</span> <span class="keyword">and</span> nums[first] == nums[first+<span class="number">1</span>]:</span><br><span class="line">                first += <span class="number">1</span></span><br><span class="line">            first += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> closest</span><br></pre></td></tr></table></figure></details><details><summary>c++</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">threeSumClosest</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">        sort(nums.begin(), nums.end());</span><br><span class="line">        <span class="keyword">int</span> first = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> closest = nums[<span class="number">0</span>] + nums[<span class="number">1</span>] + nums[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">while</span> (first &lt; nums.size() - <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> second = first + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> third = nums.size() - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (second &lt; third) &#123;</span><br><span class="line">                <span class="keyword">int</span> s = nums[first] + nums[second] + nums[third];</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">abs</span>(s - target) &lt;= <span class="built_in">abs</span>(closest - target)) &#123;</span><br><span class="line">                    closest = s;</span><br><span class="line">                    <span class="keyword">if</span> (closest == target) <span class="keyword">return</span> target;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (s &gt; target) &#123;</span><br><span class="line">                    <span class="keyword">while</span>((third &gt; second) &amp;&amp; (nums[third] == nums[third<span class="number">-1</span>])) third--;</span><br><span class="line">                    third--;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(s &lt; target) &#123;</span><br><span class="line">                    <span class="keyword">while</span> ((second &lt; third) &amp;&amp; (nums[second] == nums[second + <span class="number">1</span>])) second++;;</span><br><span class="line">                    second++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> ((first &lt; nums.size() - <span class="number">2</span>) &amp;&amp; (nums[first + <span class="number">1</span>] == nums[first])) first++;</span><br><span class="line">            first++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> closest;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></details><details><summary>java</summary><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">threeSumClosest</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        <span class="keyword">int</span> first = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> closest = nums[<span class="number">0</span>] + nums[<span class="number">1</span>] + nums[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">while</span> (first &lt; nums.length - <span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> second = first + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> third = nums.length - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (second &lt; third)&#123;</span><br><span class="line">                <span class="keyword">int</span> s = nums[first] + nums[second] + nums[third];</span><br><span class="line">                <span class="keyword">if</span> (Math.abs(s - target) &lt;= Math.abs(closest - target))&#123;</span><br><span class="line">                    closest = s;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (closest == target) <span class="keyword">return</span> target;</span><br><span class="line">                <span class="keyword">if</span> (s &gt; target)&#123;</span><br><span class="line">                    <span class="keyword">while</span> ((third &gt; second) &amp;&amp; (nums[third] == nums[third-<span class="number">1</span>])) third--;</span><br><span class="line">                    third--;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (s &lt; target)&#123;</span><br><span class="line">                    <span class="keyword">while</span> ((second &lt; third) &amp;&amp; (nums[second] == nums[second+<span class="number">1</span>])) second++;</span><br><span class="line">                    second++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> ((first &lt; nums.length - <span class="number">2</span>) &amp;&amp; (nums[first] == nums[first+<span class="number">1</span>])) first++;</span><br><span class="line">            first++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> closest;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 数组 </tag>
            
            <tag> 双指针 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学科普一：平均数</title>
      <link href="/2021/03/12/%E6%95%B0%E5%AD%A6%E7%A7%91%E6%99%AE1/"/>
      <url>/2021/03/12/%E6%95%B0%E5%AD%A6%E7%A7%91%E6%99%AE1/</url>
      
        <content type="html"><![CDATA[<p>假设两个正数$a,b$，我们知道$\frac{a+b}{2}$称为算术平均数，$\sqrt{ab}$称为几何平均数，$\frac{2}{a^{-1}+b^{-1}}$称为调和平均数。对于任意$n$个正数也有同样的定义，观察到算术平均数为$\left(\frac{a^{1}+b^{1}}{2}\right)^1$，调和平均数为$\left(\frac{a^{-1}+b^{-1}}{2}\right)^{-1}$，可以猜想一类平均数的定义。</p><a id="more"></a><h4 id="定义1：-s-阶平均数"><a href="#定义1：-s-阶平均数" class="headerlink" title="定义1：$s$阶平均数"></a>定义1：$s$阶平均数</h4><blockquote><p>设$a_1,a_2,\cdots,a_n$是$n$个正数，定义</p><script type="math/tex; mode=display">    f(s) = \left\{         \begin{aligned}            & \left(\frac{a_1^s+a_2^s+\cdots+a_n^s}{n}\right)^{1/s} & \quad s \ne 0  \\            & \sqrt[n]{a_1a_2\cdots a_n} & \quad s = 0        \end{aligned}         \right.</script><p>称$f(s)$为这$n$个正数的$s$阶平均数。</p></blockquote><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>设$a_1,a_2,\cdots,a_n$是$n$个正数，则这$n$个数的$s$阶平均数$f(s)$是关于$s$在$(-\infty,+\infty)$上的连续函数。且</p><script type="math/tex; mode=display">    \begin{aligned}        \lim \limits_{s \to +\infty} f(s) = \max(a_1,a_2,\cdots,a_n) \\        \lim \limits_{s \to -\infty} f(s) = \min(a_1,a_2,\cdots,a_n)    \end{aligned}</script></blockquote><p>证：先证$f(s)$是连续函数。由于分段函数的两段都是初等函数，所以只需要证明$f(s)$在$s=0$处连续，即可。而</p><script type="math/tex; mode=display">    \begin{aligned}        \lim \limits_{s \to 0} \left(\frac{a_1^s+a_2^s+\cdots+a_n^s}{n}\right)^{1/s} & = \lim\limits_{s \to 0} e^{\frac{1}{s} \ln\left(\frac{a_1^s-1 + a_2^s - 1 + \cdots + a_n^s-1 + n}{n}\right)} \\        & = \lim\limits_{s \to 0} e^{\frac{1}{s} \ln \left(1 + \frac{a_1^s-1}{n} + \frac{a_2^s-1}{n} + \cdots + \frac{a_n^s-1}{n} \right)} \\        & = \lim\limits_{s \to 0} e^{\frac{1}{n} \left(\frac{a_1^s-1}{s} + \frac{a_2^s-1}{s} + \cdots + \frac{a_n^s-1}{s} \right)} \\        & = e^{\frac{1}{n} \ln(a_1a_2\cdots a_n)} = \sqrt[n]{a_1a_2\cdots a_n}    \end{aligned}</script><p>所以$f(s)$是连续的。<br/><br>再证后半段。不妨设$p = \max(a_1,a_2,\cdots,a_n)$，从而当$s &gt; 0$时，有</p><script type="math/tex; mode=display">    \left(\frac{p^s}{n}\right)^{1/s} \le \left(\frac{a_1^s+a_2^s+\cdots+a_n^s}{n}\right)^{1/s} \le \left(\frac{p^s+p^s+\cdots+p^s}{n}\right)^{1/s} = p</script><p>而</p><script type="math/tex; mode=display">    \lim \limits_{s \to +\infty} \left(\frac{p^s}{n}\right)^{1/s}  = p</script><p>所以</p><script type="math/tex; mode=display">    \lim \limits_{s \to +\infty} f(s) = p = \max(a_1,a_2,\cdots,a_n)</script><p>同样设$q = \min(a_1,a_2,\cdots,a_n)$，当$s &lt; 0$时，有</p><script type="math/tex; mode=display">    \left(\frac{q^s}{n}\right)^{1/s} \ge \left(\frac{a_1^s+a_2^s+\cdots+a_n^s}{n}\right)^{1/s} \ge \left(\frac{q^s+q^s+\cdots+q^s}{n}\right)^{1/s} = q</script><p>而</p><script type="math/tex; mode=display">    \lim \limits_{s \to -\infty} \left(\frac{q^s}{n}\right)^{1/s}  = q</script><p>所以</p><script type="math/tex; mode=display">    \lim \limits_{s \to -\infty} f(s) = q = \min(a_1,a_2,\cdots,a_n)</script><p>Q.E.D.</p><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>设$a_1,a_2,\cdots,a_n$是$n$个正数，则这$n$个数的$s$阶平均数$f(s)$是$(-\infty,+\infty)$上的递增函数。若$a_1,a_2,\cdots,a_n$不全相等，则$f(s)$是$(-\infty,+\infty)$上的严格递增函数。</p></blockquote><p>证：先设$0 &lt; \alpha &lt; \beta$，我们证明$f(\alpha) \le f(\beta)$，即</p><script type="math/tex; mode=display">    \left(\frac{a_1^\alpha+a_2^\alpha+\cdots+a_n^\alpha}{n} \right)^{1/\alpha} \le \left(\frac{a_1^\beta + a_2^\beta + \cdots+ a_n^\beta}{n}\right)^{1/\beta}</script><p>记$g(x) = x^m (x &gt; 0)$，则$g^\prime(x) = m x^{m-1}$，$g^{\prime\prime}(x) = m(m-1)x^{m-2}$，当$m &gt; 1$时，知$g(x)$是凸函数，从而由<a href="https://gamersover.github.io/2021/03/08/函数导数5/#定理7" target="_blank" rel="noopener">函数导数五的定理7</a>可知，有</p><script type="math/tex; mode=display">    g\left(\frac{x_1}{n} + \frac{x_2}{n} + \cdots + \frac{x_n}{n}\right) \le \frac{g(x_1)+g(x_2)+\cdots+g(x_n)}{n}</script><p>即</p><script type="math/tex; mode=display">    \left(\frac{x_1+x_2+\cdots+x_n}{n} \right)^m \le \frac{x_1^m + x_2^m + \cdots+ x_n^m}{n} \tag 1</script><p>令$x_i = a_i^\alpha, m = \beta / \alpha &gt; 1$，代入上式得</p><script type="math/tex; mode=display">    \left(\frac{a_1^\alpha+a_2^\alpha+\cdots+a_n^\alpha}{n} \right)^{\beta / \alpha} \le \frac{a_1^\beta + a_2^\beta + \cdots+ a_n^\beta}{n}</script><p>即</p><script type="math/tex; mode=display">    \left(\frac{a_1^\alpha+a_2^\alpha+\cdots+a_n^\alpha}{n} \right)^{1/\alpha} \le \left(\frac{a_1^\beta + a_2^\beta + \cdots+ a_n^\beta}{n}\right)^{1/\beta} \tag 2</script><p>再设$\alpha &lt; \beta &lt; 0$，我们证明$f(\alpha) &lt; f(\beta)$。由于$-\alpha &gt; -\beta &gt; 0$，这时设$n$个正数为$a_1^{-1},a_2^{-1},\cdots,a_n^{-1}$，并令$x_i = (a_i^{-1})^{-\beta}, m = (-\alpha) / (-\beta) &gt; 1$，代入(1)式得</p><script type="math/tex; mode=display">    \left(\frac{a_1^{\beta}+a_2^{\beta}+\cdots+a_n^{\beta}}{n} \right)^{-\alpha / -\beta} \le \frac{a_1^{\alpha} + a_2^{\alpha} + \cdots+ a_n^{\alpha}}{n}</script><p>即</p><script type="math/tex; mode=display">    \left(\frac{a_1^{\beta}+a_2^{\beta}+\cdots+a_n^{\beta}}{n} \right)^{-1 / \beta} \le \left(\frac{a_1^{\alpha} + a_2^{\alpha} + \cdots+ a_n^{\alpha}}{n} \right)^{-1 / \alpha}</script><p>进一步化简得</p><script type="math/tex; mode=display">    \left(\frac{a_1^{\alpha} + a_2^{\alpha} + \cdots+ a_n^{\alpha}}{n} \right)^{1 / \alpha} \le \left(\frac{a_1^{\beta}+a_2^{\beta}+\cdots+a_n^{\beta}}{n} \right)^{1 / \beta} \tag 3</script><p>最后证明$f(\alpha) &lt; f(0) &lt; f(\beta)$，其中$\alpha &lt; 0 &lt; \beta$。在(2)式中令$\alpha \to 0^+$，得$\sqrt[n]{a_1a_2\cdots a_n} \le f(\beta)$；在(3)式中令$\beta \to 0^-$，得$f(\alpha) &lt; \sqrt[n]{a_1a_2\cdots a_n}$。从而$f(s)$是$(-\infty,+\infty)$上的递增函数。<br/></p><p>而上面所有等式成立的充分必要条件是$a_1=a_2=\cdots=a_n$。所以当$a_1,a_2,\cdots,a_n$不全相等时，$f(s)$是$(-\infty,+\infty)$上的严格递增函数。</p><p>Q.E.D.</p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>从上面分析易知调和平均数是$-1$阶平均数，几何平均数是$0$阶平均数，算术平均数是$1$阶平均数；且有调和平均数$&lt;$几何平均数$&lt;$算术平均数。</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学科普 </tag>
            
            <tag> 平均数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数导数五：函数性质与导数的关系</title>
      <link href="/2021/03/08/%E5%87%BD%E6%95%B0%E5%AF%BC%E6%95%B05/"/>
      <url>/2021/03/08/%E5%87%BD%E6%95%B0%E5%AF%BC%E6%95%B05/</url>
      
        <content type="html"><![CDATA[<h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>设函数$f$在区间$[a,b]$上连续，在$(a,b)$上可导，那么$f$在$[a,b]$上递增（减）的充分必要条件是$f^\prime \ge 0 (\le 0)$在区间$(a,b)$上成立。</p></blockquote><a id="more"></a><p>证：必要性。设$f$在$[a,b]$上递增，任取一点$x \in (a,b)$，对能使$x + h \in (a,b)$的一切$h$，都有</p><script type="math/tex; mode=display">    \frac{f(x+h) - f(x)}{h} \ge 0</script><p>令$h \to 0$，得$f^\prime(x) \ge 0 (a &lt; x &lt; b)$。<br>类似地，当$f$在$[a,b]$上递减时，可以推出$f^\prime(x) \ge 0$对$x \in (a,b)$成立。</p><p>充分性。设在$(a,b)$上$f^\prime \ge 0$，对任何$x_1, x_2 \in [a,b]$且$x_1 &lt; x_2$，由Lagrange中值定理可知，</p><script type="math/tex; mode=display">    f(x_2) - f(x_1) = f^\prime(\xi) (x_2 - x_1)</script><p>其中$\xi \in (x_1,x_2) \in (a,b)$，由于$f^\prime(\xi) \ge 0$，从而$f(x_2) \ge f(x_1)$。<br>类似地，当在$(a,b)$上$f^\prime \le 0$时，对任何$x_1,x_2 \in [a,b]$且$x_1 &lt; x_2$，可以推出$f(x_1) \ge f(x_2)$。</p><p>Q.E.D.</p><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>设函数$f$在区间$[a,b]$上连续，在$(a,b)$上可导，如果$f^\prime &gt; 0 (&lt; 0)$在区间$(a,b)$上成立。那么$f$在$[a,b]$上严格递增（严格递减）的。</p></blockquote><p>证：证法与<a href="https://gamersover.github.io/2021/03/08/函数导数5/#定理1" target="_blank" rel="noopener">定理1</a>一样。</p><p>Q.E.D.</p><h4 id="定理3"><a href="#定理3" class="headerlink" title="定理3"></a>定理3</h4><blockquote><p>设函数$f$在区间$[a,b]$上连续，在$(a,b)$上可导，在区间$(a,b)$内，除了有限个点之外，$f^\prime &gt; 0 (&lt; 0)$成立。那么$f$在$[a,b]$上严格递增（严格递减）的。</p></blockquote><p>证。设除了点$x_1,x_2,\cdots,x_n \in (a,b)$外，$f^\prime &gt; 0$，这里$x_1 &lt; x_2 &lt; \cdots &lt; x_n$，$f$在区间$[a,x_1],[x_1,x_2],\cdots,[x_n,b]$上都是连续的，且$f^\prime &gt; 0$，因此在$[a,x_1],[x_1,x_2],\cdots,[x_n,b]$的每一个区间上都是严格递增的，因此在$[a,b]$上也是严格递增的。<br>类似地，递减也可证。</p><p>Q.E.D.</p><h4 id="定理4"><a href="#定理4" class="headerlink" title="定理4"></a>定理4</h4><blockquote><p>设函数$f$在区间$[a,b]$上连续，在$(a,b)$上可导，那么$f$在$[a,b]$上严格递增（严格递减）的充分必要条件是：<br/><br>（1）当$x \in (a,b)$时，$f^\prime \ge 0 (f^\prime \le 0)$；<br/><br>（2）在$(a,b)$的任何开子区间上，$f^\prime \ne 0$。</p></blockquote><p>证：必要性。由<a href="https://gamersover.github.io/2021/03/08/函数导数5/#定理1" target="_blank" rel="noopener">定理1</a>可知，（1）是必要的，假如（2）不正确，则存在一个被$(a,b)$包含的开区间，在其上$f^\prime = 0$，那么在这个开区间上$f$为常数，因此$f$在$[a,b]$上不是严格单调的，从而（2）必然正确。</p><p>充分性。设（1）（2）同时成立，由（1）和<a href="https://gamersover.github.io/2021/03/08/函数导数5/#定理1" target="_blank" rel="noopener">定理1</a>可知，$f$是单调的，若有$x_1,x_2 \in [a,b]$，其中$x_1 &lt; x_2$，使得$f(x_1) = f(x_2)$，那么对$x \in [x_1, x_2]$，有$f(x_1) = f(x) = f(x_2)$。从而对$x \in (x_1,x_2)$，有$f^\prime = 0$，这与（2）矛盾，从而$f$在$[a,b]$上严格单调。</p><p>Q.E.D.</p><h4 id="定理5"><a href="#定理5" class="headerlink" title="定理5"></a>定理5</h4><blockquote><p>设函数$f$在$[a,b]$上连续，$x_0 \in (a,b)$；<br/><br>（1）如果存在正数$\delta &gt; 0$，使得在$(x_0 - \delta, x_0)$上$f^\prime &gt; 0$，而在$(x_0, x_0 + \delta)$上$f^\prime &lt; 0$，那么$f(x_0)$是$f$的一个严格极大值，所谓严格极大值是指，当$0 &lt; |x - x_0| &lt; \delta$时，$f(x) &lt; f(x_0)$；<br/><br>（2）如果存在正数$\delta &gt; 0$，使得在$(x_0 - \delta, x_0)$上$f^\prime &lt; 0$，而在$(x_0, x_0 + \delta)$上$f^\prime &gt; 0$，那么$f(x_0)$是$f$的一个严格极小值，所谓严格极小值是指，当$0 &lt; |x - x_0| &lt; \delta$时，$f(x) &gt; f(x_0)$；</p></blockquote><p>证：这里只证（1），（2）是同样的证法。由<a href="https://gamersover.github.io/2021/03/08/函数导数5/#定理2" target="_blank" rel="noopener">定理2</a>可知，$f$在$[x_0-\delta, x_0]$上严格递增，所以当$x \in (x_0-\delta, x_0)$时，$f(x) &lt; f(x_0)$，而$f$在$[x_0, x_0+\delta]$上严格递减，所以当$x \in (x_0, x_0 + \delta)$时，$f(x) &lt; f(x_0)$，即$f(x_0)$是一个严格极大值。</p><p>Q.E.D.</p><h4 id="定理6"><a href="#定理6" class="headerlink" title="定理6"></a>定理6</h4><blockquote><p>设$f$在$[a,b]$上连续，$x_0 \in (a,b)$是$f$的一个驻点，进一步假设$f^{\prime\prime}(x_0)$存在，那么 <br/><br>（1）当$f^{\prime\prime} &lt; 0$时，$f(x_0)$是$f$的一个严格极大值； <br/><br>（2）当$f^{\prime\prime} &gt; 0$时，$f(x_0)$是$f$的一个严格极小值。</p></blockquote><p>证：这里只证（1），（2）是同样的证法。因为</p><script type="math/tex; mode=display">    f^{\prime\prime}(x_0) = \lim \limits_{x \to x_0} \frac{f^\prime(x) - f^\prime(x_0)}{x - x_0} = \lim\limits_{x \to x_0} \frac{f^\prime(x)}{x-x_0} < 0</script><p>从而存在一个$\delta &gt; 0$，使得当$0 &lt; |x - x_0| &lt; \delta$时，有</p><script type="math/tex; mode=display">    \frac{f^\prime(x)}{x - x_0} < 0</script><p>所以，当$x \in (x_0, x_0 + \delta)$时，$f^\prime(x) &lt; 0$；而当$x \in (x_0 - \delta, x_0)$时，$f^\prime(x) &gt; 0$，即$f(x_0)$是$f$的一个严格极大值。</p><p>Q.E.D.</p><h4 id="定义1：凸函数"><a href="#定义1：凸函数" class="headerlink" title="定义1：凸函数"></a>定义1：凸函数</h4><blockquote><p>设函数$f$在区间$I$上有定义，如果对任何$x_1,x_2 \in I$，$x_1\ne x_2$，以及任意的$\lambda_1,\lambda_2 &gt; 0$，且$\lambda_1 + \lambda_2 = 1$，都有</p><script type="math/tex; mode=display">    f(\lambda_1 x_1 + \lambda_2 x_2) \le \lambda_1 f(x_1) + \lambda_2 f(x_2)</script><p>则称$f$为$I$上的凸函数，如果上述不等式的不等号总成立，则称$f$为$I$上的严格凸函数。</p></blockquote><h4 id="定理7"><a href="#定理7" class="headerlink" title="定理7"></a>定理7</h4><blockquote><p>设$f$在区间$I$上是凸函数，则对任何的$x_1,x_2,\cdots,x_n \in I$，以及$\lambda_1,\lambda_2,\cdots,\lambda_n &gt; 0$，且$\lambda _1+\lambda _2+\cdots+\lambda_n = 1$，都有</p><script type="math/tex; mode=display">    f(\sum_{i=1}^n \lambda_i x_i) \le \sum_{i=1}^n \lambda_i f(x_i)</script><p>如果$f$是$I$上的严格凸函数，则当$x_1,x_2,\cdots,x_n$不全相等时，有</p><script type="math/tex; mode=display">    f(\sum_{i=1}^n \lambda_i x_i) < \sum_{i=1}^n \lambda_i f(x_i)</script></blockquote><p>证：使用数学归纳法。当$n=2$时，由凸函数定义知显然成立；设$n = k$时命题成立，现在证$n = k+1$时命题也成立。设$x_1,x_2,\cdots,x_{k+1} \in I$，$\lambda_1,\lambda_2,\cdots,\lambda_{k+1} &gt; 0$，并且$\lambda_1 + \lambda_2 + \cdots + \lambda_{k+1} = 1$，知</p><script type="math/tex; mode=display">    \lambda_1 + \lambda_2 + \cdots + \lambda_k = 1 - \lambda_{k+1} \Rightarrow \frac{\lambda_1}{1-\lambda_{k+1}} + \frac{\lambda_2}{1-\lambda_{k+1}} + \cdots + \frac{\lambda_k}{1-\lambda_{k+1}} = 1</script><p>令$u_i = \frac{\lambda_i}{1-\lambda_{k+1}} (i=1,2\cdots,k)$，从而有</p><script type="math/tex; mode=display">    \begin{aligned}        f(\sum_{i=1}^{k+1} \lambda_i x_i) & = f\left((1-\lambda_{k+1})\sum_{i=1}^k u_i x_i + \lambda_{k+1}x_{k+1}\right) \\        & \le (1-\lambda_{k+1}) f(\sum_{i=1}^k u_ix_i) + \lambda_{k+1} f(x_{k+1}) \\        & \le (1-\lambda_{k+1}) \sum_{i=1}^k u_i f(x_i) + \lambda_{k+1} f(x_{k+1}) \\        & = \sum_{i=1}^{k+1} \lambda_i f(x_i)    \end{aligned}</script><p>从而当$f$为$I$上的凸函数时，对任何$n \in \mathbb{N^{*}}$，不等式都成立。<br/><br>再设$f$是$I$上的严格凸函数，同样当$n=2$时，自然严格不等号成立。假设当$n=k$时，严格不等号成立。现设$x_1,x_2,\cdots,x_{k+1}$不全相等，有两种情况：<br/><br>（1）$x_1,x_2,\cdots,x_k$不全相等，则此时上述归纳法的最后一个不等号是严格的，<br/><br>（2）$x_1=x_2=\cdots=x_k \ne x_{k+1}$，则</p><script type="math/tex; mode=display">    \sum_{i=1}^k u_ix_i = x_1 \ne x_{k+1}</script><p>此时上述归纳法的第一个不等号是严格的。从而对任何$n \in \mathbb{N^*}$，最终不等式都是严格的。</p><p>Q.E.D.</p><h4 id="定理8：Jensen不等式"><a href="#定理8：Jensen不等式" class="headerlink" title="定理8：Jensen不等式"></a>定理8：Jensen不等式</h4><blockquote><p>设$f$在区间$I$上是凸函数，则对任何$x_1,x_2,\cdots,x_n \in I$，以及对任何的正数$\beta_1,\beta_2,\cdots,\beta_n$，有不等式</p><script type="math/tex; mode=display">    f(\sum_{i=1}^n \beta_i x_i / \sum_{i=1}^n \beta_n) \le \frac{\sum\limits_{i=1}^n \beta_i f(x_i)}{\sum\limits_{i=1}^n \beta_i}</script></blockquote><p>证：令</p><script type="math/tex; mode=display">    \lambda_i = \frac{\beta_i}{\sum\limits_{i=1}^n \beta_i} \quad (i=1,2,\cdots,n)</script><p>再由<a href="https://gamersover.github.io/2021/03/08/函数导数5/#定理7" target="_blank" rel="noopener">定理7</a>可证。</p><p>Q.E.D.</p><h4 id="定理9"><a href="#定理9" class="headerlink" title="定理9"></a>定理9</h4><blockquote><p>函数$f$在区间$I$是凸函数，当且仅当对任何$(x_1,x_2) \in I$及任何$x \in (x_1,x_2)$，有</p><script type="math/tex; mode=display">    \frac{f(x) - f(x_1)}{x - x_1} \le \frac{f(x_2) - f(x_1)}{x_2 - x_1} \le \frac{f(x_2) - f(x)}{x_2 - x}</script><p>若$f$是严格凸函数，当且仅当上述不等式是严格的。</p></blockquote><p>证：必要性。记</p><script type="math/tex; mode=display">    \lambda_1 = \frac{x_2 - x}{x_2 - x_1} \qquad \lambda_2 = \frac{x - x_1}{x_2 - x_1}</script><p>则有$\lambda_1 &gt; 0, \lambda_2 &gt; 0, \lambda_1 + \lambda_2 = 1$，且$x = \lambda_1 x_1 + \lambda_2 x_2$，<br>由凸函数的定义可知</p><script type="math/tex; mode=display">    \lambda_1 f(x) + \lambda_2 f(x) = f(x) = f(\lambda_1 x_1 + \lambda_2 x_2) \le \lambda_1 f(x_1) + \lambda_2 f(x_2)</script><p>可得</p><script type="math/tex; mode=display">    \lambda_1 (f(x) - f(x_1)) \le \lambda_2 (f(x_2) - f(x)) \Rightarrow \frac{f(x) - f(x_1)}{x - x_1} \le \frac{f(x_2) - f(x)}{x_2 - x}</script><p>又易证得：若$b&gt;0,d&gt;0,a/b \le c/d$，则有</p><script type="math/tex; mode=display">\frac{a}{b} \le \frac{a+c}{b+d} \le \frac{c}{d}</script><p>由以上性质，易得要证不等式成立，若$f$是严格凸函数，那么上述证明中得不等号都是严格的。</p><p>充分性。必要性的证明倒推回去即可证。</p><p>Q.E.D.</p><h4 id="定理10"><a href="#定理10" class="headerlink" title="定理10"></a>定理10</h4><blockquote><p>设$f$在$[a,b]$上连续，在$(a,b)$上可导，则$f$在$[a,b]$上为凸函数（严格凸函数）的充分必要条件是，$f^\prime$在$(a,b)$上递增（严格递增）。</p></blockquote><p>证：必要性。设$(x_1,x_2) \subset (a,b)$，由<a href="https://gamersover.github.io/2021/03/08/函数导数5/#定理9" target="_blank" rel="noopener">定理9</a>可知，当$x \in (x_1,x_2)$，有</p><script type="math/tex; mode=display">    \frac{f(x) - f(x_1)}{x - x_1} \le \frac{f(x_2) - f(x_1)}{x_2 - x_1} \le \frac{f(x_2) - f(x)}{x_2 - x}</script><p>左边不等式令$x \to x_1^+$，得</p><script type="math/tex; mode=display">    f^\prime(x_1) \le \frac{f(x_2) - f(x_1)}{x_2 - x_1} \tag 1</script><p>右边不等式令$x \to x_2^-$，得</p><script type="math/tex; mode=display">    \frac{f(x_2) - f(x_1)}{x_2 - x_1} \le f^\prime(x_2) \tag 2</script><p>从而有</p><script type="math/tex; mode=display">    f^\prime(x_1) \le f^\prime(x_2)</script><p>所以$f^\prime$是递增的。<br/><br>当$f$是严格凸函数时，我们取$x_1 &lt; x^<em> &lt; x_2$，由于$x_1 &lt; x^</em>$，从而由式(1)可知</p><script type="math/tex; mode=display">    f^\prime(x_1) \le \frac{f(x^*) - f(x_1)}{x^* - x_1}</script><p>又由于$x^* &lt; x_2$，从而有式(2)可知</p><script type="math/tex; mode=display">    \frac{f(x_2) - f(x^*)}{x_2 - x^*} \le f^\prime(x_2)</script><p>而再由<a href="https://gamersover.github.io/2021/03/08/函数导数5/#定理9" target="_blank" rel="noopener">定理9</a>中严格凸函数的结论有</p><script type="math/tex; mode=display">    \frac{f(x^*) - f(x_1)}{x^* - x_1}  < \frac{f(x_2) - f(x^*)}{x_2 - x^*}</script><p>从而得$f^\prime(x_1) &lt; f^\prime(x_2)$，即$f^\prime$是严格递增的。</p><p>充分性。设$f^\prime$在$(a,b)$上递增，对任何$x \in (x_1,x_2)$，有</p><script type="math/tex; mode=display">    \frac{f(x) - f(x_1)}{x - x_1} = f^\prime(\xi_1)  \qquad \frac{f(x_2) - f(x)}{x_2 - x} = f^\prime(\xi_2)</script><p>其中$\xi_1 \in (x_1, x), \xi_2 \in (x, x_2)$，可知$\xi_1 &lt; x &lt; \xi_2$，从而$f^\prime(\xi_1) \le f^\prime(\xi_2)$，即</p><script type="math/tex; mode=display">    \frac{f(x) - f(x_1)}{x - x_1} \le \frac{f(x_2) - f(x)}{x_2 - x}</script><p>当$f^\prime$严格递增时，上述不等式都是严格的，即得证。</p><p>Q.E.D.</p><h4 id="定理11"><a href="#定理11" class="headerlink" title="定理11"></a>定理11</h4><blockquote><p>设$f$在$[a,b]$上连续，在$(a,b)$上有二阶导数，则$f$在$[a,b]$上为凸函数的充分必要条件是，$f^{\prime\prime} \ge 0$在$(a,b)$上成立；而$f$在$[a,b]$上为严格凸函数的充分必要条件是，$f^{\prime\prime} \ge 0$在$(a,b)$上成立，且在$(a,b)$的任何开区间的子区间内$f^{\prime\prime}$不恒等于$0$。</p></blockquote><p>证：结合<a href="https://gamersover.github.io/2021/03/08/函数导数5/#定理1" target="_blank" rel="noopener">定理1</a>和<a href="https://gamersover.github.io/2021/03/08/函数导数5/#定理10" target="_blank" rel="noopener">定理10</a>易证得前半部分，结合<a href="https://gamersover.github.io/2021/03/08/函数导数5/#定理4" target="_blank" rel="noopener">定理4</a>和<a href="https://gamersover.github.io/2021/03/08/函数导数5/#定理10" target="_blank" rel="noopener">定理10</a>易证得后半部分。</p><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数导数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数导数四：L’Hospital法则</title>
      <link href="/2021/02/22/%E5%87%BD%E6%95%B0%E5%AF%BC%E6%95%B04/"/>
      <url>/2021/02/22/%E5%87%BD%E6%95%B0%E5%AF%BC%E6%95%B04/</url>
      
        <content type="html"><![CDATA[<h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>设函数$f,g$在$(a,b)$上可导，并且$g(x) \ne 0$对$x \in (a,b)$成立。又设</p><script type="math/tex; mode=display">    \lim \limits_{x \to a^+} f(x) = \lim \limits_{x \to a^+} g(x) = 0</script><p>如果极限</p><script type="math/tex; mode=display">    \lim \limits_{x \to a^+} \frac{f^\prime(x)}{g^\prime(x)}</script><p>存在(或为$\infty$)，那么便有</p><script type="math/tex; mode=display">    \lim \limits_{x \to a^+} \frac{f(x)}{g(x)} = \lim \limits_{x \to a^+} \frac{f^\prime(x)}{g^\prime(x)}</script></blockquote><a id="more"></a><p>证：补充定义$f(a) = g(a) = 0$，从而$f,g$在$[a,b)$上连续，利用Cauchy中值定理，对$x \in (a,b)$，有</p><script type="math/tex; mode=display">    \frac{f(x)}{g(x)} = \frac{f(x) - f(a)}{g(x) - g(a)} = \frac{f^\prime(\xi)}{g^\prime(\xi)}</script><p>这里$a &lt; \xi &lt; x$，所以当$x \to a^+$时，有$\xi \to a^+$，从而</p><script type="math/tex; mode=display">    \lim\limits_{x \to a^+} \frac{f(x)}{g(x)} = \lim\limits_{\xi \to a^+} \frac{f^\prime(\xi)}{g^\prime(\xi)} = \lim\limits_{x \to a^+} \frac{f^\prime(x)}{g^\prime(x)}</script><p>Q.E.D.</p><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>设函数$f,g$在区间$(a,+\infty)$上可导，且$g(x) \ne 0$对$x \in (a, +\infty)$成立，并且</p><script type="math/tex; mode=display">    \lim\limits_{x \to +\infty} f(x) = \lim\limits_{x \to +\infty} g(x) = 0</script><p>那么当$\lim \limits_{x \to +\infty} \frac{f^\prime(x)}{g^\prime(x)}$存在（或为$\infty$）时，有</p><script type="math/tex; mode=display">    \lim \limits_{x \to +\infty} \frac{f(x)}{g(x)} = \lim \limits_{x \to +\infty} \frac{f^\prime(x)}{g^\prime(x)}</script></blockquote><p>证：令$x = \frac{1}{t}$，则当$x \to +\infty$相当于$t \to 0^+$，这时，我们有</p><script type="math/tex; mode=display">    \lim\limits_{t \to 0^+} f\left(\frac{1}{t}\right) = \lim\limits_{t \to 0^+} g\left(\frac{1}{t}\right) = 0</script><p>由定理1可知</p><script type="math/tex; mode=display">\begin{aligned}    \lim\limits_{x \to +\infty} \frac{f(x)}{g(x)} = \lim\limits_{t \to 0^+} \frac{f\left(\frac{1}{t}\right)}{g\left(\frac{1}{t}\right)} = \frac{f^\prime\left(\frac{1}{t}\right)\left(-\frac{1}{t^2}\right)}{g^\prime\left(\frac{1}{t}\right)\left(-\frac{1}{t^2}\right)} \\ = \lim\limits_{t \to 0^+} \frac{f^\prime\left(\frac{1}{t}\right)}{g^\prime\left(\frac{1}{t}\right)} = \lim\limits_{x \to +\infty} \frac{f^\prime(x)}{g^\prime(x)}\end{aligned}</script><p>Q.E.D.</p><h4 id="定理3"><a href="#定理3" class="headerlink" title="定理3"></a>定理3</h4><blockquote><p>设函数$f,g$在$(a,b)$上可导，$g(x) \ne 0$，且</p><script type="math/tex; mode=display">    \lim\limits_{x \to a^+} g(x) = \infty</script><p>如果极限$\lim \limits_{x \to a^+} \frac{f^\prime(x)}{g^\prime(x)}$存在（或为$\infty$），那么</p><script type="math/tex; mode=display">    \lim \limits_{x \to a^+} \frac{f(x)}{g(x)} = \lim \limits_{x \to a^+} \frac{f^\prime(x)}{g^\prime(x)}</script></blockquote><p>证：令</p><script type="math/tex; mode=display">    l = \lim\limits_{x \to a^+} \frac{g^\prime(x)}{g^\prime(x)}</script><p>不妨设$l$为有限数，则对任意的$\varepsilon &gt; 0$，存在$\delta &gt; 0$，使得当$x \in (a, a+\delta)$时，有</p><script type="math/tex; mode=display">    l - \varepsilon < \frac{f^\prime(x)}{g^\prime(x)} < l + \varepsilon</script><p>从而对$(x,c) \in (a, a+\delta)$，由Cauchy中值定理可知，必存在$\xi \in (x,c)$使得</p><script type="math/tex; mode=display">    l - \varepsilon < \frac{f(x) - f(c)}{g(x) - g(c)} = \frac{f^\prime(\xi)}{g^\prime(\xi)} < l + \varepsilon</script><p>又因为</p><script type="math/tex; mode=display">    \frac{f(x)-f(c)}{g(x) - g(c)} = \left( \frac{f(x)}{g(x)} - \frac{f(c)}{g(x)}\right) \left(1 - \frac{g(c)}{g(x)}\right)^{-1}</script><p>固定$c$，对$x \to a^+$取上极限，得</p><script type="math/tex; mode=display">    \limsup_{x \to a^+} \frac{f(x)}{g(x)} \le l + \varepsilon</script><p>再令$\varepsilon \to 0$，得</p><script type="math/tex; mode=display">    \limsup_{x \to a^+} \frac{f(x)}{g(x)} \le l</script><p>利用同样得方式，可得</p><script type="math/tex; mode=display">    \liminf_{x \to a^+} \frac{f(x)}{g(x)} \ge l</script><p>从而有</p><script type="math/tex; mode=display">    \lim\limits_{x \to a^+} \frac{f(x)}{g(x)} = l</script><p>当$l$为$-\infty$或$+\infty$也可使用类似得方法证明。</p><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数导数 </tag>
            
            <tag> 洛必达法则 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学试题一：初中篇</title>
      <link href="/2021/02/20/%E6%95%B0%E5%AD%A6%E8%AF%95%E9%A2%981/"/>
      <url>/2021/02/20/%E6%95%B0%E5%AD%A6%E8%AF%95%E9%A2%981/</url>
      
        <content type="html"><![CDATA[<h4 id="几何题"><a href="#几何题" class="headerlink" title="几何题"></a>几何题</h4><p>$1.$ 在$\triangle ABC$中，$AB=AC$，点$D$在线段$BC$上，且$\angle BAD = 20^\circ$，点$E$在线段$AC$上，且$AE = AD$，求$\angle CDE$。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.3m0ztdhm7mo0.png" width="20%"><br><a id="more"></a></p><p>$2.$ 在$\triangle ABC$中，点$D,E$分别是$AC,BC$的中点，点$F$在线段$AB$上，且$BF=\frac{1}{3}AB$，$BD$与$CF$相交于点$G$，连接$EG$； <br/><br>（1）证：$EG \parallel AC$。 <br/><br>（2）求$\frac{S_{\triangle BFG}}{S_{\triangle BEG}}$。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.3yab6h8om400.png" width="25%"></p><p>$3.$ 在$\triangle ABC$中，$\angle BAC$的角平分线$AD$交$BC$于点$D$，点$E$是$BC$的中点，过点$E$作$EG \parallel AD$交$AB$于点$F$，交$CA$的延长线于点$G$。证：$BF = CG$。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.5624mi9lzn40.png" width="25%"></p><p>$4.$ 在$Rt\triangle ABC$中，$\angle ACB = 90^\circ$，点$D$在$AB$上，且$CD \perp AB$，$AE$平分$\angle BAC$交$CD$于点$K$，交$BC$于点$E$，$F$是$BE$上的点，且$BF=CE$，证：$FK \parallel AB$。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.1znoa8xpzv28.png" width="25%"></p><p>$5.$ $EFGH$是正方形$ABCD$的内接四边形，其中点$E,F,G,H$分别在线段$AB,BC,CD,DA$中，$\angle BEG,\angle CFH$都是锐角，已知$EG=3,FH=4$，四边形$EFGH$的面积为$5$，求正方形$ABCD$的面积。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.4oasv01zcqw0.png" width="25%"></p><p>$6.$ 平行四边形$ABCD$中，$BC=2AB$，$M$是$AD$的中点，点$E$在$AB$上，且$CE \perp AB$，求$\angle DME : \angle AEM$。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.6va1qkqldsk0.png" width="30%"></p><p>$7.$ 矩形$ABCD$中，$AB=a,BC=b$，点$E,F$分别在$AB,BC$上，定义$S_1=S_{\triangle DAE},S_2=S_{\triangle CDF},S_3=S_{\triangle BEF},S_4=S_{\triangle DEF}$，如果$S_1=S_2=\frac{1}{2} (S_3 + S_4)$，求$S_4$（用$a,b$表示）。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.2f4ooc66bjk0.png" width="25%"></p><p>$8.$ 平行四边形$ABCD$中，$M$是$BC$的中点，且$AM=9,BD=12,AD=10$，求平行四边形$ABCD$的面积。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/No.8.png" width="25%"></p><p>$9.$ 平行四边形$ABCD$中，$AB=5,AD=8$，$\angle BAD,\angle ADC$的角平分线分别交$BC$于点$E,F$，求$EF$。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/截屏2021-11-16-下午1.05.36.4k5j37rkpkm0.png" width="30%"></p><p>$10.$ $\triangle ABC$是$\bigodot O$的内接三角形，且$AC=BC$，点$D$在$\bigodot O$上，延长$DA$至点$E$，使$CE=CD$；<br/><br>（1）证：$AE=BD$。 <br/><br>（2）若$AC \perp BC$，证：$AD+BD = \sqrt 2 CD$。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/截屏2021-11-16-下午1.39.17.5mu0amvppwg0.png" width="25%"></p><p>$11.$ 在三角形$ABC$中，点$O$是$AC$上的一个动点，过点$O$作直线$MN \parallel BC$，设$MN$交$\triangle BCA$的角平分线于点$E$，交$\triangle BCA$的外角平行线于点$F$；<br/><br>（1）证：$OE=OF$。<br/><br>（2）点$O$在何处时，四边形$AECF$是矩形？<br/><br>（3）若$AC$上存在点$O$使四边形$AECF$是正方形，且$\frac{AE}{BC} = \frac{\sqrt 6}{2} $，求$\angle B$的大小。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/截屏2021-11-16-下午1.57.58.46n7smzyjp00.png" width="30%"></p><p>$12.$ 三角形$ABC$中，$AB=5,AC=3$，$D$为$BC$的中点，$AD=2$，求$BC$的长。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.41jnicx25vo.png" width="40%"></p><p>$13.$ $Rt\triangle ABC$中，$\angle C = 90^\circ$，点$M$是$BC$的中点，点$D$在$AB$上，$MD \perp AB$，证：$AC^2 + BD^2 = AD^2$。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.6w6n19d0ayo0.png" width="30%"></p><p>$14.$ 在$\triangle ABC$中，$AB=AC$，点$P$是$BC$上一点，证：$PA^2 + PB\cdot PC = AB^2$。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.4gb6s2x5av00.png" width="20%"></p><p>$15.$ 点$P$是$\triangle ABC$内一点，$PD \perp AB$于点$D$，$PE \perp BC$于点$E$，$PF \perp AC$于点$F$，证：$AD^2 + BE^2 + CF^2 = AF^2 + BD^2 + CE^2$。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.4xk3omzsyuk0.png" width="22%"></p><p>$16.$ 在$\triangle ABC$中，$BD \perp AC$于点$D$，$CE \perp AB$于点$E$，点$F$在$BD$上，且$BF=AC$，点$G$在$CE$的延长线上，且$CG = AB$，证：$AG \perp AF$。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.16zyvh2in0u8.png" width="25%"></p><p>$17.$ 在等腰$Rt \triangle ABC$中，$\angle A = 90^\circ$，$\angle ABC$的角平分线$BD$交$AC$于点$D$，点$E$在$BC$上，且$\angle CDE = 45^\circ$，连接$AE$，证：$AE \perp BD$。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.4qnvhgvls6q0.png" width="30%"></p><p>$18.$ 点$E$为平行四边形$ABCD$的边$BC$上一动点，$DE$交直线$AB$于点$F$，连接$AE,CF$；<br/><br>（1）$\triangle ABE$与$\triangle CEF$的面积有何关系？ <br/><br>（2）若$E$在$CB$的延长线上，（1）的结论依然成立吗？</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.3k8ehmsk8s40.png" width="60%"></p><p>$19.$ $\triangle ABC$中，$AB=5,AC=11$，$\triangle BAC$的角平分线$AD$交$BC$于点$D$，点$E$为$BC$的中点，过点$E$作$EF \parallel AD$交$AC$于点$F$，求$CF$的长。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.3524gyskygc0.png" width="35%"></p><p>$20.$ 在$\triangle ABC$中，点$E$在$AB$上，$AE:EB=1:3$，点$D$在$BC$上，$BD:DC=2:1$，$AD$与$CE$相交于点$F$，则$\frac{EF}{FC} + \frac{AF}{FD}$的值为？</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.42x3wpnk5tw0.png" width="20%"></p><p>$21.$ 在$\triangle ABC$中，$AB &gt; AC$，$AD$平分$\angle BAC$且交$BC$于点$D$，$EF \perp AD$交$AB$于点$E$，交$AC$于点$F$，交$AD$于点$G$，交$BC$的延长线于点$M$，证：$\angle M = \frac{1}{2} (\angle ACB - \angle B)$。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.roypk736hnk.png" width="30%"></p><p>$22.$ 在$\triangle ABC$中，$AD$是$\angle BAC$的角平分线且交$BC$于点$D$，若$AB + BD = 25, AC - CD = 4$，则$AD$为多少？</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.1h14ukokk8kg.png" width="25%"></p><p>$23.$ 如图，在$\triangle ABC$中，$DE \parallel FG \parallel BC$，$GI \parallel EF \parallel AB$，若$S_{\triangle ADE} = 20, S_{\triangle EFG} = 45, S_{\triangle GIC} = 80$，则$S_{\triangle ABC}$是多少？</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.j0fthnbfyds.png" width="25%"></p><p>$24.$ 在梯形$ABCD$中，$AD \parallel BC$，$AC \perp BD$，已知$AD:BC=3:4$，则$BD:AC$的值为？</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.7c4vqzqi4s00.png" width="25%"></p><p>$25.$ 如图，六边形$ABCDEF$由$6$个全等的正方形组成，正方形边长为$1$，过点$A$的一条直线分别与$ED,CD$交于$M,N$，若这个六边形在$MN$两侧的部分面积相等，则$EM$的长度是？</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.2uagyymv2js0.png" width="25%"></p><p>$26.$ 正方形$ABCD$的边$AB=12$，点$E$在$CD$上，且$DE=5$，点$M$在$AE$上，且$EM=5$，过点$M$的线段$PQ \perp AE$分别交$AD,BC$于点$P,Q$，则$PM:MQ$为？</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.1zk14p6fh4io.png" width="20%"></p><p>$27.$ $\triangle ABC$中，$AD$是$BC$边上的中线，点$F$在$AD$上，且$AF:FD=1:5$，连接$CF$并延交$AB$于点$E$，则$AE:EB$为？</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.5nqei4ccgk80.png" width="25%"></p><p>$28.$ 在梯形$ABCD$中，$AD \parallel BC$，$EH \parallel BC$分别交$AB,BD,AC,CD$于点$E,F,G,H$，且$BC=a,AD=b (a &gt; b)$，$AE:EB=3:2$，则$FG$为？</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.4m5lt9o5llw0.png" width="25%"></p><p>$29.$ 设$P,M,N$分别是$\triangle ABC$的边$BC,CA,AB$上的点，且$AP,BM,CN$三线共点，证$\frac{AN}{NB} \cdot \frac{BP}{CP} = \frac{AM}{MC}$。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.6afk041ri8k0.png" width="25%"></p><p>$30.$ 已知$M,N$为$\triangle ABC$的边$BC$上的两点，且满足$BM=MN=NC$，一条平行于$AC$的直线分别交$AB,AM$和$AN$的延长线于点$D,E,F$，证$EF=3DE$。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.6b4yjboq9kc0.png" width="25%"></p><p>$31.$ 已知$\triangle ABC$和$\triangle A_1B_1C_1$均为正三角形，$BC$和$B_1C_1$的中点均为$D$，证$AA_1 \perp CC_1$。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.69nse9xmwjw0.png" width="25%"></p><p>$32.$ 如图，在$\triangle ABC$内部选取一点$P$，过点$P$作三条分别与$\triangle ABC$的三边平行的直线，这样所得的三角形$t_1,t_2,t_3$的面积分别为$4, 9, 49$，求$S_{\triangle ABC}$。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.5jhl4evm4f80.png" width="28%"></p><p>$33.$ 点$E$是四边形$ABCD$的对角线$BD$上一点，且$\angle BAC=\angle BDC=\angle DAE$，<br /><br>（1）证：$BE \cdot AD = CD \cdot AE$； <br/><br>（2）猜想$\frac{BC}{DE}$可能等于哪两条线段之比？注：只需写出一组比？并证明你的猜想。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.1gauevq1lz0g.png" width="20%"></p><p>$34.$ 在$\triangle ABC$中，$\angle BAC = 120^\circ$，$AD \perp BC$并交$BC$于点$D$，且$AB+BD=DC$，则$\angle C=$？</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.6vwlh46f4700.png" width="35%"></p><p>$35.$ $BM$和$CM$分别是$\triangle ABC$的内角$ABC$和外角$ACD$的角平分线，$ME \parallel BC$交$AB$于点$E$，交$AC$于点$F$，证$EF = BE - CF$。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.gtyou5lzc0w.png" width="30%"></p><p>$36.$ 在等腰$\triangle ABC$中，$AB=AC$，点$D,E$在线段$BC$上，且$BD=DE=EC$，证$\angle BAD &lt; \angle DAE$。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.5xgfxcyceb00.png" width="25%"></p><p>$37.$ 如图，已知$BE$是$\angle ABD$的角平分线，$CF$是$\angle ACD$的角平分线，$BE$与$CF$交于点$G$，若$\angle BDC=140^\circ,\angle BGC=110^\circ$，则$\angle A=$？</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.1ta94gpijew0.png" width="25%"></p><p>$38.$ 已知$\angle xOy = 90^\circ$，点$A,B$分别在射线$Ox,Oy$上移动，$BE$是$\angle ABy$的角平分线，$BE$的反向延长线与$\angle OAB$的角平分线交于点$C$。试问$\angle ACB$的大小是否变化，如果保持不变，请证明；如果变化，请求出变化范围。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.5oz095olj500.png" width="30%"></p><p>$39.$ 点$D,F$分别是$\triangle ABC$的边$AB,AC$上的点，且$AD:DB=CF:FA=2:3$，$DF$延长线交$BC$的延长线于点$E$，则$EF:FD=$？</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.6aev6uj85ns0.png" width="25%"></p><p>$40.$ 已知矩形$ABCD$的边长$AB=2,BC=3$，点$P$是$AD$边上的一动点，$Q$是$BC$边上的任意一点，连接$AQ,DQ$，过点$P$作$PE \parallel DQ$交$AQ$于点$E$，作$PF \parallel AQ$交$DQ$于点$F$，<br /><br>（1）设$AP$的长为$x$，试求$S_{\triangle PEF}$关于$x$的函数式，并求当$P$在何处时，$S_{\triangle PEF}$取最大值，最大值是多少？<br/><br>（2）当$Q$在何处时，$\triangle ADQ$的周长最小？</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.6frnpycvung0.png" width="25%"></p><p>$41.$ 在矩形$ABCD$中，点$E$为$AD$的中点，点$F$在$AB$上且$EF \perp EC$，连接$FC$，$(AB &gt; AE)$， <br/><br>（1）$\triangle AEF \sim \triangle ECF$成立吗？若成立，请证明；否则，请说明理由。 <br/><br>（2）设$\frac{AB}{BC}=k$，是否存在这样的$k$使得$\triangle AEF \sim \triangle BCF$？若存在，证明之并求出$k$；否则，请说明理由。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.4zgtvz42r680.png" width="20%"></p><p>$42.$ 点$M$为$\triangle ABC$的边$BC$的中点，截线$PQ$分别交$AB,AM,AC$于点$P,N,Q$，求证$\frac{AB}{AP} + \frac{AC}{AQ} = 2\frac{AM}{AN}$。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.7i1yhmm04sw0.png" width="25%"></p><p>$43.$ 点$M$为正方形$ABCD$的边$AB$上一点，$BP \perp CM$于点$P$，$N$为$BC$上一点，且$BM=BN$，求证$PD \perp PN$。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.319r20rcagu0.png" width="25%"></p><p>$44.$ 四边形$ABCD$中，$AC,BD$相交于点$O$，过点$O$作$AB$的平行线分别交$AD,BC$以及$DC$的延长线于点$E,F,G$，求证$GO^2 = GE\cdot GF$。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.xtthc2o9eu8.png" width="30%"></p><p>$45. $ 在平行四边形$ABCD$中，$O_1,O_2,O_3$为$BD$上三点，且$BO_1=O_1O_2=O_2O_3=O_3D$，连接$AO_1$并延长交$BC$于点$E$，连接$EO_3$并延长交$AD$于点$F$，则$AD:FD=?$</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.560r00h9b0k0.webp" width="30%"></p><p>$46. $ 在等腰直角三角形$BAC$中，$\angle A = 90^\circ$, $AB=1$，$E$为$AC$的中点，点$F$在$BC$上，且$EF \perp BE$，求$\triangle CEF$的面积。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.39wwblp9b6s0.webp" width="30%"></p><p>$47. $ 在梯形$ABCD$中，$AD \parallel BC$，$AB=DC=3$，点$P$是$BC$上一点，$PE \parallel AB$ 交$AC$与点$E$，$PF \parallel CD$交$BD$于点$F$，令$m=PE,n=PF,x=m+n$，那么当$P$在$BC$上移动时，$x$的值是否变化，如果变化，求出$x$的取值范围，否则，求出$x$的值，并说明理由。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.4ilp8rhcss80.webp" width="30%"></p><p>$48. $ 设点$P$是等边三角形$ABC$的边$BC$上任一点，连接$AP$并作$AP$的中垂线交$AB$与$AC$分别于点$M,N$，求证$BP\cdot PC=BM\cdot CN$。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.5yxwp9vkaxo0.webp" width="25%"></p><p>$49. $ 正方形$GEFD$内接于$\triangle ABC$，若$\angle C=90^\circ$，$AC=b,AB=c,BC=a$，则$AD:DE:EB=?$</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.2rfrug3rl240.webp" width="32%"></p><p>$50. $ $\triangle ABC$中，$E,D$是边$BC$上两点，若$AD=AE$，$\angle BAD = \angle C$，$AC=6$，$CE=4$，则$BE=?$</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.5w819kyc0eo0.webp" width="30%"></p><p>$51. $ $\triangle ABC$中，$F$是$AC$的中点，$DE$是$BC$的三等分点，$BF$分别交$AD,AE$于点$G,H$，则$BG:GH:HF=?$</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.2lcovn91y680.webp" width="35%"></p><p>$52. $ $\triangle ABC$中，点$D,E,F$分别在边$AB,BC,CA$上，已知$S_{\triangle ABC} = 18, AD=4, BD=5, S_{\triangle ABE}=S_{DBEF}$，则$S_{\triangle ABE}=?$</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.15nmfbydi5eo.webp" width="30%"></p><p>$53. $ 在四边形$ABCD$中，$AB=CD$，但不平行，点$M,N$分别是$AD,BC$的中点，$NM$的延长线与$BA,CD$的延长线分别交于点$P,Q$，求证$\angle APM = \angle DQM$。</p><p><img src="https://cdn.jsdelivr.net/gh/gamersover/hexo_blog_assets@main/数学试题1/xxx.75mtzlzqzgg0.webp" width="20%"></p><h4 id="代数题"><a href="#代数题" class="headerlink" title="代数题"></a>代数题</h4><ol><li><p>当关于$x$的方程$rx^2 + (r+2)^2x + r - 1 = 0$有且仅有整数根时，求$r$的值。</p></li><li><p>已知$\frac{1}{4}(b-c)^2 = (a-b)(c-a)$，且$a \ne 0$，则$\frac{b+c}{a}=$？</p></li><li><p>已知$x + y + z=0$，则$\frac{1}{y^2+z^2-x^2} + \frac{1}{z^2+x^2-y^2} + \frac{1}{x^2+y^2-z^2}=$？</p></li><li><p>已知$\frac{x}{m} + \frac{y}{n} + \frac{z}{p} = 1$，$\frac{m}{x} + \frac{n}{y} + \frac{p}{z} = 0$，则$\frac{x^2}{m^2} + \frac{y^2}{n^2} + \frac{z^2}{p^2}=$？</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数导数三：极值定义与微分中值定理</title>
      <link href="/2021/02/01/%E5%87%BD%E6%95%B0%E5%AF%BC%E6%95%B03/"/>
      <url>/2021/02/01/%E5%87%BD%E6%95%B0%E5%AF%BC%E6%95%B03/</url>
      
        <content type="html"><![CDATA[<h4 id="定义1：极值"><a href="#定义1：极值" class="headerlink" title="定义1：极值"></a>定义1：极值</h4><blockquote><p>设函数$f: (a,b) \to \mathbb{R}$，如果对点$x_0 \in (a, b)$，存在$\delta &gt; 0$，使得$\Delta = (x_0 - \delta, x_0 + \delta) \subset (a,b)$，且当$x \in \Delta$时，有$f(x_0) \ge f(x)$，则称$f(x_0)$是$f$在$(a,b)$上的极大值，$x_0$称为极大值点。类似地，可以定义$f$在$(a,b)$上的极小值和极小值点。极小值和极大值统称为极值，而极小值点和极大值点统称为极值点。</p></blockquote><a id="more"></a><h4 id="定理1：Fermat"><a href="#定理1：Fermat" class="headerlink" title="定理1：Fermat"></a>定理1：Fermat</h4><blockquote><p>若函数$f$在其极值点$x_0 \in (a,b)$处可导，则必有$f^\prime(x) = 0$。</p></blockquote><p>证：不妨设$f(x_0)$时极大值，由极大值点的定义可知，存在$\delta &gt; 0$，使得当$x \in (x_0 - \delta, x_0 + \delta)$，有$f(x_0) &gt; f(x)$。从而，当$x \in (x_0 - \delta, x_0)$时，有</p><script type="math/tex; mode=display">    \frac{f(x) - f(x_0)}{x - x_0} \ge 0</script><p>而当$x \in (x_0, x_0+\delta)$，又有</p><script type="math/tex; mode=display">    \frac{f(x) - f(x_0)}{x - x_0} \le 0</script><p>由于$f^\prime(x)$存在，因此$f_-^{\prime}(x)$和$f_+^{\prime}(x)$都存在，且相等。从而在以上两个不等式中分别令$x \to x_0^-, x \to x_0^+$，得</p><script type="math/tex; mode=display">    f_-^{\prime}(x_0) \ge 0 \qquad f_+^{\prime}(x) \le 0</script><p>因此必有$f^\prime(x) = 0$。</p><p>Q.E.D.</p><h4 id="定义2：驻点"><a href="#定义2：驻点" class="headerlink" title="定义2：驻点"></a>定义2：驻点</h4><blockquote><p>满足$x_0 \in (a,b)$且$f^\prime(x_0) = 0$的点$x_0$称为函数$f$的一个驻点。</p></blockquote><h4 id="定理2：Rolle"><a href="#定理2：Rolle" class="headerlink" title="定理2：Rolle"></a>定理2：Rolle</h4><blockquote><p>设函数$f$在$[a,b]$上连续，在$(a,b)$内可导，且$f(a) = f(b)$，那么存在一点$\xi \in (a,b)$，使得$f^\prime(\xi) = 0$。</p></blockquote><p>证：闭区间$[a,b]$上的连续函数$f$取到最小值和最大值分别记为$m$ 和 $M$。如果$m = M$，那么$f$时常值函数，这时$f^\prime = 0$，因此$(a,b)$上任意一点都可为所求的点。若$M &gt; m$，由于$f(a) = f(b)$，则$m, M$至少有一个时$f$在内点$\xi \in (a,b)$上所取得的。这时$\xi$为一个极值点，由<a href="函数导数3/#定理1：Fermat">定理1</a>可知$f^\prime(\xi) = 0$。</p><p>Q.E.D.</p><h4 id="定理3"><a href="#定理3" class="headerlink" title="定理3"></a>定理3</h4><blockquote><p>设函数$f$与$\lambda$在$[a,b]$上连续，在$(a,b)$内可导，且$\lambda(a) = 1,\lambda(b) = 0$，则必存在一点$\xi \in (a,b)$使得</p><script type="math/tex; mode=display">    f^\prime(\xi) = \lambda^\prime(\xi)(f(a) - f(b))</script></blockquote><p>证：构造函数</p><script type="math/tex; mode=display">    \varphi(x) = f(x) - (\lambda(x)f(a) + (1 - \lambda(x))f(b))</script><p>可知$\varphi(a) = \varphi(b) = 0$。因此函数$\varphi$满足Rolle定理条件，从而存在一点$\xi \in (a,b)$使得$\varphi^{\prime}(\xi) = 0$，由于</p><script type="math/tex; mode=display">    \varphi^\prime(x) = f^\prime(x) - \lambda^\prime(x)(f(a) - f(b))</script><p>将$\xi$代入上式，得</p><script type="math/tex; mode=display">    f^\prime(\xi) = \lambda^\prime(\xi)(f(a) - f(b))</script><p>Q.E.D.</p><h4 id="定理4：Lagrange"><a href="#定理4：Lagrange" class="headerlink" title="定理4：Lagrange"></a>定理4：Lagrange</h4><blockquote><p>设函数$f$在$[a,b]$上连续，在$(a,b)$内可导，则存在$\xi \in (a,b)$使得</p><script type="math/tex; mode=display">    \frac{f(a) - f(b)}{a - b} = f^\prime(\xi)</script></blockquote><p>证：在<a href="https://gamersover.github.io/2021/02/01/函数导数3/#定理3" target="_blank" rel="noopener">定理3</a>中取</p><script type="math/tex; mode=display">    \lambda (x) = \frac{b-x}{b-a} \quad (a \le x \le b)</script><p>即可得。</p><p>Q.E.D.</p><h4 id="定理5"><a href="#定理5" class="headerlink" title="定理5"></a>定理5</h4><blockquote><p>设函数$f$与在$[a,b]$上连续，在$(a,b)$内可导，则函数$f$在$[a,b]$上为常数的充分必要条件是$f^\prime = 0$。</p></blockquote><p>证：必要性易证。充分性：设$f^\prime = 0$，任取$x_1,x_2 \in [a,b]$，且$x_1 &lt; x_2$，那么存在$\xi \in (x_1,x_2)$，使得</p><script type="math/tex; mode=display">    f(x_2) - f(x_1) = f^\prime(\xi) (x_2 - x_1)</script><p>由于$f^\prime(\xi) = 0$，从而$f(x_2) = f(x_1)$。</p><p>Q.E.D.</p><h4 id="定理6：Cauchy"><a href="#定理6：Cauchy" class="headerlink" title="定理6：Cauchy"></a>定理6：Cauchy</h4><blockquote><p>设函数$f$和$g$在区间$[a,b]$上连续，在区间$(a,b)$内可导，且当$x \in (a,b)$时，$g^\prime(x) \ne 0$，这时必存在一点$\xi \in (a,b)$，使得</p><script type="math/tex; mode=display">    \frac{f(a) - f(b)}{g(a) - g(b)} = \frac{f^\prime(\xi)}{g^\prime(\xi)}</script></blockquote><p>证：在<a href="https://gamersover.github.io/2021/02/01/函数导数3/#定理3" target="_blank" rel="noopener">定理3</a>中取</p><script type="math/tex; mode=display">    \lambda (x) = \frac{g(b) - g(x)}{g(b) - g(a)} \quad (a \le x \le b)</script><p>即可得。</p><p>Q.E.D.</p><h4 id="定理7：Darboux"><a href="#定理7：Darboux" class="headerlink" title="定理7：Darboux"></a>定理7：Darboux</h4><blockquote><p>如果$f$在$[a,b]$上可导，那么： <br/><br>（1）导函数$f^\prime$可以取到$f^\prime(a)$与$f^\prime(b)$之间的一切值。<br/><br>（2）$f^\prime$无第一类间断点。</p></blockquote><p>证：（1）先证明：如果$f^\prime(a)f^\prime(b) &lt; 0$，那么必有$\xi \in (a,b)$，使得$f^\prime(\xi) = 0$。不妨设$f^\prime(a) &gt; 0, f^\prime(b) &lt; 0$。由于</p><script type="math/tex; mode=display">    f^\prime(a) = \lim\limits_{x\to a^+} \frac{f(x) - f(a)}{x - a} > 0</script><p>所以存在$\delta_1 &gt; 0$，当$x \in (a, a+\delta_1)$时，$\frac{f(x) - f(a)}{x - a} &gt; 0$，由于$x &gt; a$，所以$f(x) &gt; f(a)$。同理可知存在$\delta_2 &gt; 0$，当$x \in (b - \delta_2, b)$时，$f(x) &gt; f(b)$，表明$f(a),f(b)$都不是$f$在$[a,b]$上的最大值，从而必存在$\xi \in (a,b)$，使得$f^\prime(\xi) = 0$。</p><p>现在设$f^\prime(a) &lt; f^\prime(b)$，任取介于$f^\prime(a)$和$f^\prime(b)$之间的值$\gamma$，即</p><script type="math/tex; mode=display">    f^\prime(a) < \gamma < f^\prime(b)</script><p>记$F(x) = f(x) - \lambda x$，那么$F^\prime(x) = f^\prime(x) - \lambda$，可知$F^\prime(a)F^\prime(b) &lt; 0$，从而利用上面所证的结论可知，存在$\xi \in (a,b)$，使得$F^\prime(\xi) = 0$，即</p><script type="math/tex; mode=display">    f^\prime(\xi) = \lambda</script><p>（2）用反证法。如果$x_0$是$f^\prime$的一个第一类间断点，那么$f^\prime(x_0+)$和$f^\prime(x_0-)$都存在，于是由<a href="https://gamersover.github.io/2021/02/01/函数导数3/#定理4：Lagrange" target="_blank" rel="noopener">定理4</a>可得</p><script type="math/tex; mode=display">    f^\prime(x_0) = f_+^\prime(x_0) = \lim\limits_{x \to x_0+} \frac{f(x) - f(x_0)}{x - x_0} = \lim\limits_{x \to x_0^+} \frac{f^\prime(\xi_+)(x-x_0)}{x - x_0}  = \lim\limits_{x \to x_0^+} f^\prime(\xi_+)</script><p>其中$\xi_+ \in (x_0, x)$。由于当$x \to x_0^+$，$\xi_+ \to x_0^+$，且已知$f^\prime(x_0+)$存在，所以得</p><script type="math/tex; mode=display">    f^\prime(x_0) = f^\prime(x_0+)</script><p>同理可证$f^\prime(x_0) = f^\prime(x_0-)$。由此可知$f^\prime$在$x_0$处连续，这与$x_0$是$f^\prime$的间断点矛盾。</p><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数导数 </tag>
            
            <tag> 微分中值定理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数导数二：初等函数的导数</title>
      <link href="/2021/01/27/%E5%87%BD%E6%95%B0%E5%AF%BC%E6%95%B02/"/>
      <url>/2021/01/27/%E5%87%BD%E6%95%B0%E5%AF%BC%E6%95%B02/</url>
      
        <content type="html"><![CDATA[<p>本章介绍常见初等函数的导函数及其求法。<br><a id="more"></a></p><h4 id="常值函数"><a href="#常值函数" class="headerlink" title="常值函数"></a>常值函数</h4><blockquote><p>函数$f = c$为常值函数，证：$f^\prime = 0$。</p></blockquote><p>证：由于</p><script type="math/tex; mode=display">    f^\prime(x) = \frac{f(x+h) - f(x)}{h} = \frac{c-c}{h} = 0</script><p>Q.E.D.</p><h4 id="指数函数"><a href="#指数函数" class="headerlink" title="指数函数"></a>指数函数</h4><blockquote><p>函数$f(x) = x^\alpha (x &gt; 0, \alpha \in \mathbb{R})$，证：$f^\prime(x) = \alpha x^{\alpha - 1}$。</p></blockquote><p>证：由于</p><script type="math/tex; mode=display">    f^\prime(x) = \lim\limits_{h \to 0} \frac{(x+h)^\alpha - x^\alpha}{h} = x^{\alpha-1}\lim\limits_{h \to 0} \frac{(1 + h/x)^{\alpha} - 1}{h/x}</script><p>而</p><script type="math/tex; mode=display">    \lim\limits_{t \to 0} \frac{(1+t)^\alpha - 1}{t} = \lim\limits_{t \to 0} \frac{e^{\alpha \ln(1+t)} - 1}{\alpha \ln (1+t)} \frac{\alpha \ln (1+t)}{t}</script><p>由于$\ln(1+x) \sim x, e^x-1 \sim x \quad (x \to 0)$，从而</p><script type="math/tex; mode=display">    \lim\limits_{t \to 0} \frac{(1+t)^\alpha - 1}{t} = \alpha</script><p>所以</p><script type="math/tex; mode=display">     f^\prime(x) = \alpha x^{\alpha - 1}</script><p>Q.E.D.</p><h4 id="正弦函数"><a href="#正弦函数" class="headerlink" title="正弦函数"></a>正弦函数</h4><blockquote><p>函数$f(x) = \sin x$，证$f^\prime(x) = \cos x$。</p></blockquote><p>证：由于</p><script type="math/tex; mode=display">    f^\prime(x) = \lim\limits_{h \to 0} \frac{\sin(x+h) - \sin x}{h} = \lim\limits_{h \to 0} \frac{\cos (x+h/2) \sin (h/2)}{h/2} = \cos x</script><p>Q.E.D.</p><h4 id="余弦函数"><a href="#余弦函数" class="headerlink" title="余弦函数"></a>余弦函数</h4><blockquote><p>函数$f(x) = \cos x$，证$f^\prime(x) = -\sin x$。</p></blockquote><p>证：由于</p><script type="math/tex; mode=display">    f^\prime(x) = \lim \limits_{h \to 0} \frac{\cos (x+h) - \cos x}{h} = \lim\limits_{h \to 0} \frac{-\sin(x+h)\sin (h/2)}{h/2} = -\sin x</script><p>Q.E.D.</p><h4 id="正切函数"><a href="#正切函数" class="headerlink" title="正切函数"></a>正切函数</h4><blockquote><p>函数$f(x) = \tan x$，证$f^\prime(x) = \sec^2x$。</p></blockquote><p>证：由于</p><script type="math/tex; mode=display">    (\tan x)^\prime = \begin{aligned} \left( \frac{\sin x}{\cos x} \right)\end{aligned} ^\prime = \frac{(\sin x)^\prime \cos x - \sin x (\cos x)^\prime}{\cos^2x} = \frac{1}{\cos^2 x} = \sec^2x</script><p>Q.E.D.</p><h4 id="余切函数"><a href="#余切函数" class="headerlink" title="余切函数"></a>余切函数</h4><blockquote><p>函数$f(x) = \cot x$，证$f^\prime(x) = -\csc^2x$。</p></blockquote><p>证：由于</p><script type="math/tex; mode=display">    (\tan x)^\prime = \begin{aligned} \left( \frac{\cos x}{\sin x} \right)\end{aligned} ^\prime = \frac{(\cos x)^\prime \sin x - \cos x (\sin x)^\prime}{\sin^2x} = - \frac{1}{\cos^2 x} = -\csc^2x</script><p>Q.E.D.</p><h4 id="反正弦函数"><a href="#反正弦函数" class="headerlink" title="反正弦函数"></a>反正弦函数</h4><blockquote><p>函数$f(x) = \arcsin x$，证$f^\prime(x) = \frac{1}{\sqrt{1-x^2}}$。</p></blockquote><p>证：函数$f(x)$的反函数为$x = \sin y$，从而</p><script type="math/tex; mode=display">    f^\prime(x) = \frac{1}{(\sin y)^\prime} = \frac{1}{\cos y} = \frac{1}{\sqrt{1-x^2}}</script><p>Q.E.D.</p><h4 id="反余弦函数"><a href="#反余弦函数" class="headerlink" title="反余弦函数"></a>反余弦函数</h4><blockquote><p>函数$f(x) = \arccos x$，证$f^\prime(x) = -\frac{1}{\sqrt{1-x^2}}$。</p></blockquote><p>证：函数$f(x)$的反函数为$x = \cos y$，从而</p><script type="math/tex; mode=display">    f^\prime(x) = \frac{1}{(\cos y)^\prime} = \frac{1}{-\sin y} = -\frac{1}{\sqrt{1-x^2}}</script><p>Q.E.D.</p><h4 id="反正切函数"><a href="#反正切函数" class="headerlink" title="反正切函数"></a>反正切函数</h4><blockquote><p>函数$f(x) = \arctan x$，证$f^\prime(x) = \frac{1}{1+x^2}$。</p></blockquote><p>证：函数$f(x)$的反函数为$x = \tan y$，从而</p><script type="math/tex; mode=display">    f^\prime(x) = \frac{1}{(\tan y)^\prime} = {\cos^2 y} = \frac{1}{1+\tan^2y} = \frac{1}{1+x^2}</script><p>Q.E.D.</p><h4 id="反余切函数"><a href="#反余切函数" class="headerlink" title="反余切函数"></a>反余切函数</h4><!--todo：markdown 不支持\arccot--><blockquote><p>函数$f(x) = \arccot x$，证$f^\prime(x) = -\frac{1}{1+x^2}$。</p></blockquote><p>证：函数$f(x)$的反函数为$x = \cot y$，从而</p><script type="math/tex; mode=display">    f^\prime(x) = \frac{1}{(\cot y)^\prime} = -{\sin^2 y} = -\frac{1}{1+\cot^2y} = -\frac{1}{1+x^2}</script><p>Q.E.D.</p><h4 id="幂函数"><a href="#幂函数" class="headerlink" title="幂函数"></a>幂函数</h4><blockquote><p>函数$f(x) = a^x (a&gt;0)$，证$f^\prime(x) = a^x \ln a$。</p></blockquote><p>证：由于</p><script type="math/tex; mode=display">    f^\prime(x) = \lim\limits_{h \to 0} \frac{a^{x+h} - a^x}{h} = a^x \lim\limits_{h \to 0} \frac{a^{h} - 1}{h} = a^x \ln a</script><p>特别地，当$a= e$时，有$(e^x)^\prime = e^x$。</p><p>Q.E.D.</p><h4 id="对数函数"><a href="#对数函数" class="headerlink" title="对数函数"></a>对数函数</h4><blockquote><p>函数$f(x) = \log_a x \quad (a &gt; 0)$，证$f^\prime(x) = \frac{1}{x \ln a}$。</p></blockquote><p>证：由于$f(x)$的反函数为$x = a^y$，所以</p><script type="math/tex; mode=display">    f^\prime(x) = \frac{1}{(a^y)^\prime} = \frac{1}{a^y \ln a} = \frac{1}{x \ln a}</script><p>特别地，当$a=e$时，有$(\ln x)^\prime = \frac{1}{x}$。</p><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数导数 </tag>
            
            <tag> 初等函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数导数一：导数的定义与基本性质</title>
      <link href="/2021/01/25/%E5%87%BD%E6%95%B0%E5%AF%BC%E6%95%B01/"/>
      <url>/2021/01/25/%E5%87%BD%E6%95%B0%E5%AF%BC%E6%95%B01/</url>
      
        <content type="html"><![CDATA[<h4 id="定义1：导数"><a href="#定义1：导数" class="headerlink" title="定义1：导数"></a>定义1：导数</h4><blockquote><p>设函数$f$在$x_0$的近旁处有定义，如果极限</p><script type="math/tex; mode=display">    \lim \limits_{h \to 0} \frac{f(x_0+h) - f(x_0)}{h}</script><p>存在且有限，则称这个极限值为$f$在点$x_0$的导数，记作$f^{\prime}(x_0)$，并称函数$f$在点$x_0$处可导。</p></blockquote><a id="more"></a><h4 id="定义2：单边导数"><a href="#定义2：单边导数" class="headerlink" title="定义2：单边导数"></a>定义2：单边导数</h4><blockquote><p>设函数$f$在点$x_0$的右边$[x_0,x_0+r)$上有定义，其中$r&gt;0$，若极限</p><script type="math/tex; mode=display">    \lim \limits_{h \to 0^+} \frac{f(x_0 + h) - f(x_0)}{h}</script><p>存在且有限，则称此极限为函数$f$在点$x_0$的右导数，记作$f_+^{\prime}(x_0)$。 <br/><br>类似地，设函数$f$在点$x_0$的右边$(x_0-r,x_0]$上有定义，其中$r&gt;0$，若极限</p><script type="math/tex; mode=display">    \lim \limits_{h \to 0^-} \frac{f(x_0 + h) - f(x_0)}{h}</script><p>存在且有限，则称此极限为函数$f$在点$x_0$的左导数，记作$f_-^{\prime}(x_0)$。</p></blockquote><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>函数$f$在点$x_0$处可导的充分必要条件是$f$在$x_0$处的左、右导数存在且相等，即$f^\prime(x_0) = f_-^\prime(x_0) = f_+^\prime(x_0)$。</p></blockquote><p>证：由定义1与定义2易证。</p><p>Q.E.D.</p><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>若函数$f$在点$x_0$处可导，则$f$必在$x_0$处连续。</p></blockquote><p>证：记$f$在$x_0$处的导数为$f^\prime(x_0)$，于是有</p><script type="math/tex; mode=display">    \lim \limits_{x \to x_0} (f(x) - f(x_0)) = \lim \limits_{x \to x_0} \frac{f(x) - f(x_0)}{x-x_0} \cdot (x-x_0)</script><p>上式中令$x-x_0 = h$，可得</p><script type="math/tex; mode=display">    \lim \limits_{x \to x_0} (f(x) - f(x_0)) = \lim \limits_{h \to 0} \frac{f(x_0+h) - f(x_0)}{h} \cdot h = f^\prime(x_0) \cdot 0 = 0</script><p>Q.E.D.</p><h4 id="定义3"><a href="#定义3" class="headerlink" title="定义3"></a>定义3</h4><blockquote><p>如果函数$f$在开区间$(a,b)$中的每一点可导，则称函数$f$在$(a,b)$上可导；如果函数$f$在$(a,b)$上可导，且在点$a$处有右导数，在点$b$处有左导数，则称函数$f$在闭区间$[a,b]$上可导。类似地，可以定义函数$f$在$[a,b)$与$(a,b]$上可导。</p></blockquote><h4 id="定理3：求导的四则运算"><a href="#定理3：求导的四则运算" class="headerlink" title="定理3：求导的四则运算"></a>定理3：求导的四则运算</h4><blockquote><p>设函数$f$和$g$在点$x$处可导，则$f \pm g,fg$也在$x$处可导，如果$g(x)\ne 0$，那么函数$f/g$也在$x_0$处可导。精确地说，我们有以下公式：<br/><br>（1）$(f \pm g)^\prime (x) = f^\prime(x) \pm g^\prime(x)$ <br/><br>（2）$(fg)^\prime (x) = f^\prime(x)g(x) + f(x)g^\prime(x)$ <br/><br>（3）$(\frac{f}{g})^\prime(x) = \frac{f^\prime(x)g(x) - f(x)g^\prime(x)}{g^2(x)}$</p></blockquote><p>证：（1）有</p><script type="math/tex; mode=display">    \frac{(f \pm g) (x + h) - (f \pm g) (x)}{h} = \frac{f(x+h) - f(x)}{h} \pm \frac{g(x+h) - g(x)}{h}</script><p>令$h \to 0$，从而得到（1）式；<br/><br>（2） 有</p><script type="math/tex; mode=display">    \begin{aligned}    \frac{f(x+h)g(x+h) - f(x)g(x)}{h} & = \frac{f(x+h)g(x+h) - f(x)g(x+h) + f(x)g(x+h) - f(x)g(x)}{h} \\    & = \frac{f(x+h) - f(x)}{h} \cdot g(x+h) + \frac{g(x+h) - g(x)}{h} \cdot f(x)    \end{aligned}</script><p>上式中令$h \to 0$，即可得到（2）式；<br/><br>（3）有</p><script type="math/tex; mode=display">    \begin{aligned}        \frac{1}{h}\left(\frac{f(x+h)}{g(x+h)} - \frac{f(x)}{g(x)} \right) & = \frac{1}{h}\left( \frac{f(x+h)g(x) - f(x)g(x+h)}{g(x+h)g(x)} \right) \\        & = \frac{1}{g(x+h)g(x)} \left( \frac{f(x+h) - f(x)}{h}g(x) - \frac{g(x+h) - g(x)}{h} f(x) \right)    \end{aligned}</script><p>令$h \to 0$，即可得（3）式。</p><p>Q.E.D.</p><h4 id="定理4：链式法则"><a href="#定理4：链式法则" class="headerlink" title="定理4：链式法则"></a>定理4：链式法则</h4><blockquote><p>设函数$\varphi$在点$t_0$处可导，函数$f$在点$x_0=\varphi(t_0)$处可导，那么复合函数$f\circ \varphi$在点$t_0$处可导，且</p><script type="math/tex; mode=display">    (f \circ g)^\prime (t_0) = f^\prime(\varphi(t_0))\varphi^\prime(t_0)</script></blockquote><p>证：记函数</p><script type="math/tex; mode=display">        g(x) = \left\{             \begin{aligned}                & \frac{f(x) - f(x_0)}{x - x_0}  \quad &x \ne x_0\\                & f^\prime(x_0) \quad & x = x_0             \end{aligned}              \right.</script><p>可知</p><script type="math/tex; mode=display">    \lim \limits_{x \to x_0} g(x) = \lim \limits_{x \to x_0} \frac{f(x) - f(x_0)}{x - x_0} = f^\prime(x_0) = g(x_0)</script><p>所以$g(x)$在$x_0$处连续。<br>（1）当$\varphi(t) \ne \varphi(t_0)$时，有</p><script type="math/tex; mode=display">    \frac{f(\varphi(t)) - f(\varphi(t_0))}{t-t_0} = \frac{f(\varphi(t)) - f(\varphi(t_0))}{\varphi(t)-\varphi(t_0)} \cdot \frac{\varphi(t) - \varphi(t_0)}{t - t_0} = g(\varphi(t)) \cdot \frac{\varphi(t) - \varphi(t_0)}{t - t_0}</script><p>（2）当$\varphi(t) = \varphi(t_0)$时，有</p><script type="math/tex; mode=display">    0 = \frac{f(\varphi(t)) - f(\varphi(t_0))}{t-t_0} = g(\varphi(t)) \cdot \frac{\varphi(t) - \varphi(t_0)}{t - t_0} = 0</script><p>从而有</p><script type="math/tex; mode=display">   \frac{f(\varphi(t)) - f(\varphi(t_0))}{t-t_0} = g(\varphi(t)) \cdot \frac{\varphi(t) - \varphi(t_0)}{t - t_0} \tag 1</script><p>又由于</p><script type="math/tex; mode=display">    \lim \limits_{t \to t_0} g(\varphi(t)) = g(\varphi(t_0)) = g(x_0) = f^\prime(x_0)</script><p>再令（1）式中$t \to t_0$，可得</p><script type="math/tex; mode=display">    (f \circ g)^\prime (t) = f^\prime(x_0) \varphi^\prime(t_0) = f^\prime(\varphi(t_0))\varphi^\prime(t_0)</script><p>Q.E.D.</p><h4 id="定理5：反函数的求导"><a href="#定理5：反函数的求导" class="headerlink" title="定理5：反函数的求导"></a>定理5：反函数的求导</h4><blockquote><p>设$y = f(x)$在包含$x_0$的区间$I$上连续且严格单调。如果它在$x_0$处可导，且$f^\prime(x_0) \ne 0$，那么它的反函数$x = f^{-1}(y)$在$y_0 = f(x_0)$处可导，且</p><script type="math/tex; mode=display">    (f^{-1})^\prime(y_0) = \frac{1}{f^\prime(x_0)}</script></blockquote><p>证：由于</p><script type="math/tex; mode=display">    \frac{f^{-1}(y) - f^{-1}(y_0)}{y - y_0} = \frac{x - x_0}{f(x) - f(x_0)} = \left(\frac{f(x) - f(x_0)}{x - x_0}\right)^{-1}</script><p>又因为$f$单调连续，所以当$y \to y_0$时，有$x \to x_0$，令上式中$y \to y_0$，可得</p><script type="math/tex; mode=display">    (f^{-1})^\prime(y_0) = (f^\prime(x_0))^{-1}</script><p>Q.E.D.</p><h4 id="定义4：导函数与-n-阶导函数"><a href="#定义4：导函数与-n-阶导函数" class="headerlink" title="定义4：导函数与$n$阶导函数"></a>定义4：导函数与$n$阶导函数</h4><blockquote><p>设函数$f$在区间$I$上可导，那么$f^\prime(x)(x \in I)$在$I$上定义了一个函数$f^\prime$，称之为$f$的导函数。如果$f^\prime$在$I$上可导，那么$(f^\prime)^\prime$称为$f$的二阶导函数，记作$f^{\prime\prime}$。由归纳可知，对任何正整数$n$，可以定义$f$的$n$阶导函数$f^{(n)}$。</p></blockquote><h4 id="定理6：Leibniz"><a href="#定理6：Leibniz" class="headerlink" title="定理6：Leibniz"></a>定理6：Leibniz</h4><blockquote><p>设函数$f$与$g$在区间$I$上都有$n$阶导数，那么乘积$fg$在区间$I$上也有$n$阶导数，并且</p><script type="math/tex; mode=display">    (fg)^{(n)} = \sum_{k=0}^n \binom{n}{k} f^{(n-k)}g^{(k)}</script><p>这里$f^{(0)} = f, g^{(0)} = g$，其中组合系数</p><script type="math/tex; mode=display">    \binom{n}{k} = \frac{n!}{(n-k)!k!} \quad (k = 0,1,2,\cdots)</script></blockquote><p>证：我们对$n$矩形归纳。当$n = 1$时，命题显然成立。现假设$m \ge 1$时，有</p><script type="math/tex; mode=display">    (fg)^{(m)} = \sum_{k=0}^m \binom{m}{k} f^{(m-k)}g^{(k)}</script><p>这时对上式两边求导，得</p><script type="math/tex; mode=display">    \begin{aligned}        (fg)^{(m+1)} & = \sum_{k=0}^m \binom{m}{k} (f^{(m-k)}g^{(k)})^\prime \\        & = \sum_{k=0}^m \binom{m}{k} (f^{(m-k+1)}g^{(k)} + f^{(m-k)}g^{(k+1)}) \\        & = \binom{m}{0}f^{(m+1)}g^{(0)} + \sum_{k=1}^m \left(\binom{m}{k}  +\binom{m}{k-1}\right)  f^{(m-k+1)}g^{(k)} + \binom{m}{m}f^{(m+1)}g^{(0)}    \end{aligned}</script><p>而</p><script type="math/tex; mode=display">    \begin{aligned}        \binom{m}{k} + \binom{m}{k-1} &= \frac{m!}{(m-k)!k!} + \frac{m!}{(m-k+1)!(k-1)!} \\        & = \frac{m!(m-k+1+k)}{(m-k+1)!k!} = \frac{(m+1)!}{(m-k+1)!k!} = \binom{m+1}{k}    \end{aligned}</script><p>且$\binom{m}{0} = \binom{m+1}{0}，\binom{m}{m} = \binom{m+1}{m+1}$，从而</p><script type="math/tex; mode=display">     (fg)^{(m+1)} = \sum_{k=0}^{m+1} \binom{m+1}{k} f^{(m+1-k)}g^{(k)}</script><p>即对$m+1$命题也成立。</p><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数导数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode题解15：三数之和</title>
      <link href="/2021/01/22/leetcode%E9%A2%98%E8%A7%A315/"/>
      <url>/2021/01/22/leetcode%E9%A2%98%E8%A7%A315/</url>
      
        <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>该题来自于<a href="https://leetcode-cn.com/problems/3sum" target="_blank" rel="noopener">力扣第15题</a><br>给你一个包含<code>n</code>个整数的数组<code>nums</code>，判断<code>nums</code>中是否存在三个元素<code>a</code>，<code>b</code>，<code>c</code> ，使得<code>a + b + c = 0</code>？请你找出所有和为<code>0</code>且不重复的三元组。</p><p>注意：答案中不可以包含重复的三元组。<br><a id="more"></a></p><p>示例 1：</p><blockquote><p>输入：nums = [-1,0,1,2,-1,-4]<br>输出：[[-1,-1,2],[-1,0,1]]</p></blockquote><p>示例 2：</p><blockquote><p>输入：nums = []<br>输出：[]</p></blockquote><p>示例 3：</p><blockquote><p>输入：nums = [0]<br>输出：[]</p></blockquote><p>提示：</p><ul><li><code>0 &lt;= nums.length &lt;= 3000</code></li><li><code>-105 &lt;= nums[i] &lt;= 105</code></li></ul><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>思考关键点在于确定了第一个数后，相当于找到和为固定的其他两个数，就可以联想到两数之和的做法了。回顾下两数之和的做法：先对数组排序，然后使用双指针法。由于该题需要找出所有满足条件的三元组，那么就需要找到所有满足条件的两数。假设初始状态下，左右指针分别指向<code>1,4</code>，如下：</p><blockquote><font color='red'>1</font> 1 2 2 3 4 <font color='blue'>4</font></blockquote><p>这时使用双指针法有以下三种情况：</p><ul><li>左指针left指向的数与右指针指向的数之和大于目标值4，这时需要将右指针向左移动</li><li>左指针left指向的数与右指针指向的数之和小于目标值6，这时需要将左指针向右移动</li><li>左指针left指向的数与右指针指向的数之和等于目标值5，这时记录这个两数。为了找到所有满足条件的两个数（而且不能重复），需要继续遍历，这时显然将左指针向右移动直到所指向的值不是原来的值，将右指针向左移动直到所指向的值不是原来的值，此时左右指针分别指向<code>2,3</code><blockquote><p>1 1 <font color='red'>2</font> 2 <font color='blue'>3</font> 4 4</p></blockquote></li></ul><p>如此下去，直到左指针遇到右指针，就找到了所有满足条件的两个数了。</p><p>在遍历第一个数时，为了避免找到重复解，每到一个新数时可以和前面数比较，如果一样直接跳过，因为前面已经遍历过该数的情况了。</p><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><ol><li>对数组排序</li><li>遍历数组，下标<code>i</code>从<code>0</code>到<code>nums.length - 3</code>，如果<code>i&gt;0 &amp;&amp; nums[i]==nums[i-1]</code>，表示该数和前面一样，跳过该下标，遍历<code>i+1</code></li><li>进入循环，找到两数之和为<code>-nums[i]</code>，初始化左指针<code>left=i+1</code>，右指针<code>right=nums.length-1</code>，循环条件左指针比右指针小<code>left&lt;right</code></li><li>如果<code>nums[left]+nums[right]&gt;-nums[i]</code>，这时移动右指针<code>right--</code></li><li>如果<code>nums[left]+nums[right]&lt;-nums[i]</code>，这时移动右指针<code>left++</code></li><li>如果<code>nums[left]+nums[right]==-nums[i]</code>，记录三元组<code>[[nums[i], nums[left], nums[right]]</code>，并移动左指针直到<code>nums[left]!=nums[left+1]</code>，移动右指针直到<code>nums[right]!=nums[right-1]</code></li><li>回到3判断循环是否结束，如果结束回到2，否则继续4</li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><details open><summary>python3</summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">threeSum</span><span class="params">(self, nums)</span>:</span></span><br><span class="line">        nums.sort()</span><br><span class="line">        res = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(nums)<span class="number">-2</span>):</span><br><span class="line">            <span class="keyword">if</span> i &gt; <span class="number">0</span> <span class="keyword">and</span> nums[i] == nums[i<span class="number">-1</span>]:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            </span><br><span class="line">            left = i + <span class="number">1</span></span><br><span class="line">            right = len(nums) - <span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> left &lt; right:</span><br><span class="line">                <span class="keyword">if</span> nums[left] + nums[right] &gt; -nums[i]:</span><br><span class="line">                    right -= <span class="number">1</span></span><br><span class="line">                <span class="keyword">elif</span> nums[left] + nums[right] &lt; -nums[i]:</span><br><span class="line">                    left += <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    res.append([nums[i], nums[left], nums[right]])</span><br><span class="line">                    <span class="keyword">while</span> left &lt; right <span class="keyword">and</span> nums[left] == nums[left+<span class="number">1</span>]:</span><br><span class="line">                        left += <span class="number">1</span></span><br><span class="line">                    <span class="keyword">while</span> left &lt; right <span class="keyword">and</span> nums[right] == nums[right<span class="number">-1</span>]:</span><br><span class="line">                        right -= <span class="number">1</span></span><br><span class="line">                    left += <span class="number">1</span></span><br><span class="line">                    right -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></details><details><summary>c++</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; threeSum(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;nums) &#123;</span><br><span class="line">        <span class="keyword">if</span> (nums.size() &lt; <span class="number">3</span>) <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">        sort(nums.begin(), nums.end());</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; res;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.size() - <span class="number">2</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span> &amp;&amp; nums[i] == nums[i<span class="number">-1</span>]) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">int</span> left = i + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> right = nums.size() - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">                <span class="keyword">if</span> (nums[left] + nums[right] &gt; -nums[i]) right--;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (nums[left] + nums[right] &lt; -nums[i]) left++;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    res.push_back(&#123;nums[i], nums[left], nums[right]&#125;);</span><br><span class="line">                    <span class="keyword">while</span> ((left &lt; right) &amp;&amp; (nums[left] == nums[left+<span class="number">1</span>])) left++;</span><br><span class="line">                    <span class="keyword">while</span> ((left &lt; right) &amp;&amp; (nums[right] == nums[right<span class="number">-1</span>])) right--;</span><br><span class="line">                    left++; right--;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></details><details><summary>java</summary><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; threeSum(<span class="keyword">int</span>[] nums) &#123;</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; res = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (nums.length &lt; <span class="number">3</span>)</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length - <span class="number">2</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span> &amp;&amp; nums[i] == nums[i - <span class="number">1</span>])</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">int</span> left = i + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> right = nums.length - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">                <span class="keyword">if</span> (nums[left] + nums[right] &gt; -nums[i])</span><br><span class="line">                    right--;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (nums[left] + nums[right] &lt; -nums[i])</span><br><span class="line">                    left++;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    List&lt;Integer&gt; tmp = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                    tmp.add(nums[i]);</span><br><span class="line">                    tmp.add(nums[left]);</span><br><span class="line">                    tmp.add(nums[right]);</span><br><span class="line">                    res.add(tmp);</span><br><span class="line">                    <span class="keyword">while</span> (left &lt; right &amp;&amp; nums[left] == nums[left+<span class="number">1</span>]) left++;</span><br><span class="line">                    <span class="keyword">while</span> (left &lt; right &amp;&amp; nums[right] == nums[right-<span class="number">1</span>]) right--;</span><br><span class="line">                    left++;</span><br><span class="line">                    right--;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 数组 </tag>
            
            <tag> 双指针 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数极限七：向量值函数的连续与一致连续</title>
      <link href="/2021/01/21/%E5%87%BD%E6%95%B0%E6%9E%81%E9%99%907/"/>
      <url>/2021/01/21/%E5%87%BD%E6%95%B0%E6%9E%81%E9%99%907/</url>
      
        <content type="html"><![CDATA[<h4 id="定义1：向量值函数"><a href="#定义1：向量值函数" class="headerlink" title="定义1：向量值函数"></a>定义1：向量值函数</h4><blockquote><p>设$D \subset \mathbb{R}^n$，定义$\boldsymbol{f}: D \to \mathbb{R}^m$为向量值函数，其中$D$称为$\boldsymbol{f}$定义域，$f(D)$称为值域。当用$\boldsymbol{y} = \boldsymbol{f}(\boldsymbol{x})(\boldsymbol{x} \in D)$来表示这种映射时，$\boldsymbol{x} \in \mathbb{R}^n, \boldsymbol{y} \in \mathbb{R}^m$。按分量形式写出$\boldsymbol{x} = (x_1,x_2,\cdots,x_n), \boldsymbol{y}=(y_1,y_2,\cdots,y_m)$，那么该映射函数相当于给定了$m$个$n$元函数：</p><script type="math/tex; mode=display">\left\{    \begin{aligned}        & y_1 = f_1(x_1,x_2,\cdots,x_n) \\        & y_2 = f_2(x_1,x_2,\cdots,x_n) \quad (x_1,x_2,\cdots,x_n) \in D \subset \mathbb{R}^n \\        & \cdots \\        & y_m = f_m(x_1,x_2,\cdots,x_n)    \end{aligned}\right.</script><p>反过来也成立。也就是说，如果给定了$m$个定义在$D \subset \mathbb{R}^n$上的函数，就相当于给定了定义在$D$上，映射到$\mathbb{R}^m$中的一个映射，或者说在$D$上定义了一个在$\mathbb{R}^m$中取值的向量值函数。这一事实表示为</p><script type="math/tex; mode=display">    \boldsymbol{f} = (f_1,f_2,\cdots,f_m)</script><p>其中$f_i: D \to \mathbb{R}$称为$\boldsymbol{f}$的第$i$个分量函数$(i=1,2,\cdots,m)$</p></blockquote><a id="more"></a><h4 id="定义2"><a href="#定义2" class="headerlink" title="定义2"></a>定义2</h4><blockquote><p>设$D \subset \mathbb{R}^n$，$\boldsymbol{f}: D \to \mathbb{R}^m$，又设$\boldsymbol{a} \in D^\prime, \boldsymbol{p}\in \mathbb{R}^m$。如果$\forall \varepsilon &gt; 0$，$\exists \delta &gt; 0$，使得当$\boldsymbol{x} \in D$且$0 &lt; \Vert \boldsymbol{x} - \boldsymbol{a} \Vert &lt; \delta$时，有</p><script type="math/tex; mode=display">    \Vert \boldsymbol{f}(\boldsymbol{x}) - \boldsymbol{p} \Vert < \varepsilon</script><p>则称映射$f$在点$\boldsymbol{a}$处有极限$p$，记为</p><script type="math/tex; mode=display">    \lim \limits_{\boldsymbol{x} \to \boldsymbol{a}} \boldsymbol{f}(\boldsymbol{x}) = \boldsymbol{p}</script><p>也可以简记为</p><script type="math/tex; mode=display">    \boldsymbol{f}(\boldsymbol{x}) \to \boldsymbol{p} \quad (\boldsymbol{x} \to \boldsymbol{a})</script></blockquote><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>设$D \subset \mathbb{R}^n$，$\boldsymbol{f}: D \to \mathbb{R}^m,\boldsymbol{a} \in D^\prime, \boldsymbol{p}=(p_1,p_2,\cdots,p_m)\in \mathbb{R}^m, \boldsymbol{f} = (f_1,f_2,\cdots,f_m)$。那么</p><script type="math/tex; mode=display">    \lim \limits_{\boldsymbol{x} \to \boldsymbol{a}} \boldsymbol{f}(\boldsymbol{x}) = \boldsymbol{p}</script><p>当且仅当</p><script type="math/tex; mode=display">    \lim \limits_{\boldsymbol{x} \to \boldsymbol{a}} f_i(\boldsymbol{x}) = p_i \quad (i=1,2,\cdots,m)</script></blockquote><p>证：必要性。因为$\Vert f_i(\boldsymbol{x}) - p_i \Vert \le \Vert \boldsymbol{f}(\boldsymbol{x}) - \boldsymbol{p} \Vert \quad (i=1,2,\cdots,m)$，所以$\forall \varepsilon &gt; 0$，$\exists \delta &gt; 0$，使得当$\boldsymbol{x} \in D$且$0 &lt; \Vert \boldsymbol{x} - \boldsymbol{a} \Vert &lt; \delta$时，有</p><script type="math/tex; mode=display">    | f_i(\boldsymbol{x}) - p_i | \le \Vert \boldsymbol{f}(\boldsymbol{x}) - \boldsymbol{p} \Vert < \varepsilon</script><p>这就表明</p><script type="math/tex; mode=display">    \lim \limits_{\boldsymbol{x} \to \boldsymbol{a}} f_i(\boldsymbol{x}) = p_i \quad (i=1,2,\cdots,m)</script><p>充分性。因为</p><script type="math/tex; mode=display">    \Vert \boldsymbol{f}(\boldsymbol{x}) - \boldsymbol{p} \Vert \le \sum_{i=1}^m |f_i(\boldsymbol{x}) - p_i|</script><p>对$\varepsilon &gt; 0$，$\exists \delta &gt; 0$，使得当$0 &lt; \Vert \boldsymbol{x} - \boldsymbol{a} \Vert &lt; \delta$时，有$|f(\boldsymbol{x}_i) - p_i| &lt; \varepsilon / m \quad(i=1,2,\cdots,m)$，所以</p><script type="math/tex; mode=display">    \Vert \boldsymbol{f}(\boldsymbol{x}) - \boldsymbol{p} \Vert \le \sum_{i=1}^m |f_i(\boldsymbol{x}) - p_i| < m \cdot \frac{\varepsilon}{m} = \varepsilon</script><p>Q.E.D.</p><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>设$D \subset \mathbb{R}^n$，$\boldsymbol{f},\boldsymbol{g}: D \to \mathbb{R}^m,\boldsymbol{a} \in D^\prime$，并且</p><script type="math/tex; mode=display">    \lim \limits_{\boldsymbol{x} \to \boldsymbol{a}} \boldsymbol{f}(\boldsymbol{x}) = \boldsymbol{p}，\lim \limits_{\boldsymbol{x} \to \boldsymbol{a}} \boldsymbol{g}(\boldsymbol{x}) = \boldsymbol{q}</script><p>于是我们有：<br>（1）对任何$\lambda \in \mathbb{R}$，可以得出$\lim \limits_{\boldsymbol{x} \to \boldsymbol{a}}(\lambda \boldsymbol{f}(\boldsymbol{a})) = \lambda \boldsymbol{p}$。 <br/><br>（2）$\lim \limits_{\boldsymbol{x} \to \boldsymbol{a}} (\boldsymbol{f}(\boldsymbol{x}) + \boldsymbol{g}(\boldsymbol{x})) = \boldsymbol{p} + \boldsymbol{q}$</p></blockquote><p>证：利用不等式很容易证明。</p><p>Q.E.D.</p><h4 id="定义3：连续映射"><a href="#定义3：连续映射" class="headerlink" title="定义3：连续映射"></a>定义3：连续映射</h4><blockquote><p>设$D \subset \mathbb{R}^n$，$\boldsymbol{f}: D \to \mathbb{R}^m,\boldsymbol{a} \in D$。如果$\forall \varepsilon &gt; 0$，$\exists \delta &gt; 0$，使得当$\boldsymbol{x} \in D \cap B_\delta(\boldsymbol{a})$时，有$\boldsymbol{f}(\boldsymbol{x}) \in B_\varepsilon(\boldsymbol{f}(\boldsymbol{a}))$，则称映射$\boldsymbol{f}$在点$\boldsymbol{a}$处连续。当$\boldsymbol{f}$在$D$中的每一点都连续，称映射$f$在$D$上连续。</p></blockquote><h4 id="定理3"><a href="#定理3" class="headerlink" title="定理3"></a>定理3</h4><blockquote><p>设$D$是$\mathbb{R}^n$中的开集，$\boldsymbol{f}:D \to \mathbb{R}^m$，$\boldsymbol{f}$在$D$上连续的充分必要条件是，对任意的$\mathbb{R}^m$上的开集$G$，$\boldsymbol{f}^{-1}(G)$是$\mathbb{R}^n$中的开集。这里</p><script type="math/tex; mode=display">  \boldsymbol{f}^{-1}(G) = \{ \boldsymbol{x} \in D : \boldsymbol{f}(\boldsymbol{x}) \in G \}</script></blockquote><p>证：必要性。如果$\boldsymbol{f}^{-1}(G)$是空集，自然是开集；如果非空，任取$\boldsymbol{x}_0 \in \boldsymbol{f}^{-1}(G)$，则$\boldsymbol{f}(\boldsymbol{x_0}) \in G$，由于$G$是开集，从而存在$\varepsilon &gt; 0$，使得$B_\varepsilon(\boldsymbol{f}(\boldsymbol{x}_0)) \subset G$。又因为$\boldsymbol{f}$在$\boldsymbol{x}_0$处连续，从而存在$\delta &gt; 0$，使得当$\boldsymbol{x} \in B_\delta(\boldsymbol{x}_0)$时，有$\boldsymbol{f}(\boldsymbol{x}) \in B_\varepsilon(\boldsymbol{f}(\boldsymbol{x}_0)) \subset G$，即$\boldsymbol{x} \in \boldsymbol{f}^{-1}(G)$，从而$B_\delta(\boldsymbol{x}_0) \subset \boldsymbol{f}^{-1}(G)$。这就说明$\boldsymbol{f}^{-1}(G)$是开集。</p><p>充分性。任取$\boldsymbol{x}_0 \in D$，对任意小的$\varepsilon &gt; 0$，取$G=B_\varepsilon(\boldsymbol{f}(\boldsymbol{x}_0))$，可知$G$是开集，利用条件知$\boldsymbol{f}^{-1}(G)$也是开集。因为$\boldsymbol{x}_0 \in \boldsymbol{f}^{-1}(G)$，从而存在$\delta &gt; 0$，使得$B_\delta(\boldsymbol{x}_0) \subset \boldsymbol{f}^{-1}(G)$。即对任意的$\boldsymbol{x} \in B_\delta(\boldsymbol{x}_0)$，有$\boldsymbol{f}(\boldsymbol{x}) \in G = B_\varepsilon(\boldsymbol{f}(\boldsymbol{x}_0))$。从而$\boldsymbol{f}$在$\boldsymbol{x}_0$处连续。由于$\boldsymbol{x}_0$是任取的，所以$\boldsymbol{f}$在$D$上连续。</p><h4 id="定义4：一致连续映射"><a href="#定义4：一致连续映射" class="headerlink" title="定义4：一致连续映射"></a>定义4：一致连续映射</h4><blockquote><p>设$D \subset \mathbb{R}^n$，$\boldsymbol{f}: D \to \mathbb{R}^m$，如果$\forall \varepsilon &gt; 0$，$\exists \delta&gt; 0$，使得当$\boldsymbol{x},\boldsymbol{y} \in D$且$\Vert \boldsymbol{x} - \boldsymbol{y} \Vert &lt; \delta$时，有$\Vert \boldsymbol{f}(\boldsymbol{x}) - \boldsymbol{f}(\boldsymbol{y}) \Vert &lt; \varepsilon$，则称$\boldsymbol{f}$在$D$上一致连续。</p></blockquote><h4 id="定理4"><a href="#定理4" class="headerlink" title="定理4"></a>定理4</h4><blockquote><p>设$D \subset \mathbb{R}^n$，$\boldsymbol{f}: D \to \mathbb{R}^m$是$D$上一致连续当且仅当$\boldsymbol{f}$的每一个分量函数在$D$上一致连续。</p></blockquote><p>证：利用$|f_i(\boldsymbol{x}) - f_i(\boldsymbol{y})| \le \Vert \boldsymbol{f}(\boldsymbol{x}) - \boldsymbol{f}(\boldsymbol{y}) \Vert$，很容易证明。</p><p>Q.E.D.</p><h4 id="定理5"><a href="#定理5" class="headerlink" title="定理5"></a>定理5</h4><blockquote><p>设$D \subset \mathbb{R}^n$，$\boldsymbol{f}: D \to \mathbb{R}^m$是$D$上的连续映射。如果$D$是紧致集，那么$\boldsymbol{f}$在$D$上是一致连续的。</p></blockquote><p>证：与<a href="https://gamersover.github.io/2021/01/20/函数极限6/#定理1" target="_blank" rel="noopener">函数极限六的定理1</a>证法一样。</p><p>Q.E.D.</p><h4 id="定理6"><a href="#定理6" class="headerlink" title="定理6"></a>定理6</h4><blockquote><p>设$D \subset \mathbb{R}^n$，$\boldsymbol{f}: D \to \mathbb{R}^m$是$D$上的连续映射。如果$D$是$\mathbb{R}^n$中的连通集，那么$\boldsymbol{f}(D)$是$\mathbb{R}^m$中的连通集。</p></blockquote><p>证：与<a href="https://gamersover.github.io/2021/01/20/函数极限6/#定理4" target="_blank" rel="noopener">函数极限六的定理4</a>证法一样。</p><h4 id="定理7"><a href="#定理7" class="headerlink" title="定理7"></a>定理7</h4><blockquote><p>设$D \subset \mathbb{R}^n$，$\boldsymbol{f}: D \to \mathbb{R}^m$是$D$上的连续映射。如果$D$是$\mathbb{R}^n$中紧致集，那么$\boldsymbol{f}(D)$是$\mathbb{R}^m$中的紧致集。</p></blockquote><p>证：与<a href="https://gamersover.github.io/2021/01/20/函数极限6/#定理2" target="_blank" rel="noopener">函数极限六的定理2</a>证法一样。</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 映射 </tag>
            
            <tag> 函数极限 </tag>
            
            <tag> 向量值函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数极限六：多变量函数的一致连续性</title>
      <link href="/2021/01/20/%E5%87%BD%E6%95%B0%E6%9E%81%E9%99%906/"/>
      <url>/2021/01/20/%E5%87%BD%E6%95%B0%E6%9E%81%E9%99%906/</url>
      
        <content type="html"><![CDATA[<h4 id="定义1：多变量函数的一致连续性"><a href="#定义1：多变量函数的一致连续性" class="headerlink" title="定义1：多变量函数的一致连续性"></a>定义1：多变量函数的一致连续性</h4><blockquote><p>设$D \subset \mathbb{R}^n$，$f: D \to \mathbb{R}$。如果$\forall \varepsilon &gt; 0$，$\exists \delta &gt; 0$，使得当$\boldsymbol{x},\boldsymbol{y} \in D$，且$\Vert \boldsymbol{x} - \boldsymbol{y} \Vert &lt; \delta$时，有$|f(\boldsymbol{x}) - f(\boldsymbol{y})| &lt; \varepsilon$，则称$f$在$D$上一致连续。 </p></blockquote><a id="more"></a><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>设$D \subset \mathbb{R}^n$，$f: D \to \mathbb{R}$，且$f$在$D$上连续，如果$D$是紧致集，那么$f$在$D$上一致连续。</p></blockquote><p>证：反证法。如果$f$在$D$上不一致连续，则存在一个$\varepsilon_0 &gt; 0$，使得对任何$i \in \mathbb{N}^*$，在$D$中总可以找到两个点$\boldsymbol{x}_i,\boldsymbol{y}_i$，当$\Vert \boldsymbol{x}_i - \boldsymbol{y}_i \Vert &lt; 1/i$，有</p><script type="math/tex; mode=display">    |f(\boldsymbol{x}_i) - f(\boldsymbol{y}_i)| \ge \varepsilon_0</script><p>由于$D$是紧致集，也是列紧集，从而在点列$\{\boldsymbol{x}_i\}$中可以找出子列$\{\boldsymbol{x}_{k_i}\}$收敛于点$\boldsymbol{x} \in D$，此时有</p><script type="math/tex; mode=display">    \Vert \boldsymbol{y}_{k_i} - \boldsymbol{x} \Vert \le \Vert \boldsymbol{y}_{k_i} - \boldsymbol{x}_{k_i} \Vert + \Vert \boldsymbol{x}_{k_i} - \boldsymbol{x} \Vert \le \frac{1}{k_i} + \Vert \boldsymbol{x}_{k_i} - \boldsymbol{x} \Vert \le \frac{1}{i} + \Vert \boldsymbol{x}_{k_i} - \boldsymbol{x} \Vert</script><p>从而，当$i \to \infty$，$\boldsymbol{y}_{k_i} \to \boldsymbol{x}$，而</p><script type="math/tex; mode=display">    |f(\boldsymbol{x}_{k_i}) - f(\boldsymbol{y}_{k_i})| \ge \varepsilon_0</script><p>成立，在上式中，令$i \to \infty$并由$f$的连续性可知</p><script type="math/tex; mode=display">    0 = \Vert f(\boldsymbol{x}) - f(\boldsymbol{x}) \Vert \ge \varepsilon_0 > 0</script><p>矛盾。</p><p>Q.E.D.</p><h4 id="定理2"><a href="#定理2" class="headerlink" title=" 定理2"></a><span id='theorem2'> 定理2<span></h4><blockquote><p>设$D \subset \mathbb{R}^n$，$f: D \to \mathbb{R}$，且$f$在$D$上连续，如果$D$是紧致集，那么$f$的值域$f(D)$也是紧致集。</p></blockquote><p>证：任取$f(D)$中的一个点列$\{y_i\}$，那么在$D$中存在一个点列$\{\boldsymbol{x}_i\}$，使得$f(\boldsymbol{x}_i) = y_i (i=1,2,\cdots)$，由于$D$是列紧集，从而点列$\{\boldsymbol{x}_i\}$存在一个子列$\{\boldsymbol{x}_{k_i}\}$收敛于$D$中的一点$\boldsymbol{x}$，又由于$f$是$D$上的连续函数，所以</p><script type="math/tex; mode=display">    \lim \limits_{i \to \infty} f(\boldsymbol{x}_{k_i}) = f(\boldsymbol{x}) \in f(D)</script><p>这就表明从点列$\{y_i\}$中找到了一个子列$\{y_{k_i}\}$，有</p><script type="math/tex; mode=display">    \lim \limits_{i \to \infty} y_{k_i} = \lim \limits_{i \to \infty} f(\boldsymbol{x}_{k_i}) = f(\boldsymbol{x}) \in f(D)</script><p>即子列$\{y_{k_i}\}$收敛于$f(D)$中的点。因为点列$\{y_i\}$是任取的，所以$f(D)$是紧致集。</p><p>Q.E.D.</p><h4 id="定理3"><a href="#定理3" class="headerlink" title="定理3"></a>定理3</h4><blockquote><p>设$D \subset \mathbb{R}^n$，$f: D \to \mathbb{R}$，且$f$在$D$上连续，如果$D$是紧致集，那么$f$在$D$上能取到它的最小值和最大值。</p></blockquote><p>证：由<a href="#theorem2">定理2</a>可知，$f(D)$是$\mathbb{R}$上的紧致集，即有界闭集，从而$f(D)$有上确界和下确界。设</p><script type="math/tex; mode=display">    M = \sup f(D)， \qquad m = \inf f(D)</script><p>由上确界的定义可知，对任意的$i \in \mathbb{N}^*$，存在$\boldsymbol{x}_i \in D$，使得</p><script type="math/tex; mode=display">    M - \frac{1}{i} < f(\boldsymbol{x}_i) < M</script><p>令$i \to \infty$，可得$\lim \limits_{i \to \infty} f(\boldsymbol{x}_{i}) = M$，由于$f(\boldsymbol{x}_{i}) \in D$，且$f(D)$是闭集，可知$M \in f(D)$，同理可证$m \in f(D)$。</p><p>Q.E.D.</p><h4 id="定理4"><a href="#定理4" class="headerlink" title="定理4"></a><span id='theorem4'>定理4</span></h4><blockquote><p>设$D \subset \mathbb{R}^n$是一连通集，函数$f: D \to \mathbb{R}$是连续的，那么$f(D)$是$\mathbb{R}$中的连通集。</p></blockquote><p>证：设有分解式$f(D) = A \cup B$，其中$A,B$是不相交的非空集，从而</p><script type="math/tex; mode=display">    D = f^{-1}(A) \cup f^{-1}(B)</script><p>利用映射的概念易证$f^{-1}(A)$和$f^{-1}(B)$是非空集且不相交。利用$D$是连通集的性质，不妨设$f^{-1}(A)$中包含$f^{-1}(B)$中的凝聚点，即$f^{-1}(B)$中有点列$\{\boldsymbol{x}_i\}$收敛于$f^{-1}(A)$中的点$\boldsymbol{x}$。由于函数$f$是连续函数，所以$f(\boldsymbol{x}_i) \to f(\boldsymbol{x}) (i \to \infty)$，而$\{f(\boldsymbol{x}_i)\} \subset B$，$f(\boldsymbol{x}) \in A$，这就表明$A \cap B^{\prime} \ne \phi $。</p><p>Q.E.D.</p><h4 id="定理5：介值定理"><a href="#定理5：介值定理" class="headerlink" title="定理5：介值定理"></a>定理5：介值定理</h4><blockquote><p>设$D \subset \mathbb{R}^n$是一连通集，函数$f: D \to \mathbb{R}$是连续的，如果$\boldsymbol{a},\boldsymbol{b} \in D$和$r \in \mathbb{R}$使得</p><script type="math/tex; mode=display">    f(\boldsymbol{a}) < r < f(\boldsymbol{b})</script><p>那么存在$\boldsymbol{c} \in D$，使得$f(\boldsymbol{c}) = r$。</p></blockquote><p>证：由<a href="#theorem4">定理4</a>可知，$f(D)$是$\mathbb{R}$连通集，再由<a href="https://gamersover.github.io/2020/11/10/点列极限6/#定理4" target="_blank" rel="noopener">点列极限六的定理4</a>可知$f(D)$是区间。从而区间$[f(\boldsymbol{a}), f(\boldsymbol{b})] \subset f(D)$，可得$r \in f(D)$，所以存在点$\boldsymbol{c} \in D$，使得$f(\boldsymbol{c}) = r$。</p><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 多变量函数 </tag>
            
            <tag> 函数极限 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数极限五：多变量函数的极限与连续性</title>
      <link href="/2021/01/18/%E5%87%BD%E6%95%B0%E6%9E%81%E9%99%905/"/>
      <url>/2021/01/18/%E5%87%BD%E6%95%B0%E6%9E%81%E9%99%905/</url>
      
        <content type="html"><![CDATA[<h4 id="定义1"><a href="#定义1" class="headerlink" title="定义1"></a>定义1</h4><blockquote><p>设$D \subset \mathbb{R^n}$，那么映射$f: D \to \mathbb{R}$称为一个$n$元函数，其中$D$称为函数$f$的定义域，而$f(D) \subset \mathbb{R}$称为$f$的值域。</p></blockquote><a id="more"></a><h4 id="定义2"><a href="#定义2" class="headerlink" title="定义2"></a>定义2</h4><blockquote><p>设$D \subset \mathbb{R^n}$，$f: D \to \mathbb{R}$，点$\boldsymbol{a} \in \mathbb{R^n}$是$D$的一个凝聚点（即$\boldsymbol{a} \in D^\prime$），又设$l$是一个实数。如果对任意给定的$\varepsilon &gt; 0$，存在$\delta &gt; 0$，当$0 &lt; \Vert \boldsymbol{x} - \boldsymbol{a} \Vert &lt; \delta$时，有</p><script type="math/tex; mode=display">    |f(\boldsymbol{x}) - l| < \varepsilon</script><p>我们称函数$f$在点$\boldsymbol{a}$处有极限$l$，也就是说当$\boldsymbol{x}$趋向于$\boldsymbol{a}$时，$f(\boldsymbol{x})$趋向于$l$，记作</p><script type="math/tex; mode=display">    \lim \limits_{\boldsymbol{x} \to \boldsymbol{a}} f(\boldsymbol{x}) = l</script><p>也可记作</p><script type="math/tex; mode=display">    f(\boldsymbol{x}) \to l \quad (\boldsymbol{x} \to \boldsymbol{a})</script></blockquote><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>设$D \subset \mathbb{R^n}$，$f: D \to \mathbb{R}$，点$\boldsymbol{a} \in D^\prime$。函数极限</p><script type="math/tex; mode=display">    \lim \limits_{\boldsymbol{x} \to \boldsymbol{a}} f(\boldsymbol{x}) = l</script><p>的充分必要条件是，对任何的点列$\{\boldsymbol{x}_i\} \subset D$，$\boldsymbol{x}_i \ne \boldsymbol{a} (i=1,2,3,\cdots)$且$\boldsymbol{x}_i \to \boldsymbol{a} (i \to \infty)$，数列极限</p><script type="math/tex; mode=display">    \lim \limits_{i \to \infty} f(\boldsymbol{x}_i) = l</script></blockquote><p>证：必要性。有函数极限定义可知，对$\forall \varepsilon &gt; 0$，存在$\delta &gt; 0$，使得当$0 &lt; \Vert \boldsymbol{x} - \boldsymbol{a} \Vert &lt; \delta$时，有$|f(\boldsymbol{x}) - f(\boldsymbol{a})| &lt; \varepsilon$；由于$\boldsymbol{x}_i \to \boldsymbol{a} (i \to \infty)$，从而对于给定的$\delta$，存在$N \in \mathbb{N^*}$，使得当$i &gt; N$时，有$0 &lt; \Vert \boldsymbol{x}_i - \boldsymbol{a}| &lt; \delta$，从而$|f(\boldsymbol{x}_i) - f(\boldsymbol{a})| &lt; \varepsilon$，即$\lim \limits_{i \to \infty} f(\boldsymbol{x}_i) = l$</p><p>充分性。反证法。假设$f$在$\boldsymbol{a}$处不以$l$为极限，则存在$\varepsilon_0 &gt; 0$，使得对任意的$i \in \mathbb{N^*}$，可以取出一个点$\boldsymbol{x}_i \in D$，使得当$|\boldsymbol{x}_i - \boldsymbol{a}| &lt; 1/i$时，有$|f(\boldsymbol{x}_i) - f(\boldsymbol{a})| \ge \varepsilon_0$，这时点列$\{\boldsymbol{x}_i\} \subset D$，且$\boldsymbol{x}_i \to \boldsymbol{a} (i \to \infty)$，但是数列$\{f(\boldsymbol{x}_i)\}$显然不以$l$为极限，矛盾。</p><p>Q.E.D.</p><h4 id="定理2：函数极限的四则运算"><a href="#定理2：函数极限的四则运算" class="headerlink" title="定理2：函数极限的四则运算"></a>定理2：函数极限的四则运算</h4><blockquote><p>设$D \subset \mathbb{R^n}$，$f,g: D \to \mathbb{R}$，点$\boldsymbol{a} \in D^\prime$。如果$f,g$存在着有限的极限：</p><script type="math/tex; mode=display">    \lim \limits_{\boldsymbol{x} \to \boldsymbol{a}} f(\boldsymbol{x}) = l, \qquad \lim \limits_{\boldsymbol{x} \to \boldsymbol{a}} g(\boldsymbol{x}) = m</script><p>那么有：<br>（1）$\lim \limits_{\boldsymbol{x} \to \boldsymbol{a}} (f \pm g)(\boldsymbol{x}) = l \pm m$；<br/><br>（2）$\lim \limits_{\boldsymbol{x} \to \boldsymbol{a}} fg(\boldsymbol{x}) = lm$；<br/><br>（3）$\lim \limits_{\boldsymbol{x} \to \boldsymbol{a}} (\frac{f}{g})(\boldsymbol{x}) = \frac{l}{m}$，其中$m \ne 0$。</p></blockquote><p>证：证明方法与单变量极限四则运算几乎一样。参考<a href="https://gamersover.github.io/2020/11/17/函数极限1/#定理4：函数极限四则运算" target="_blank" rel="noopener">函数极限一的定理4</a>。</p><p>Q.E.D.</p><h4 id="定理3：复合函数极限"><a href="#定理3：复合函数极限" class="headerlink" title="定理3：复合函数极限"></a>定理3：复合函数极限</h4><blockquote><p>设函数$f$在以$\boldsymbol{a} \in \mathbb{R}^n$为球心，$\boldsymbol{r}$为半径的某个空心球$B_{\boldsymbol{r}}(\boldsymbol{\check a})$上有定义，且$\lim \limits_{\boldsymbol{x} \to \boldsymbol{a}} f(\boldsymbol{x}) = l$；一元函数$\varphi$在以$l$为球心的空心球$U = \{t: 0&lt;|t - l| &lt; \delta \}$上有定义，且$\lim \limits_{t \to l} \varphi(t) = m$。再设</p><script type="math/tex; mode=display">    f(B_{\boldsymbol{r}}(\boldsymbol{\check a})) \in U</script><p>那么就有</p><script type="math/tex; mode=display">    \lim \limits_{\boldsymbol{x} \to \boldsymbol{a}} \varphi(f(\boldsymbol{x})) = m</script></blockquote><p>证：与单变量复合函数极限证明方法一样。参考<a href="https://gamersover.github.io/2020/11/17/函数极限1/#定理8" target="_blank" rel="noopener">函数极限一的定理8</a>。</p><p>Q.E.D.</p><h4 id="定理4：Cauchy收敛原理"><a href="#定理4：Cauchy收敛原理" class="headerlink" title="定理4：Cauchy收敛原理"></a>定理4：Cauchy收敛原理</h4><blockquote><p>设$D \in \mathbb{R}^n$，$\boldsymbol{a} \in D^\prime$，$f: D \to \mathbb{R}$。那么极限$\lim \limits_{\boldsymbol{x} \to \boldsymbol{a}}f(\boldsymbol{x})$存在的充分必要条件是，对任意给定的$\varepsilon &gt; 0$，存在$\delta &gt; 0$，使得当$\boldsymbol{x}^\prime,\boldsymbol{x}^{\prime\prime} \in D$且</p><script type="math/tex; mode=display">    0 < \Vert \boldsymbol{x}^\prime - \boldsymbol{a} \Vert < \delta \quad 0 < \Vert \boldsymbol{x}^{\prime\prime} - \boldsymbol{a} \Vert < \delta</script><p>同时成立时，一定有$|f(\boldsymbol{x}^\prime) - f(\boldsymbol{x}^{\prime\prime})| &lt; \varepsilon$。</p></blockquote><p>证：与证明单变量的Cauchy收敛原理类似。参考<a href="https://gamersover.github.io/2020/11/17/函数极限1/#定理7：Cauchy收敛原理" target="_blank" rel="noopener">函数极限一定理7</a>。</p><p>Q.E.D.</p><h4 id="定义3：多变量连续函数"><a href="#定义3：多变量连续函数" class="headerlink" title="定义3：多变量连续函数"></a>定义3：多变量连续函数</h4><blockquote><p>设$D \subset \mathbb{R}^n$，$f: D \to \mathbb{R}$，$\boldsymbol{a} \in D$。如果对$\forall \varepsilon &gt; 0$，$\exists \delta &gt; 0$，使得当$\boldsymbol{x} \in D \cap B_\delta(\boldsymbol{a})$，有</p><script type="math/tex; mode=display">    |f(\boldsymbol{x}) - f(\boldsymbol{a})| < \varepsilon</script><p>则称函数$f$在点$\boldsymbol{a}$处连续，$\boldsymbol{a}$称为$f$的一个连续点，$D$中$f$的非连续点称为$f$的间断点。如果$f$在$D$中的每个点上都连续，则称$f$在$D$上连续。</p></blockquote><p>注：设$D=\{\boldsymbol{p}_1,\boldsymbol{p}_2,\cdots,\boldsymbol{p}_m \}$，定义函数$f: D \to \mathbb{R}$为$f(\boldsymbol{p}_i) = \lambda_i (i=1,2,\cdots,m)$，这里$\lambda_1,\lambda_2,\cdots,\lambda_m$是任意给定的数，那么根据定义3，$f$在$D$上连续。对于单变量函数也成立，比如定义域$D=\{a\}$，且$f(a)$存在，这时$f$在$D$内连续。这与<a href="https://gamersover.github.io/2020/12/08/函数极限3/#定义1：某点连续" target="_blank" rel="noopener">函数极限三的定义1</a>不矛盾，单变量点连续定义的时候$D$为非单点闭区间，且极限值等于函数值，这种定义不包含孤立点的情况，所以单变量连续函数的真正定义也囊括在本章的定义3中。</p><h4 id="定理5：多变量连续函数的四则运算"><a href="#定理5：多变量连续函数的四则运算" class="headerlink" title="定理5：多变量连续函数的四则运算"></a>定理5：多变量连续函数的四则运算</h4><blockquote><p>设$D \subset \mathbb{R^n}$，$f,g: D \to \mathbb{R}$，点$\boldsymbol{a} \in D$。如果$f,g$在$\boldsymbol{a}$处连续，那么$f \pm g$和$fg$都在$\boldsymbol{a}$处连续，如果$g(\boldsymbol{a}) \ne 0$，那么$f/g$也在$\boldsymbol{a}$处连续。</p></blockquote><p>证：类似单变量极限的四则运算证明，这里以证明$f+g$在$\boldsymbol{a}$处连续为例，其他类似证明方法。由题意可知，$\forall \varepsilon &gt; 0$，$\exists \delta_1 &gt; 0$，使得当$x \in D \cap B_{\delta_1}(\boldsymbol{a})$时，有$|f(\boldsymbol{x}) - f(\boldsymbol{a})| &lt; \varepsilon / 2$；$\exists \delta_2 &gt; 0$，使得当$x \in D \cap B_{\delta_2}(\boldsymbol{a})$时，有$|g(\boldsymbol{x}) - g(\boldsymbol{a})| &lt; \varepsilon / 2$。令$\delta = \min(\delta_1, \delta_2)$，从而当$x \in D \cap B_{\delta}(\boldsymbol{a})$时，有</p><script type="math/tex; mode=display">    |f(\boldsymbol{x}) + g(\boldsymbol{x}) - (f(\boldsymbol{a}) + g(\boldsymbol{a}))| \le |f(\boldsymbol{x}) - f(\boldsymbol{a})| + |g(\boldsymbol{x}) - g(\boldsymbol{a})| < \frac{\varepsilon}{2} + \frac{\varepsilon}{2} = \varepsilon</script><p>这就表明$f+g$在$\boldsymbol{a}$处连续。</p><p>Q.E.D.</p><h4 id="定理6"><a href="#定理6" class="headerlink" title="定理6"></a>定理6</h4><blockquote><p>设函数$f$在以$\boldsymbol{a} \in \mathbb{R}^n$为球心，$\boldsymbol{r}$为半径的某个球$B_{\boldsymbol{r}}(\boldsymbol{a})$上有定义，且在$\boldsymbol{a}$处连续；一元函数$\varphi$在$U = \{t: 0&lt;|t - l| &lt; \delta \}$上有定义，且且在$l$处连续，则函数$\varphi(f(\boldsymbol{x}))$在$\boldsymbol{a}$处连续。</p></blockquote><p>证：与单变量复合函数极限证明方法类似。参考<a href="https://gamersover.github.io/2020/11/17/函数极限1/#定理8" target="_blank" rel="noopener">函数极限一的定理8</a>。</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 多变量函数 </tag>
            
            <tag> 函数极限 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数极限四：初等连续函数与函数的上下极限</title>
      <link href="/2021/01/11/%E5%87%BD%E6%95%B0%E6%9E%81%E9%99%904/"/>
      <url>/2021/01/11/%E5%87%BD%E6%95%B0%E6%9E%81%E9%99%904/</url>
      
        <content type="html"><![CDATA[<p>基本连续函数有哪些？这章来解答。</p><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>如果函数$f$与$g$在$x_0$处连续，那么$f \pm g$与$fg$都在$x_0$处连续，如果$g(x_0) \ne 0$，那么$f/g$也在$x_0$处连续。</p></blockquote><a id="more"></a><p>证：利用极限的四则运算性质，易证。</p><p>Q.E.D.</p><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>设函数$g$在$t_0$处连续，记$g(t_0)$为$x_0$，如果函数$f$在$x_0$处连续，那么复合函数$f \circ g$在$t_0$处连续。</p></blockquote><p>证：由题意可知，$\lim \limits_{x \to x_0} f(x) = f(x_0)$，$\lim \limits_{t \to t_0} g(t) = g(t_0) = x_0$；</p><p>从而对任意$\varepsilon &gt; 0$，存在$\delta &gt; 0$，使得当$0 &lt; |x - x_0| &lt; \delta$时，有$|f(x) - f(x_0)| &lt; \varepsilon$；</p><p>当$x = x_0$时，$|f(x_0) - f(x_0)| = 0 &lt; \varepsilon$，从而上述描述可以修改为当$|x - x_0| &lt; \delta$时，有$|f(x) - f(x_0)| &lt; \varepsilon$；对于给定的$\delta &gt; 0$，存在$\eta &gt; 0$，使得当$0 &lt;|t - t_0| &lt; \eta$时，有$|g(t) - x_0| &lt; \delta$，从而有$|f(g(t)) - f(x_0)| &lt; \varepsilon$，所以$\lim \limits_{t \to t_0} f(g(t)) = f(x_0) = f(g(t_0))$。</p><p>Q.E.D.</p><h4 id="定理3"><a href="#定理3" class="headerlink" title="定理3"></a>定理3</h4><blockquote><p>设$f$是在区间$I$上严格递增（减）的连续函数，那么$f^{-1}$是$f(I)$上的严格递增（减）的连续函数。</p></blockquote><p>证：由<a href="https://gamersover.github.io/2020/12/08/函数极限3/#定理10" target="_blank" rel="noopener">函数极限三的定理10</a>可知，$J=f(I)$也是一个区间。不妨假设$f$在$I$严格递增，任取$y_0 \in J$，令$x_0 = f^{-1}(y_0)$，即$f(x_0) = y_0$，任意给定$\varepsilon &gt; 0$，使得$x_0 - \varepsilon，x_0+\varepsilon \in I$，记</p><script type="math/tex; mode=display">    \begin{aligned}    \delta_1 & = y_0 - f(x_0 - \varepsilon) > 0 \\    \delta_2 & = f(x_0 + \varepsilon) - y_0 > 0 \\    \delta & = \min(\delta_1, \delta_2)    \end{aligned}</script><p>当$|y - y_0| &lt; \delta$时，有</p><script type="math/tex; mode=display">    y_0 - \delta_1 \le y_0 - \delta < y < y_0 + \delta \le y_0 + \delta_2</script><p>由$f^{-1}$严格递增的性质，可知</p><script type="math/tex; mode=display">    f^{-1}(y_0 - \delta_1) \le f^{-1}(y_0 - \delta) < f^{-1}(y) < f^{-1}(y_0 + \delta) \le f^{-1}(y_0 + \delta_2)</script><p>即</p><script type="math/tex; mode=display">    x_0 - \varepsilon < f^{-1}(y) < x_0 + \varepsilon \Rightarrow |f^{-1}(y) - f^{-1}(y_0)| < \varepsilon</script><p>所以$f^{-1}$在$y_0$处连续。由于$y_0$是在$J$上任取的，从而$f^{-1}$在$J$上连续。</p><p>Q.E.D.</p><h4 id="定理4：初等函数在它们各自的定义域上都是连续的。"><a href="#定理4：初等函数在它们各自的定义域上都是连续的。" class="headerlink" title="定理4：初等函数在它们各自的定义域上都是连续的。"></a>定理4：初等函数在它们各自的定义域上都是连续的。</h4><p>证：在已证明定理1，2，3后；由于$f(x) = x$是连续函数，所以多项式函数也是连续函数；由于$f(x) = \sin x$是连续函数，从而三角函数是连续函数，反三角函数也是连续函数；由于$f(x)=x^n$是多项式，也是连续函数，所以$f^{-1}(x)=x^{1/n}$也是连续函数，从而对任何的有理数$r$，$x^r$在$[0, +\infty)$上是连续的；指数函数$a^x$，当$a&gt;1$时，是连续函数，其反函数$\log_a x$是$(0,+\infty)$上的连续函数，从而指数函数和对数函数都是连续函数；对幂函数$f(x) = x^\mu (x&gt;0, \mu 为任意实数)$，该函数可等价为$f(x) = e^{\mu \ln x}$指数函数，自然也是连续的。</p><p>将多项式函数、幂函数、指数函数、对数函数、三角函数与反三角函数以及由它们经过有限次的四则运算、有限次复合所形成的函数统称为初等函数。由上可知初等函数在其各自的定义域上都是连续函数。</p><p>Q.E.D.</p><h4 id="定义1"><a href="#定义1" class="headerlink" title="定义1"></a>定义1</h4><blockquote><p>记$\mathbb{R}_{\infty} = \mathbb{R} \cup \{-\infty, +\infty\}$；设函数$f$定义在$B_{\delta}(\check x_0)$上，令</p><script type="math/tex; mode=display">    E = \{ l \in \mathbb{R}_{\infty}: 存在数列x_n \in B_{\delta}(\check x_0), x_n \to x_0, 使得f(x_n) \to l \}</script><p>这是一个非空的集合。设$a^<em> = \sup E, a_</em> = \inf E$，分别称它们为$f$当$x \to x_0$时的上极限和下极限，分别记作</p><script type="math/tex; mode=display">    \limsup_{x \to x_0} f(x), \qquad \liminf_{x \to x_0} f(x)</script><p>对其他极限过程，例如$x \to x_0^{+}，x \to x_0^{-}，x \to -\infty， x \to +\infty$以及$x \to \infty$都可以类似的定义函数$f$的上极限和下极限。</p></blockquote><h4 id="定理5"><a href="#定理5" class="headerlink" title="定理5"></a>定理5</h4><blockquote><p>设函数$f$定义在$I$上，那么：<br/><br>（1）$a^<em> \in E$；<br/><br>（2）若$y &gt; a^</em>$，则存在$\delta &gt; 0$，使得当$0 &lt; |x - x_0| &lt; \delta$时，有$f(x) &lt; y$；<br/><br>（3）$a^*$是满足前述两条性质的唯一的数。</p></blockquote><p>证：（1）若$a^<em> = +\infty$，则任何$n \in \mathbb{N}^</em>$，存在$l_n \in E$，使得$l_n &gt; n$；由于$l_n$在$E$中，从而存在$x_n$，使得当$0 &lt; |x_n - x_0| &lt; 1/n$，有$f(x_n) &gt; n$，这表明$x_n \in I$，$x_n \to x_0$时，$f(x_n) \to +\infty$，即$a^*=+\infty \in E$；</p><p>若$a^<em> = -\infty$，则$E = \{-\infty\}$，自然有$a^</em> \in E$；</p><p>若$a^<em>$为有限数，对任何$n \in \mathbb{N}^</em>$，存在$l_n \in E$，使得</p><script type="math/tex; mode=display">    a^* - \frac{1}{n} < l_n < a^* + \frac{1}{n}</script><p>从而存在$x_n$满足$0&lt; |x_n - x_0| &lt; 1/n$使得</p><script type="math/tex; mode=display">   a^* - \frac{1}{n} < f(x_n) < a^*+\frac{1}{n}</script><p>从而$x_n \in I$且$x_n \to x_0$时有$f(x_n) \to a^<em>$，即$a^</em> \in E$</p><p>（2）反证法。假设对任意的$n \in \mathbb{N}^<em>$，存在$x_n$，使得$0&lt; |x_n - x_0| &lt; 1/n$时，有$f(x_n)\ge y$，从而存在子列$\{k_n\}$，使得$f(x_{k_n}) \to y_1 (n \to \infty)$，此时有$y_1 \ge y &gt; a^</em>$，且$y_1 \in E$，从而与$a^*$的定义矛盾。</p><p>（3）反证法。假设存在两个数$p$和$q$同时满足（1）与（2），不妨设$p &lt; q$，选取$y$，满足$p &lt; y &lt; q$，由于$p$满足（2），从而存在$\delta &gt; 0$，当$0 &lt; |x - x_0| &lt; \delta$，有$f(x) &lt; y$，此时$q$不能满足（1）。</p><p>Q.E.D.</p><h4 id="定理6"><a href="#定理6" class="headerlink" title="定理6"></a>定理6</h4><blockquote><p>设函数$f$定义在$I$上，那么： <br/><br>（1）$a_<em> \in E$；<br/><br>（2）若$y &lt; a_</em>$，则存在$\delta &gt; 0$，使得当$0 &lt; |x - x_0| &lt; \delta$时，有$y &lt; f(x)$；<br/><br>（3）$a_*$是满足前述两条性质的唯一的数。</p></blockquote><p>证：与定理5的证明几乎一样。</p><p>Q.E.D.</p><h4 id="定理7"><a href="#定理7" class="headerlink" title="定理7"></a>定理7</h4><blockquote><p>设$f,g$在$I$上有定义，$x_0 \in I$，那么：<br/><br>（1）$\liminf \limits_{x \to x_0} f(x) \le \limsup \limits_{x \to x_0} f(x)$ <br /><br>（2）$\lim \limits_{x \to x_0} f(x) = a$当且仅当$\liminf \limits_{x \to x_0} f(x) = \limsup \limits_{x \to x_0} f(x) = a$； <br/><br>（3）若当$x \in I$时，有$f(x) \le g(x)$成立，则</p><script type="math/tex; mode=display">    \liminf_{x \to x_0} f(x) \le \liminf_{x \to x_0} g(x)，\qquad \limsup_{x \to x_0} f(x) \le \limsup_{x \to x_0} g(x)</script></blockquote><p>证：（1）（2）有上极限与下极限的定义易证。下面只证明（3）中的第二个不等式，第一个不等式是类似的证明。<br>令</p><script type="math/tex; mode=display">    a^* = \limsup_{x \to x_0} f(x), \qquad b^* = \limsup_{x \to x_0} g(x)</script><p>存在子数列$x_n \in I$，且$x_n \to x_0$，使得$\lim \limits_{n \to \infty} f(x_n) = a^*$，由于$f(x_n) \le g(x_n)$，从$\{x_n\}$中可以选取子列$\{x_{k_n}\}$，使得</p><script type="math/tex; mode=display">    \lim \limits_{n \to \infty} g(x_{k_n}) = b \ge a^* = \lim \limits_{n \to \infty} f(x_{k_n})</script><p>从而有$b^<em> \ge b \ge a^</em>$，即$b^<em> \ge a^</em>$。</p><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数极限 </tag>
            
            <tag> 连续函数 </tag>
            
            <tag> 上极限与下极限 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode题解11：盛最多水的容器</title>
      <link href="/2021/01/11/leetcode%E9%A2%98%E8%A7%A311/"/>
      <url>/2021/01/11/leetcode%E9%A2%98%E8%A7%A311/</url>
      
        <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>该题来自于力扣<a href="https://leetcode-cn.com/problems/container-with-most-water/" target="_blank" rel="noopener">第11题</a></p><p>给你<code>n</code>个非负整数<code>a1，a2，...，an</code>，每个数代表坐标中的一个点<code>(i, ai)</code>。在坐标内画<code>n</code>条垂直线，垂直线<code>i</code>的两个端点分别为<code>(i, ai)</code>和<code>(i, 0)</code>。找出其中的两条线，使得它们与<code>x</code>轴共同构成的容器可以容纳最多的水。</p><a id="more"></a><p>说明：你不能倾斜容器。</p><p>示例 1：</p><blockquote><p>输入：[1,8,6,2,5,4,8,3,7]<br>输出：49<br>解释：图中垂直线代表输入数组 [1,8,6,2,5,4,8,3,7]。在此情况下，容器能够容纳水（表示为蓝色部分）的最大值为 49。</p></blockquote><p>示例 2：</p><blockquote><p>输入：height = [1,1]<br>输出：1</p></blockquote><p>示例 3：</p><blockquote><p>输入：height = [4,3,2,1,4]<br>输出：16</p></blockquote><p>示例 4：</p><blockquote><p>输入：height = [1,2,1]<br>输出：2</p></blockquote><p>提示：</p><ul><li><code>n = height.length</code></li><li><code>2 &lt;= n &lt;= 3 * 104</code></li><li><code>0 &lt;= height[i] &lt;= 3 * 104</code></li></ul><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>给定横坐标<code>i,j</code>，则<code>(i,height[i])</code>与<code>(j,height[j])</code>构成的容器能容纳水的量为<code>min(height[i],height[j])*(j-i+1)</code>，记<code>k = min(height[i], height[j])</code>，<code>l = j-i+1</code>，目标使得<code>k * l</code>最大；<code>k</code>物理意义就是两个端点的小的那个，<code>l</code>的物理意义就是两个端点的距离，所以如果距离<code>l</code>减少的同时，<code>k</code>也在减少，那么目标值肯定变少了。根据该现象优化：</p><ol><li>首先选取最左与最右两个端点，此时<code>l</code>是最大的</li><li>比较两个端点的高度，如果比较高的那个往内移动，这时<code>k</code>要么不改变，要么减少，而<code>l</code>也再减少，所以<code>k*l</code>只会变少</li><li>由第2点可知，比较高的端点移动只会减少目标值，所以只需要移动低的那个端点即可</li></ol><h3 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h3><p>显然采用双指针法，一个初始为指向最左，一个初始为指向最右：</p><ol><li>初始化<code>i=0,j=n-1</code>，及目标最大值为<code>m=min(height[i],height[j])*(j-i+1)</code></li><li>如果<code>height[i] &lt; height[j]</code>，则左端点向内移动即<code>i++</code>；</li><li>否则，右端点向内移动即<code>j--</code></li><li>重新计算当前容纳水的值<code>cm</code>，如果<code>cm &gt; m</code>，更新目标最大值<code>m = cm</code></li><li>重复步骤2</li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><details open><summary>python3</summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxArea</span><span class="params">(self, height)</span>:</span></span><br><span class="line">        n = len(height)</span><br><span class="line">        i, j = <span class="number">0</span>, n<span class="number">-1</span></span><br><span class="line">        m = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j:</span><br><span class="line">            m = max(m, min(height[j], height[i]) * (j - i))</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> height[i] &lt; height[j]:</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                j -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> m</span><br></pre></td></tr></table></figure></details><details><summary>c++</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxArea</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; height)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = height.size();</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>, j = n - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> m = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; j) &#123;</span><br><span class="line">            <span class="keyword">int</span> cm = min(height[i], height[j]) * (j - i);</span><br><span class="line">            m = cm &gt; m ? cm : m;</span><br><span class="line">            <span class="keyword">if</span> (height[i] &lt; height[j])&#123;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> m;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></details><details><summary>java</summary><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxArea</span><span class="params">(<span class="keyword">int</span>[] height)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> m = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> j = height.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; j)&#123;</span><br><span class="line">            m = Math.max(m, Math.min(height[i], height[j]) * (j - i));</span><br><span class="line">            <span class="keyword">if</span>(height[i] &lt; height[j]) i++;</span><br><span class="line">            <span class="keyword">else</span> j--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> m;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 数组 </tag>
            
            <tag> 双指针 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数极限三：连续函数与一致连续函数</title>
      <link href="/2020/12/08/%E5%87%BD%E6%95%B0%E6%9E%81%E9%99%903/"/>
      <url>/2020/12/08/%E5%87%BD%E6%95%B0%E6%9E%81%E9%99%903/</url>
      
        <content type="html"><![CDATA[<h4 id="定义1：某点连续"><a href="#定义1：某点连续" class="headerlink" title="定义1：某点连续"></a>定义1：某点连续</h4><blockquote><p>设$f: [a,b] \to \mathbb{R} \quad (b&gt;a)$. 若有</p><script type="math/tex; mode=display">    \lim \limits_{x \to x_0} f(x) = f(x_0)</script><p>则称函数$f$在点$x_0 \in (a,b)$内连续。</p></blockquote><a id="more"></a><h4 id="定义2：左连续与右连续"><a href="#定义2：左连续与右连续" class="headerlink" title="定义2：左连续与右连续"></a>定义2：左连续与右连续</h4><blockquote><p>如果$f(x_0+) = f(x_0)$，则称函数$f$在$x_0$处右连续；如果$f(x_0-)=f(x_0)$，则称函数$f$在$x_0$处左连续。</p></blockquote><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>如果函数$f$与$g$在$x_0$处连续，那么$f\pm g$与$fg$都在$x_0$处连续，进一步，如果$g(x_0)\ne 0$，则$f/g$在$x_0$处也连续。</p></blockquote><p>证：利用函数极限的四则运算显然可得。<br>Q.E.D.</p><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>设函数$g$在$t_0$处连续，记$g(t_0)$为$x_0$，如果$f$在$x_0$处连续，那么复合函数$f \circ g$在$t_0$处连续。</p></blockquote><p>证：利用复合函数的极限定理可证。<br>Q.E.D.</p><h4 id="定义3：连续函数"><a href="#定义3：连续函数" class="headerlink" title="定义3：连续函数"></a>定义3：连续函数</h4><blockquote><p>设$I$是一个开区间，如果函数$f$在$I$上的每一点处都连续，则称$f$在$I$上连续；设$I=[a,b]$，称$f$在$I$上连续是指$f$在$(a,b)$上连续，且在$a$处右连续，在$b$处左连续。也称$f$是$I$上的连续函数。记$C(I)$为$I$上连续函数的全体。</p></blockquote><h4 id="定义4：间断点"><a href="#定义4：间断点" class="headerlink" title="定义4：间断点"></a>定义4：间断点</h4><blockquote><p>设$x_0$是函数$f$定义域中的一点，如果$f$在$x_0$处连续，则称$x_0$是$f$的连续点，否则称$x_0$是$f$的间断点。  <br /><br>间断点的类型有：<br>（1）如果$f(x_0-)$与$f(x_0+)$存在且有限，但$f(x_0-) \ne f(x_0+)$，则称$x_0$是$f$的跳跃点，差$|f(x_0+)-f(x_0-)|$称为$f$在这一点的跳跃；  <br /><br>（2）如果$f(x_0-)$与$f(x_0+)$存在且有限，且$f(x_0-)= f(x_0+)$，但不等于$f(x_0)$，则称$x_0$是$f$的可去间断点；   <br/><br>（3）如果$f(x_0-)$与$f(x_0+)$至少有一个不存在或不是有限的数，则称$x_0$是$f$的第二类间断点。  <br /><br>跳跃点和可去间断点统称为第一类间断点。  </p></blockquote><h4 id="定理3"><a href="#定理3" class="headerlink" title="定理3"></a>定理3</h4><blockquote><p>设$f$是区间$(a,b)$上的递增（减）函数，则$f$的间断点一定是跳跃点，而且跳跃点集是至多可数的。</p></blockquote><p>证：不妨设$f$在$(a,b)$递增，任取$x \in (a,b)$，集合$\{f(t)：t \in (a,x) \}$有上界，因为$f(x)$就是一个上界，从而集合必有上确界（记作$A$），显然有$A \le f(x)$，下面证明$f(x-)=A$。</p><p>对任意给定的$\varepsilon&gt;0$，且$A$又是上确界，从而存在一个$\delta&gt;0$，使得$a &lt; x-\delta$，并且有$A - \varepsilon &lt; f(x - \delta)$，又由于$f$是递增函数，从而</p><script type="math/tex; mode=display">    A - \varepsilon < f(x - \delta) \le f(t) \le A</script><p>对$t \in (x-\delta, x)$都成立，从而得出$\forall \varepsilon &gt; 0$，$\exists \delta &gt; 0$，使得$|f(t) - A| &lt; \varepsilon$对$t \in (x-\delta, x)$成立，因此$f(x-)=A$；同理可以证明$f(x+)$存在且有限，存在</p><script type="math/tex; mode=display">    f(x-) \le f(x) \le f(x+)</script><p>所以若$f(x-)=f(x+)$，则$f$在$x$处连续，否则当$f(x+) &gt; f(x-)$时，必是跳跃间断点。<br>设$E$表示函数$f$在$(a,b)$上的间断点的全体，任取$x \in E$，有$f(x-) &lt; f(x+)$，在$(f(x-),f(x+))$内任取一个有理点记作$r(x)$，则区间$E$中的元素$x$与$r(x)$一一对应，而$r(x)$是有理数的一个子集，从而$E$是可数的。</p><p>Q.E.D.</p><h4 id="定义5：一致连续"><a href="#定义5：一致连续" class="headerlink" title="定义5：一致连续"></a>定义5：一致连续</h4><blockquote><p>$I$是一个区间，设$f: I \to \mathbb{R}$，如果对$\forall \varepsilon &gt; 0$，存在$\delta &gt; 0$，使得当$x_1,x_2 \in I$且$|x_1-x_2|&lt;\delta$时，有$|f(x_1) - f(x_2)| &lt; \varepsilon$，则称函数$f$在区间$I$上是一致连续的。</p></blockquote><h4 id="定理4：一致连续的函数必定连续"><a href="#定理4：一致连续的函数必定连续" class="headerlink" title="定理4：一致连续的函数必定连续"></a>定理4：一致连续的函数必定连续</h4><blockquote><p>设$f: I \to \mathbb{R}$在其定义域$I$上一致连续，则函数$f$在$I$上的连续。</p></blockquote><p>证：由一致连续的定义可知，任取$x \in (x_1,x_2)$，如果$|x_1-x_2|&lt;\delta$，则$x_1,x_2 \in (x-\delta, x+\delta)$，从而由Cauchy收敛原理知$\lim \limits_{t \to x} f(t)$存在，又有$|f(t) - f(x)| &lt; \varepsilon$对$t \in (x-\delta, x+\delta)$成立，从而$\lim \limits_{t \to x} f(t) = f(x)$，所以函数$f$在$x$处连续。</p><p>Q.E.D.</p><h4 id="定理5"><a href="#定理5" class="headerlink" title="定理5"></a>定理5</h4><blockquote><p>设函数$f$在$[a,b]$上连续，那么$f$在$[a,b]$上一致连续。</p></blockquote><p>证：反证法。假设$f$不在$[a,b]$上一致连续，则存在一个$\varepsilon_0 &gt; 0$，对任意的$n \in \mathbb{N^*}$，总能找到$s_n,t_n\in [a,b]$，使得当$|s_n-t_n| &lt; 1/n$时，有</p><script type="math/tex; mode=display">    |f(s_n)-f(t_n)| \ge \varepsilon_0 \tag 1</script><p>由于$\{s_n\}$是一个在$[a,b]$内的数列，从而由列紧性定理可知，存在一个子列$\{s_{k_n}\}$，使得</p><script type="math/tex; mode=display">    s_{k_n} \to s^* \in [a,b]  \quad (n \to \infty)</script><p>由（1）可知</p><script type="math/tex; mode=display">    |f(s_{k_n}) - f(t_{k_n})| \ge \varepsilon_0 \tag 2</script><p>而$|s_{k_n} - t_{k_n}| &lt; 1/n$，令$n \to \infty$，可知$t_{k_n} \to s^*$，从而由函数$f$的连续性，令（2）式中$n \to \infty$，可得</p><script type="math/tex; mode=display">    0=|f(s^*)-f(s^*)| = |\lim \limits_{n \to \infty}f(s_{k_n}) - \lim \limits_{n \to \infty}f(t_{k_n})| = \lim \limits_{n \to \infty}|f(s_{k_n}) - f(t_{k_n})| \ge \varepsilon_0 > 0</script><p>矛盾。</p><p>Q.E.D.</p><h4 id="定理6"><a href="#定理6" class="headerlink" title="定理6"></a><span id="theorem6">定理6</span></h4><blockquote><p>有界闭区间上的连续函数必在该区间上有界。</p></blockquote><p>证：反证法。设函数$f$在$[a,b]$上连续且无上界，那么对任意的$n \in \mathbb{N^*}$，存在$x_n \in [a,b]$，使得$f(x_n) &gt; n$，又由于$x_n \in [a,b]$，从而存在一个子列$\{x_{k_n}\}$使得</p><script type="math/tex; mode=display">    x_{k_n} \to \xi \in [a,b] \quad (n \to \infty)</script><p>由函数$f$的连续性可知</p><script type="math/tex; mode=display">    \lim \limits_{n \to \infty} f(x_{k_n}) = f(\xi)</script><p>而$f(\xi)$是给定点的函数值，在连续函数中必有界，另一方面</p><script type="math/tex; mode=display">    f(x_{k_n}) > k_n \ge n</script><p>得到$\lim \limits_{n \to \infty} f(x_{k_n}) = \infty$，这与上面结论$f(\xi)$是有界矛盾。所以$f$在$[a,b]$有上界。<br>同理，可证$f$在$[a,b]$有下界。</p><p>Q.E.D.</p><h4 id="定理7"><a href="#定理7" class="headerlink" title="定理7"></a><span id="theorem7">定理7</span></h4><blockquote><p>设$f$在$[a,b]$上连续，记</p><script type="math/tex; mode=display">    M = \sup_{x \in [a,b]} f(x), \quad  m = \inf_{x \in [a,b]} f(x)</script><p>则必存在$x^<em>, x_</em> \in [a,b]$，使得</p><script type="math/tex; mode=display">    f(x^*) = M, \quad f(x_*) = m</script><p>即有界闭区间上的连续函数必能取到它在此区间上的最大值和最小值。</p></blockquote><p>证：由<a href="#theorem6">定理6</a>可知$m,M$是有限数，由上确界的定义可知，对任意的$n \in \mathbb{N^*}$，必存在$x_n \in [a,b]$，使得</p><script type="math/tex; mode=display">    M - \frac{1}{n} < f(x_n) \le M</script><p>从数列$\{x_n\}$中选出一个收敛子列$\{x_{k_n}\}$，不妨令$x_{k_n} \to x^* \in [a,b]$，而且有不等式</p><script type="math/tex; mode=display">    M - \frac{1}{k_n} < f(x_{k_n}) \le M</script><p>上式中令$n \to \infty$，由函数$f$的连续性可知</p><script type="math/tex; mode=display">    f(x_*) = \lim \limits_{x \to x^*} f(x) = M</script><p>同理，可证存在$x_<em> \in [a,b]$使得$f(x_</em>) = m$。</p><p>Q.E.D.</p><h4 id="定理8：零值定理"><a href="#定理8：零值定理" class="headerlink" title="定理8：零值定理"></a><span id="theorem8">定理8：零值定理</span></h4><blockquote><p>设$f$在$[a,b]$上连续，如果$f(a)f(b) &lt; 0$，则必存在一点$c \in [a,b]$，使得$f(c) = 0$。</p></blockquote><p>证：不妨设$f(a) &lt; 0 &lt; f(b)$，将区间$[a,b]$而等分，如果$f((a+b)/2)=0$，则$c=(a+b)/2$，如果$f((a+b)/2)&gt;0$，则令$a_1=a,b_1=(a+b)/2$，否则令$a_1=(a+b)/2,b_1=b$，可知$[a_1,b_1]$两端取值异号，对$[a_1,b_1]$重复上述过程，一直下去，可以得到一列闭区间$[a_k, b_k] (k=1,2,\cdots)$，满足 <br/><br>（1）$[a,b] \supset [a_1,b_1] \supset [a_2,b_2] \supset \cdots \supset [a_k,b_k] \supset \cdots$；<br/><br>（2）$0 &lt; b_k - a_k = \frac{1}{2^k}(b-a)$；<br/><br>（3）$f(a_k) &lt; 0 &lt; f(b_k)$</p><p>如果对某个$k$，有$f((a_k+b_k)/2)=0$，则$c=(a_k+b_k)/2$，否则由闭区间套定理可知，存在$c \in [a_k, b_k] (k=1,2,\cdots)$，使得$\lim \limits_{k\to \infty} a_k = \lim \limits_{k \to \infty} b_k = c$，由函数的连续性可知，令（3）式中的$k \to \infty$，得$f(c) \le 0 \le f(c)$，从而$f(c)=0$。</p><p>Q.E.D.</p><h4 id="定理9：介值定理"><a href="#定理9：介值定理" class="headerlink" title="定理9：介值定理"></a>定理9：介值定理</h4><blockquote><p>设$f$是区间$[a,b]$上得非常值连续函数，$\gamma$是介于$f(a),f(b)$之间得任何实数，则必存在$c \in [a,b]$，使得$f(c)=\gamma$。</p></blockquote><p>证：令$g(x) = f(x) - \gamma$，再由<a href="#theorem8">定理8</a>可证。</p><p>Q.E.D.</p><h4 id="定理10"><a href="#定理10" class="headerlink" title="定理10"></a>定理10</h4><blockquote><p>设非常值函数$f$在$I=[a,b]$上连续，那么$f$的值域$f(I)$是一个闭区间。</p></blockquote><p>证：由<a href="#theorem7">定理7</a>可知，$m$和$M$分别是$f(I)$的最小值和最大值，再由介值定理可知，$f(I)=[m,M]$。</p><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数极限 </tag>
            
            <tag> 连续函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode题解10：正则表达式匹配</title>
      <link href="/2020/12/05/leetcode%E9%A2%98%E8%A7%A310/"/>
      <url>/2020/12/05/leetcode%E9%A2%98%E8%A7%A310/</url>
      
        <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>该题来自于力扣<a href="https://leetcode-cn.com/problems/regular-expression-matching" target="_blank" rel="noopener">第10题</a></p><p>给你一个字符串<code>s</code>和一个字符规律<code>p</code>，请你来实现一个支持<code>&#39;.&#39;</code>和<code>&#39;*&#39;</code>的正则表达式匹配。</p><p><code>&#39;.&#39;</code>匹配任意单个字符<br><code>&#39;*&#39;</code>匹配零个或多个前面的那一个元素<br>所谓匹配，是要涵盖<strong>整个</strong>字符串<code>s</code>的，而不是部分字符串。</p><a id="more"></a><p>示例 1：</p><blockquote><p>输入：s = “aa” p = “a”<br>输出：false<br>解释：”a” 无法匹配 “aa” 整个字符串。</p><p>示例 2:<br>输入：s = “aa” p = “a<em>“<br>输出：true<br>解释：因为 ‘</em>‘ 代表可以匹配零个或多个前面的那一个元素, 在这里前面的元素就是 ‘a’。因此，字符串 “aa” 可被视为 ‘a’ 重复了一次。</p><p>示例 3：<br>输入：s = “ab” p = “.*“<br>输出：true<br>解释：”.<em>“ 表示可匹配零个或多个（’</em>‘）任意字符（’.’）。</p><p>示例 4：<br>输入：s = “aab” p = “c*a*b”<br>输出：true<br>解释：因为 ‘*’ 表示零个或多个，这里 ‘c’ 为 0 个, ‘a’ 被重复一次。因此可以匹配字符串 “aab”。</p></blockquote><p>示例 5：</p><blockquote><p>输入：s = “mississippi” p = “mis*is*p*.”<br>输出：false</p></blockquote><p>提示：</p><ul><li><code>0 &lt;= s.length &lt;= 20</code></li><li><code>0 &lt;= p.length &lt;= 30</code></li><li><code>s</code> 可能为空，且只包含从 <code>a-z</code> 的小写字母。</li><li><code>p</code> 可能为空，且只包含从 <code>a-z</code> 的小写字母，以及字符 <code>.</code> 和 <code>*</code>。</li><li>保证每次出现字符 `* 时，前面都匹配到有效的字符</li></ul><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><ul><li>该题可以采用状态机来解，类似的已在leetcode题解8中介绍了；该题还有其他解法——动态规划，用<code>dp[i][j]</code>来表示<code>s</code>的前<code>i</code>个字符与<code>p</code>的前<code>j</code>个字符是否匹配，那么可以注意到:</li><li>先不考虑<code>*</code>，如果<code>p[j]</code>与<code>s[i]</code>匹配到了，即要么<code>s[i]=p[j]</code>，要么<code>p[j]=&#39;.&#39;</code>，那么<code>dp[i][j]=dp[i-1][j-1]</code>，否则就为<code>false</code></li><li>再考虑<code>*</code>，即如果<code>p[j]=&#39;*&#39;</code><ul><li>如果<code>s[i]</code>与<code>p[j-1]</code>匹配<ul><li>则<code>*</code>前面的字符<code>p[j-1]</code>可能匹配<code>s</code>中多个，比如<code>s=aaa</code>，<code>p=a*</code>，这时<code>dp[i][j]=dp[i-1][j]</code></li><li>也可能<code>*</code>前面的字符不匹配<code>s</code>中的字符，比如<code>s=aa</code>，<code>p=aaa*</code>，这时<code>dp[i][j]=dp[i][j-2]</code></li></ul></li><li>如果<code>s[i]</code>与<code>p[j-1]</code>不匹配，那么<code>*</code>前面的字符不匹配<code>s</code>中的字符，这时<code>dp[i][j]=dp[i][j-2]</code></li></ul></li></ul><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><p>根据前面分析知道，麻烦在于<code>p[j]=&#39;*&#39;</code>时的处理，实际上无论<code>s[i]</code>与<code>p[j-1]</code>是否匹配到了，<code>*</code>前面的字符都可能不匹配<code>s</code>中的字符，也就是说<code>dp[i][j] = dp[i][j-2]</code>或者<code>dp[i][j] = dp[i][j-2] | dp[i-1][j]</code>；<br>所以实现的时候可以让<code>dp[i][j]</code>初始化为<code>false</code>，按照<code>dp[i][j]</code>的定义，<code>i,j</code>都必须大于0，这时可以让<code>dp[i][j]</code>表示两个空字符串是否匹配，当然设为<code>true</code>了，最后按照方程进行状态转移就可以了</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><details open><summary>python3</summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">match</span><span class="params">(self, schar, pchar)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> pchar == <span class="string">"."</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> pchar == schar</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isMatch</span><span class="params">(self, s, p)</span>:</span></span><br><span class="line">        m, n = len(s), len(p)</span><br><span class="line">        dp = [[<span class="literal">False</span>]*(n+<span class="number">1</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> range(m+<span class="number">1</span>)]</span><br><span class="line">        <span class="comment"># 空字符比较设为匹配，最终结果为dp[m][n]</span></span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(m+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>, n+<span class="number">1</span>):</span><br><span class="line">                <span class="keyword">if</span> p[j<span class="number">-1</span>] != <span class="string">'*'</span>:</span><br><span class="line">                    <span class="keyword">if</span> i &gt; <span class="number">0</span> <span class="keyword">and</span> self.match(s[i<span class="number">-1</span>], p[j<span class="number">-1</span>]):</span><br><span class="line">                        dp[i][j] |= dp[i<span class="number">-1</span>][j<span class="number">-1</span>]</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="comment"># 末位是'*'，则先与上`*`前面的字符不匹配`s`中字符的情况，</span></span><br><span class="line">                    <span class="comment"># 比如s=aa p=aaa*或s=ab p=abc*</span></span><br><span class="line">                    dp[i][j] |= dp[i][j<span class="number">-2</span>]</span><br><span class="line">                    <span class="comment"># 然后判断`s[i]`与`p[j-1]`匹配且`*`前面的字符匹配`s`中多个的情况</span></span><br><span class="line">                    <span class="keyword">if</span> i &gt; <span class="number">0</span> <span class="keyword">and</span> self.match(s[i<span class="number">-1</span>], p[j<span class="number">-2</span>]):</span><br><span class="line">                        dp[i][j] |= dp[i<span class="number">-1</span>][j]</span><br><span class="line">        <span class="keyword">return</span> dp[m][n]</span><br></pre></td></tr></table></figure></details><details><summary>c++</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">match</span><span class="params">(<span class="keyword">char</span> ch1, <span class="keyword">char</span> ch2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (ch2 == <span class="string">'.'</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> ch1 == ch2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isMatch</span><span class="params">(<span class="built_in">string</span> s, <span class="built_in">string</span> p)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> m = s.size(), n = p.size();</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; dp(m + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;(n + <span class="number">1</span>, <span class="literal">false</span>));</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (p[j - <span class="number">1</span>] != <span class="string">'*'</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (i &gt; <span class="number">0</span> &amp;&amp; match(s[i - <span class="number">1</span>], p[j - <span class="number">1</span>]))</span><br><span class="line">                        dp[i][j] |= dp[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    dp[i][j] |= dp[i][j - <span class="number">2</span>];</span><br><span class="line">                    <span class="keyword">if</span> (i &gt; <span class="number">0</span> &amp;&amp; match(s[i - <span class="number">1</span>], p[j - <span class="number">2</span>]))</span><br><span class="line">                        dp[i][j] |= dp[i - <span class="number">1</span>][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[m][n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></details><details><summary>java</summary><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">match</span><span class="params">(<span class="keyword">char</span> ch1, <span class="keyword">char</span> ch2)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(ch2 == <span class="string">'.'</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">return</span> ch1 == ch2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isMatch</span><span class="params">(String s, String p)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> m = s.length(), n = p.length();</span><br><span class="line">        <span class="keyword">boolean</span>[][] dp = <span class="keyword">new</span> <span class="keyword">boolean</span>[m+<span class="number">1</span>][n+<span class="number">1</span>];</span><br><span class="line">        </span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m+<span class="number">1</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;n+<span class="number">1</span>; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(p.charAt(j-<span class="number">1</span>) != <span class="string">'*'</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span> (i &gt; <span class="number">0</span> &amp;&amp; match(s.charAt(i-<span class="number">1</span>), p.charAt(j-<span class="number">1</span>)))</span><br><span class="line">                        dp[i][j] |= dp[i-<span class="number">1</span>][j-<span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    dp[i][j] |= dp[i][j-<span class="number">2</span>];</span><br><span class="line">                    <span class="keyword">if</span> (i &gt; <span class="number">0</span> &amp;&amp; match(s.charAt(i-<span class="number">1</span>), p.charAt(j-<span class="number">2</span>)))</span><br><span class="line">                        dp[i][j] |= dp[i-<span class="number">1</span>][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[m][n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 字符串 </tag>
            
            <tag> 正则表达式 </tag>
            
            <tag> 动态规划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode题解8：字符串转换整数 (atoi)</title>
      <link href="/2020/11/28/leetcode%E9%A2%98%E8%A7%A38/"/>
      <url>/2020/11/28/leetcode%E9%A2%98%E8%A7%A38/</url>
      
        <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>该题来自于<a href="https://leetcode-cn.com/problems/string-to-integer-atoi" target="_blank" rel="noopener">力扣第八题</a></p><p>请你来实现一个<code>atoi</code>函数，使其能将字符串转换成整数。</p><a id="more"></a><p>首先，该函数会根据需要丢弃无用的开头空格字符，直到寻找到第一个非空格的字符为止。接下来的转化规则如下：</p><ul><li>如果第一个非空字符为正或者负号时，则将该符号与之后面尽可能多的连续数字字符组合起来，形成一个有符号整数。</li><li>假如第一个非空字符是数字，则直接将其与之后连续的数字字符组合起来，形成一个整数。</li><li>该字符串在有效的整数部分之后也可能会存在多余的字符，那么这些字符可以被忽略，它们对函数不应该造成影响。</li></ul><p>注意：假如该字符串中的第一个非空格字符不是一个有效整数字符、字符串为空或字符串仅包含空白字符时，则你的函数不需要进行转换，即无法进行有效转换。</p><p>在任何情况下，若函数不能进行有效的转换时，请返回<code>0</code>。</p><p>提示：</p><ul><li>本题中的空白字符只包括空格字符<code>&#39; &#39;</code>。</li><li>假设我们的环境只能存储 32 位大小的有符号整数，那么其数值范围为 [−231,  231 − 1]。如果数值超过这个范围，请返回  INT_MAX (231 − 1) 或 INT_MIN (−231) 。</li></ul><p>示例 1:</p><blockquote><p>输入: “42”<br>输出: 42</p></blockquote><p>示例 2:</p><blockquote><p>输入: “   -42”<br>输出: -42<br>解释: 第一个非空白字符为 ‘-‘, 它是一个负号。<br>     我们尽可能将负号与后面所有连续出现的数字组合起来，最后得到 -42 。</p></blockquote><p>示例 3:</p><blockquote><p>输入: “4193 with words”<br>输出: 4193<br>解释: 转换截止于数字 ‘3’ ，因为它的下一个字符不为数字。</p></blockquote><p>示例 4:</p><blockquote><p>输入: “words and 987”<br>输出: 0<br>解释: 第一个非空字符是 ‘w’, 但它不是数字或正、负号。<br>     因此无法执行有效的转换。</p></blockquote><p>示例 5:</p><blockquote><p>输入: “-91283472332”<br>输出: -2147483648<br>解释: 数字 “-91283472332” 超过 32 位有符号整数范围。<br>     因此返回 INT_MIN (−231) 。</p></blockquote><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>思路是遍历字符串，对每个字符单独处理，字符类型一共有四种：空格(space)，+/-，数字(0-9)，其他(other)；根据这四种类型分别处理，然后判断边界即可。<br>这里采用另一种代码的写法，利用状态机，根据不同的字符输入进行不同的状态转换，从而获得结果，其本质和上面的思路道理是一样的，但是状态机在计算机邻域非常通用，比如说硬件verilog语言应用就很多，而且正则表达式匹配的原理也使用到的状态机，故此采用状态机的写法。<br>首先可以定义状态，分为开始状态（start）、符号状态（sign）、数字状态（number）和结束状态（end），根据输入字符的不同，各个状态的转移图如下：</p><pre class="mermaid">graph LR;S1[start]; S2[sign]; S3[number]; S4[end];S1 -- space --> S1;S1 -- +/- --> S2;S3 -- 0-9 --> S3;S3 -- space+/-other --> S4;S1 -- 0-9 --> S3;S2 -- 0-9 --> S3;S2 -- space +/- other --> S4;S1 -- other --> S4</pre><p>相应的状态转移表为：</p><div class="table-container"><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">space</th><th style="text-align:center">+/-</th><th style="text-align:center">0-9</th><th style="text-align:center">other</th></tr></thead><tbody><tr><td style="text-align:center">start</td><td style="text-align:center">start</td><td style="text-align:center">sign</td><td style="text-align:center">number</td><td style="text-align:center">end</td></tr><tr><td style="text-align:center">sign</td><td style="text-align:center">end</td><td style="text-align:center">end</td><td style="text-align:center">number</td><td style="text-align:center">end</td></tr><tr><td style="text-align:center">number</td><td style="text-align:center">end</td><td style="text-align:center">end</td><td style="text-align:center">number</td><td style="text-align:center">end</td></tr><tr><td style="text-align:center">end</td><td style="text-align:center">end</td><td style="text-align:center">end</td><td style="text-align:center">end</td><td style="text-align:center">end</td></tr></tbody></table></div><p>由状态转移表，根据输入的字符更换状态，并相应进行处理操作即可</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><details open><summary>python3</summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AtoiFSM</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.state = <span class="string">"start"</span></span><br><span class="line">        self.sign = <span class="number">1</span></span><br><span class="line">        self.val = <span class="number">0</span></span><br><span class="line">        self.table = &#123;</span><br><span class="line">                      <span class="comment">#   space    +/-      0-9     other</span></span><br><span class="line">            <span class="string">"start"</span> :   [<span class="string">"start"</span>, <span class="string">"sign"</span>, <span class="string">"number"</span>, <span class="string">"end"</span>],</span><br><span class="line">            <span class="string">"sign"</span>  :   [<span class="string">"end"</span>,   <span class="string">"end"</span>,  <span class="string">"number"</span>, <span class="string">"end"</span>],</span><br><span class="line">            <span class="string">"number"</span>:   [<span class="string">"end"</span>,   <span class="string">"end"</span>,  <span class="string">"number"</span>, <span class="string">"end"</span>],</span><br><span class="line">            <span class="string">"end"</span>   :   [<span class="string">"end"</span>,   <span class="string">"end"</span>,  <span class="string">"end"</span>,    <span class="string">"end"</span>], </span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_get_state_transfer_id</span><span class="params">(self, c)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> c == <span class="string">" "</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">elif</span> c == <span class="string">"+"</span> <span class="keyword">or</span> c == <span class="string">"-"</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> c.isdigit():</span><br><span class="line">            <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self, c)</span>:</span></span><br><span class="line">        <span class="comment"># 状态转换</span></span><br><span class="line">        self.state = self.table[self.state][self._get_state_transfer_id(c)]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.state == <span class="string">"sign"</span>:</span><br><span class="line">            self.sign = <span class="number">1</span> <span class="keyword">if</span> c == <span class="string">"+"</span> <span class="keyword">else</span> <span class="number">-1</span></span><br><span class="line">        <span class="keyword">elif</span> self.state == <span class="string">"number"</span>:</span><br><span class="line">            self.val = self.val * <span class="number">10</span> + int(c)</span><br><span class="line">            self.val = min(self.val, <span class="number">2</span>**<span class="number">31</span><span class="number">-1</span>) <span class="keyword">if</span> self.sign == <span class="number">1</span> <span class="keyword">else</span> min(self.val, <span class="number">2</span>**<span class="number">31</span>)</span><br><span class="line">        <span class="keyword">elif</span> self.state == <span class="string">"end"</span>:</span><br><span class="line">            <span class="keyword">return</span> self.sign * self.val</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">myAtoi</span><span class="params">(self, s)</span>:</span></span><br><span class="line">        fsm = AtoiFSM()</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> s:</span><br><span class="line">            res = fsm.run(c)</span><br><span class="line">            <span class="keyword">if</span> res <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">return</span> res</span><br><span class="line">        <span class="keyword">return</span> fsm.sign * fsm.val</span><br></pre></td></tr></table></figure></details><details><summary>c++</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AtoiFSM</span> &#123;</span></span><br><span class="line">    <span class="built_in">string</span> state = <span class="string">"start"</span>;</span><br><span class="line">    <span class="built_in">unordered_map</span>&lt;<span class="built_in">string</span>, <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&gt; <span class="built_in">map</span> = &#123;</span><br><span class="line">        &#123;<span class="string">"start"</span>, &#123;<span class="string">"start"</span>, <span class="string">"sign"</span>, <span class="string">"number"</span>, <span class="string">"end"</span>&#125; &#125;,</span><br><span class="line">        &#123;<span class="string">"sign"</span>, &#123;<span class="string">"end"</span>,   <span class="string">"end"</span>,  <span class="string">"number"</span>, <span class="string">"end"</span>&#125;&#125;,</span><br><span class="line">        &#123;<span class="string">"number"</span>, &#123;<span class="string">"end"</span>,   <span class="string">"end"</span>,  <span class="string">"number"</span>, <span class="string">"end"</span>&#125;&#125;,</span><br><span class="line">        &#123;<span class="string">"end"</span>, &#123;<span class="string">"end"</span>,   <span class="string">"end"</span>,  <span class="string">"end"</span>, <span class="string">"end"</span>&#125;&#125;</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> val = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> sign = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">get_state_transfer_id</span><span class="params">(<span class="keyword">char</span> c)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">' '</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">'+'</span> || c == <span class="string">'-'</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">isdigit</span>(c)) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">(<span class="keyword">char</span> c)</span> </span>&#123;</span><br><span class="line">        state = <span class="built_in">map</span>[state][get_state_transfer_id(c)];</span><br><span class="line">        <span class="keyword">if</span> (state == <span class="string">"sign"</span>) sign = c == <span class="string">'+'</span> ? <span class="number">1</span> : <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (state == <span class="string">"number"</span>) &#123;</span><br><span class="line">            val = val * <span class="number">10</span> + c - <span class="string">'0'</span>;</span><br><span class="line">            val = sign == <span class="number">1</span> ? min(val, (<span class="keyword">long</span> <span class="keyword">long</span>) INT_MAX) : min(val, - (<span class="keyword">long</span> <span class="keyword">long</span>) INT_MIN);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">myAtoi</span><span class="params">(<span class="built_in">string</span> str)</span> </span>&#123;</span><br><span class="line">        AtoiFSM fsm = AtoiFSM();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> c : str) &#123;</span><br><span class="line">            fsm.run(c);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>)(fsm.sign * fsm.val);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></details><details><summary>java</summary><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AtoiFSM</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String state = <span class="string">"start"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> sign = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">long</span> val = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, String[]&gt; table = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AtoiFSM</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        table.put(<span class="string">"start"</span>, <span class="keyword">new</span> String[]&#123;<span class="string">"start"</span>, <span class="string">"sign"</span>, <span class="string">"number"</span>, <span class="string">"end"</span>&#125;);</span><br><span class="line">        table.put(<span class="string">"sign"</span>, <span class="keyword">new</span> String[]&#123;<span class="string">"end"</span>, <span class="string">"end"</span>, <span class="string">"number"</span>, <span class="string">"end"</span>&#125;);</span><br><span class="line">        table.put(<span class="string">"number"</span>, <span class="keyword">new</span> String[]&#123;<span class="string">"end"</span>, <span class="string">"end"</span>, <span class="string">"number"</span>, <span class="string">"end"</span>&#125;);</span><br><span class="line">        table.put(<span class="string">"end"</span>, <span class="keyword">new</span> String[]&#123;<span class="string">"end"</span>, <span class="string">"end"</span>, <span class="string">"end"</span>, <span class="string">"end"</span>&#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">getStateTransferID</span><span class="params">(<span class="keyword">char</span> c)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">' '</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">'+'</span> || c == <span class="string">'-'</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (Character.isDigit(c))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(<span class="keyword">char</span> c)</span></span>&#123;</span><br><span class="line">        state = table.get(state)[getStateTransferID(c)];</span><br><span class="line">        <span class="keyword">if</span> (state.equals(<span class="string">"sign"</span>)) &#123;</span><br><span class="line">            sign = c == <span class="string">'+'</span> ? <span class="number">1</span> : -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (state.equals(<span class="string">"number"</span>))&#123;</span><br><span class="line">            val = val * <span class="number">10</span> + c - <span class="string">'0'</span>;</span><br><span class="line">            val = sign == <span class="number">1</span> ? Math.min(val, Integer.MAX_VALUE) : Math.min(val, - (<span class="keyword">long</span>) Integer.MIN_VALUE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> AtoiFSM fsm = <span class="keyword">new</span> AtoiFSM();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">myAtoi</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.length(); i++)&#123;</span><br><span class="line">            fsm.run(s.charAt(i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>) (fsm.sign * fsm.val);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 字符串 </tag>
            
            <tag> 状态机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数极限二：其它类型的函数极限</title>
      <link href="/2020/11/27/%E5%87%BD%E6%95%B0%E6%9E%81%E9%99%902/"/>
      <url>/2020/11/27/%E5%87%BD%E6%95%B0%E6%9E%81%E9%99%902/</url>
      
        <content type="html"><![CDATA[<h4 id="定义1：自变量趋于-infty-的极限"><a href="#定义1：自变量趋于-infty-的极限" class="headerlink" title="定义1：自变量趋于$+\infty$的极限"></a>定义1：自变量趋于$+\infty$的极限</h4><blockquote><p>若对$\forall \varepsilon&gt;0, \exists A &gt; 0$，使得当$x &gt; A$时，有$|f(x) - l| &lt; \varepsilon$，此时称在正无穷处函数有极限$l$，记为</p><script type="math/tex; mode=display">    f(+\infty) = \lim \limits_{x \to +\infty} f(x) = l</script><p>或简单记作</p><script type="math/tex; mode=display">    f(x) \to l (x \to +\infty)</script></blockquote><a id="more"></a><p>类似地可以定义$f(-\infty) = \lim \limits_{x \to -\infty} f(x) = l$</p><h4 id="定义2：自变量趋于-infty-的极限"><a href="#定义2：自变量趋于-infty-的极限" class="headerlink" title="定义2：自变量趋于$\infty$的极限"></a>定义2：自变量趋于$\infty$的极限</h4><blockquote><p>若对$\forall \varepsilon&gt;0, \exists A &gt; 0$，使得当$|x| &gt; A$时，有$|f(x) - l| &lt; \varepsilon$，此时称当$x$趋于无穷时，函数有极限$l$，记为</p><script type="math/tex; mode=display">    f(\infty) = \lim \limits_{x \to \infty} f(x) = l</script><p>或简单记作</p><script type="math/tex; mode=display">    f(x) \to l (x \to \infty)</script></blockquote><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>$\lim \limits_{x \to \infty} f(x) = l$当且仅当</p><script type="math/tex; mode=display">    f(-\infty) = f(+\infty) = l</script></blockquote><p>证：必要性和充分性都由定义显然。<br>Q.E.D.</p><h4 id="定义3：无穷大"><a href="#定义3：无穷大" class="headerlink" title="定义3：无穷大"></a>定义3：无穷大</h4><blockquote><p>设$x_0$是一个实数，函数$f(x)$在$x_0$的一个近旁（可能除$x_0$之外）有定义，若对$\forall A&gt;0, \exists \delta &gt; 0$，使得当$0&lt; |x - x_0| &lt; \delta$时，有$|f(x)| &gt; A$，则称函数$f$趋向于无穷大，记作</p><script type="math/tex; mode=display">    \lim \limits_{x \to x_0} f(x) = \infty</script><p>或者</p><script type="math/tex; mode=display">    f(x) \to \infty (x \to x_0)</script></blockquote><p>类似地可以定义</p><blockquote><script type="math/tex; mode=display">    \begin{aligned}    \lim \limits_{x \to x_0} f(x) = +\infty \quad \lim \limits_{x \to x_0} f(x) = -\infty \\    \lim \limits_{x \to -\infty} f(x) = \infty \quad \lim \limits_{x \to +\infty} f(x) = \infty        \end{aligned}</script></blockquote><p>等等</p><h4 id="定义4：无穷小"><a href="#定义4：无穷小" class="headerlink" title="定义4：无穷小"></a>定义4：无穷小</h4><blockquote><p>设$x_0$是一个实数，函数$f(x)$在$x_0$的一个近旁（可能除$x_0$之外）有定义，若对$\forall \varepsilon&gt;0, \exists \delta &gt; 0$，使得当$0&lt; |x - x_0| &lt; \delta$时，有$|f(x)| &lt; \varepsilon$，则称函数$f$趋向于无穷小，记作</p><script type="math/tex; mode=display">    \lim \limits_{x \to x_0} f(x) = 0</script><p>或者</p><script type="math/tex; mode=display">    f(x) \to 0 (x \to x_0)</script></blockquote><p>类似地可以定义</p><blockquote><script type="math/tex; mode=display">    \lim \limits_{x \to -\infty} f(x) = 0 \quad \lim \limits_{x \to +\infty} f(x) = 0</script></blockquote><p>等等</p><h4 id="定义5"><a href="#定义5" class="headerlink" title="定义5"></a>定义5</h4><blockquote><p>设当$x \to x_0$时，函数$f$和$g$都是无穷小，并且$g$在$x_0$的一个无穷小近旁（除$x_0$外）不等于0 <br /><br>（1）如果$\lim \limits_{x \to x_0} \frac{f(x)}{g(x)} = 0$，则称$f$是比$g$更高阶的无穷小； <br /><br>（2） 如果$\lim \limits_{x \to x_0} \frac{f(x)}{g(x)} = l \ne 0$，则称$f$与$g$是同阶的无穷小；<br /><br>（3） 如果$\lim \limits_{x \to x_0} \frac{f(x)}{g(x)} = 1$，则称$f$与$g$是等价的无穷小，记作</p><script type="math/tex; mode=display">    f \sim g \quad (x \to x_0)</script><p>（4） 当$x \to x_0$时，如果$f$与$(x-x_0)^\alpha$是同阶无穷小，则称$f$为$\alpha$阶的无穷小</p></blockquote><p>类似地，可以定义，如果$f$与$g$都是无穷大</p><blockquote><p>（1） 如果$\lim \limits_{x \to x_0} \frac{f(x)}{g(x)} = 0$，则称$g$是比$f$更高阶的无穷大；<br /><br>（2） 如果$\lim \limits_{x \to x_0} \frac{f(x)}{g(x)} = l \ne 0$，则称$f$与$g$是同阶的无穷大； <br /><br>（3） 如果$\lim \limits_{x \to x_0} \frac{f(x)}{g(x)} = 1$，则称$f$与$g$是等价的无穷大</p></blockquote><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>如果当$x \to x_0$（$x_0$可以是$\pm\infty$）时，$f,g$是等价的无穷小或无穷大，则 <br /><br>（1） $\lim \limits_{x \to x_0} f(x) h(x) = \lim \limits_{x \to x_0} g(x)h(x)$ <br /><br>（2） $\lim \limits_{x \to x_0} \frac{f(x)}{h(x)} = \lim \limits_{x \to x_0} \frac{g(x)}{h(x)}$ <br /></p></blockquote><p>证：（1） $\lim \limits_{x \to x_0} f(x) h(x) = \lim \limits_{x \to x_0} g(x) h(x) \frac{f(x)}{g(x)} = \lim \limits_{x \to x_0} g(x) h(x)$；<br /><br>（2） 证明与（1）一样。</p><p>Q.E.D.</p><h4 id="定义6：-O-与-o-表示法"><a href="#定义6：-O-与-o-表示法" class="headerlink" title="定义6：$O$与$o$表示法"></a>定义6：$O$与$o$表示法</h4><blockquote><p>设函数$f$与$g$在$x_0$的近旁（$x_0$除外）有定义，并且$g(x)\ne 0$ <br /><br>（1）当$x \to x_0$，若比值$f(x)/g(x)$保持有界，即存在一个正常数$M$，使得$|f(x)|\le M|g(x)|$，就用$f(x) = O(g(x))(x\to x_0)$来表示；<br /><br>（2）当$x \to x_0$，若比值$f(x)/g(x)$是一个无穷小，即</p><script type="math/tex; mode=display">    \lim \limits_{x \to x_0} \frac{f(x)}{g(x)} = 0</script><p>就用$f(x) = o(g(x))(x\to x_0)$表示 <br /><br>特别地，$f(x)=O(1)(x\to x_0)$表示有界的函数，$g(x)=o(1)(x \to x_0)$表示一个无穷小。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数极限 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode题解5：最长回文子串</title>
      <link href="/2020/11/21/leetcode%E9%A2%98%E8%A7%A35/"/>
      <url>/2020/11/21/leetcode%E9%A2%98%E8%A7%A35/</url>
      
        <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>该题来自于<a href="https://leetcode-cn.com/problems/longest-palindromic-substring" target="_blank" rel="noopener">力扣第五题</a></p><p>给定一个字符串 s，找到 s 中最长的回文子串。你可以假设 s 的最大长度为 1000。</p><a id="more"></a><p>示例 1：</p><blockquote><p>输入: “babad”<br>输出: “bab”<br>注意: “aba” 也是一个有效答案。</p></blockquote><p>示例 2：</p><blockquote><p>输入: “cbbd”<br>输出: “bb”</p></blockquote><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>关键思路是如何尽量少的遍历？注意到要判断$a_1a_2a_3 \cdots a_{n-1} a_n$是否是回文串，等价于判断$a_2a_3 \cdots a_{n-1}$是否是回文串，而且$a_1=a_n$是否成立，如果两个都成立，那么原字符串是回文串，否则就不是；所以解法思路是动态规划，<br>状态：<code>dp[i][j]</code>表示下标从<code>i</code>到<code>j</code>构成的子串是否是回文串<br>状态转移方程：<code>dp[i][j] = dp[i+1][j-1] &amp;&amp; a[i]==a[j]</code></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><details open><summary>python3</summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestPalindrome</span><span class="params">(self, s)</span>:</span></span><br><span class="line">        n = len(s)</span><br><span class="line">        dp = [[<span class="literal">False</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(n)] <span class="keyword">for</span> j <span class="keyword">in</span> range(n)]</span><br><span class="line">        max_len = <span class="number">0</span></span><br><span class="line">        start, end = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n<span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(i, n):</span><br><span class="line">                <span class="keyword">if</span> i == j:</span><br><span class="line">                    dp[i][j] = <span class="literal">True</span></span><br><span class="line">               </span><br><span class="line">                <span class="keyword">elif</span> s[i] == s[j]:</span><br><span class="line">                    <span class="keyword">if</span> j - i &gt; <span class="number">1</span>:</span><br><span class="line">                        dp[i][j] = dp[i+<span class="number">1</span>][j<span class="number">-1</span>]</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        dp[i][j] = <span class="literal">True</span></span><br><span class="line">                        </span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    dp[i][j] = <span class="literal">False</span></span><br><span class="line">                    </span><br><span class="line">                <span class="keyword">if</span> dp[i][j] <span class="keyword">and</span> max_len &lt; j - i + <span class="number">1</span>:</span><br><span class="line">                    start = i</span><br><span class="line">                    end = j + <span class="number">1</span></span><br><span class="line">                    max_len = j - i + <span class="number">1</span> </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> s[start:end]</span><br></pre></td></tr></table></figure></details><details><summary>c++</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">longestPalindrome</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = s.size();</span><br><span class="line">        <span class="keyword">int</span> maxLen = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> start = <span class="number">0</span>, end = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; dp(n, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;(n, <span class="literal">false</span>));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; n; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i == j) dp[i][j] = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (s[i] == s[j]) &#123;</span><br><span class="line">                    <span class="keyword">if</span> ((j - i) &gt; <span class="number">1</span>) dp[i][j] = dp[i + <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">                    <span class="keyword">else</span> dp[i][j] = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    dp[i][j] = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (dp[i][j] &amp;&amp; (j-i+<span class="number">1</span> &gt; maxLen)) &#123;</span><br><span class="line">                    maxLen = max(j - i + <span class="number">1</span>, maxLen);</span><br><span class="line">                    start = i;</span><br><span class="line">                    end = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s.substr(start, maxLen);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></details><details><summary>java</summary><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">longestPalindrome</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = s.length();</span><br><span class="line">        <span class="keyword">int</span> maxLen = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> start = <span class="number">0</span>, end = <span class="number">0</span>;</span><br><span class="line">        Boolean[][] dp = <span class="keyword">new</span> Boolean[n][n];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n-<span class="number">1</span>; i&gt;=<span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i; j&lt;n; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(i == j) dp[i][j] = <span class="keyword">true</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(s.charAt(i) == s.charAt(j))&#123;</span><br><span class="line">                    <span class="keyword">if</span>(j - i &gt; <span class="number">1</span>) dp[i][j] = dp[i+<span class="number">1</span>][j-<span class="number">1</span>];</span><br><span class="line">                    <span class="keyword">else</span> dp[i][j] = <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> dp[i][j] = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (dp[i][j] &amp;&amp; ((j - i + <span class="number">1</span>) &gt; maxLen))&#123;</span><br><span class="line">                    maxLen = j - i + <span class="number">1</span>;</span><br><span class="line">                    start = i;</span><br><span class="line">                    end = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s.substring(start, end+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 字符串 </tag>
            
            <tag> 动态规划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数极限一：函数极限定义与基本性质</title>
      <link href="/2020/11/17/%E5%87%BD%E6%95%B0%E6%9E%81%E9%99%901/"/>
      <url>/2020/11/17/%E5%87%BD%E6%95%B0%E6%9E%81%E9%99%901/</url>
      
        <content type="html"><![CDATA[<h4 id="定义1：函数在某点处极限"><a href="#定义1：函数在某点处极限" class="headerlink" title="定义1：函数在某点处极限"></a>定义1：函数在某点处极限</h4><blockquote><p>设函数$f$在点$x_0$的近旁有定义，但$x_0$这一点自身可以是例外，设$l$是一个实数，如果对$\forall \varepsilon &gt; 0$，$\exists \delta&gt;0$，使得对一切满足等式$0 &lt; |x-x_0| &lt; \delta$都有</p><script type="math/tex; mode=display">    |f(x) - l| < \varepsilon</script><p>则称当$x$趋于点$x_0$时函数$f$有极限$l$，记作</p><script type="math/tex; mode=display">    \lim \limits_{x \to x_0} f(x) = l</script><p>也可以记作</p><script type="math/tex; mode=display">    f(x) \to l (x \to x_0)</script></blockquote><a id="more"></a><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a><span id="theorem1">定理1</span></h4><blockquote><p>函数$f$在$x_0$处有极限$l$的充分必要条件是，对任何一个收敛于$x_0$的数列$\{x_n \ne x_0 : n=1,2,3,\cdots\}$，有数列$\{f(x_n)\}$有极限$l$。</p></blockquote><p>证：<strong>必要性</strong>。设$\lim \limits_{x \to x_0} f(x)= l$，则对任给的$\varepsilon&gt;0$，存在一个$\delta &gt; 0$，使得当$0 &lt; |x - x_0| &lt; \delta$，有$|f(x) - l| &lt; \varepsilon$，对于取定的$\delta$，由于$\lim \limits_{n \to \infty} x_n = x_0$，所以存在$N \in \mathbb{N^*}$，使得当$n &gt; N$时，有$0 &lt; |x_n - x_0| &lt; \delta$，从而有</p><script type="math/tex; mode=display">    |f(x_n) - l| < \varepsilon</script><p>所以$\lim \limits_{n \to \infty} f(x_n) = l$。<br><strong>充分性</strong>。反证法，假设$\lim \limits_{x \to x_0} f(x) = l$不成立，即存在$\varepsilon_0 &gt; 0$，使得对任意的正整数$n$，存在点$x_n$，使得当$0 &lt; |x_n - x_0| &lt; \frac{1}{n}$，有$|f(x_n) - l| \ge \varepsilon_0 &gt; 0$，从而找到了一个数列$\{x_n \ne x_0: n=1,2,3,\cdots\}$，虽然它收敛于$x_0$，但是$\lim \limits_{n \to \infty} f(x_n) \ne l$。</p><h4 id="定理2：函数极限唯一性"><a href="#定理2：函数极限唯一性" class="headerlink" title="定理2：函数极限唯一性"></a>定理2：函数极限唯一性</h4><blockquote><p>若$\lim \limits_{x \to x_0} f(x)$存在，则它是唯一的</p></blockquote><p>证：若$\lim \limits_{x \to x_0} f(x)$存在，可知对任意收敛于$x_0$的数列$\{x_n \ne x_0 : n=1,2,3,\cdots\}$，有</p><script type="math/tex; mode=display">    \lim \limits_{n\to\infty} f(x_n) = \lim \limits_{x \to x_0} f(x)</script><p>而数列极限是唯一的，所以函数极限也是唯一的。<br>Q.E.D.</p><h4 id="定理3"><a href="#定理3" class="headerlink" title="定理3"></a>定理3</h4><blockquote><p>若$f$在$x_0$处有极限，则$f$在$x_0$的近旁是有界的，也就是说存在整数$M$，实数$\delta &gt; 0$，使得当$0 &lt; |x - x_0| &lt; \delta$时，有$|f(x)| &lt; M$。</p></blockquote><p>证：设$\lim \limits_{x \to x_0} f(x) = l$。由函数极限定义可知，对$1 &gt; 0$，存在$\delta &gt; 0$，使得当$0 &lt; |x - x_0| &lt; \delta$时，有</p><script type="math/tex; mode=display">    |f(x) - l| < 1</script><p>从而有</p><script type="math/tex; mode=display">    |f(x)| \le |l| + |f(x) - l| < 1 + |l|</script><p>从而令$M = 1 + |l|$就满足条件了。<br>Q.E.D.</p><h4 id="定理4：函数极限四则运算"><a href="#定理4：函数极限四则运算" class="headerlink" title="定理4：函数极限四则运算"></a>定理4：函数极限四则运算</h4><blockquote><p>设$\lim \limits_{x \to x_0} f(x)$与$\lim \limits_{x \to x_0}g(x)$存在，那么 <br/><br>（1）$\lim \limits_{x \to x_0} (f \pm g)(x) = \lim \limits_{x \to x_0} f(x) \pm \lim \limits_{x \to x_0} g(x)$ <br/><br>（2）$\lim \limits_{x \to x_0} fg(x) = \lim \limits_{x \to x_0} f(x) \cdot \lim \limits_{x \to x_0} g(x)$ <br/><br>（3）$\lim \limits_{x \to x_0} \frac{f}{g}(x) = \frac{\lim \limits_{x \to x_0} f(x)}{\lim \limits_{x \to x_0} g(x)}$，其中$\lim \limits_{x \to x_0} g(x) \ne 0$</p></blockquote><p>证：由<a href="#theorem1">定理1</a>和数列极限的四则运算很容易证明<br>Q.E.D.</p><h4 id="定理5：夹逼原理"><a href="#定理5：夹逼原理" class="headerlink" title="定理5：夹逼原理"></a>定理5：夹逼原理</h4><blockquote><p>设函数$f,g$与$h$在点$x_0$的近旁（点$x_0$自身可能是例外）满足不等式</p><script type="math/tex; mode=display">    f(x) \le h(x) \le g(x)</script><p>如果$f$与$g$在$x_0$处有相同的极限$l$，那么函数$h$在$x_0$处也有极限$l$。</p></blockquote><p>证：由<a href="#theorem1">定理1</a>和数列极限夹逼原理很容易证明<br>Q.E.D.</p><h4 id="定理6"><a href="#定理6" class="headerlink" title="定理6"></a>定理6</h4><blockquote><p>设存在$r&gt;0$，使得当$0&lt;|x-x_0|&lt;r$时，有不等式$f(x) \le g(x)$恒成立，又设这两个函数$x_0$处都有极限，那么</p><script type="math/tex; mode=display">    \lim \limits_{x \to x_0} f(x) \le \lim \limits_{x \to x_0} g(x)</script></blockquote><p>证：由<a href="#theorem1">定理1</a>和数列极限大小关系很容易证明<br>Q.E.D.</p><h4 id="定理7：Cauchy收敛原理"><a href="#定理7：Cauchy收敛原理" class="headerlink" title="定理7：Cauchy收敛原理"></a>定理7：Cauchy收敛原理</h4><blockquote><p>函数$f$在$x_0$处有极限当且仅当对$\forall \varepsilon &gt; 0$，$\exists \delta &gt; 0$，使得对$\forall x_1,x_2 \in B_\delta(\check x_0)$，有$|f(x_1) - f(x_2)| &lt; \varepsilon$。</p></blockquote><p>证：<strong>必要性</strong>。设$\lim \limits_{x \to x_0} f(x) = l$，可知对$\forall \varepsilon &gt; 0$，$\exists \delta &gt; 0$，使得当$x \in B_\delta(\check x_0)$时，有</p><script type="math/tex; mode=display">    |f(x) - l| < \frac{\varepsilon}{2}</script><p>所以任取$x_1,x_2 \in B_\delta(\check x_0)$，有</p><script type="math/tex; mode=display">    \begin{aligned}    |f(x_1) - l| < \frac{\varepsilon}{2} \\    |f(x_2) - 1| < \frac{\varepsilon}{2}        \end{aligned}</script><p>显然有</p><script type="math/tex; mode=display">    |f(x_1) - f(x_2)| < |f(x_1) - l| + |l - f(x_2)| < \varepsilon</script><p><strong>充分性</strong>。设$\{x_n \ne x_0, n \in \mathbb{N^{<em>}}\}$是任意一个收敛于$x_0$的数列，可知对取定的$\delta$，存在$N \in \mathbb{N^</em>}$，使得当$m,n&gt;N$时，有$0&lt;|x_n - x_0| &lt; \delta, 0&lt;|x_m - x_0| &lt; \delta$，此时有</p><script type="math/tex; mode=display">    |f(x_n) - f(x_m)| < \varepsilon</script><p>可知$\{f(x_n)\}$是基本列，由数列的Cauchy收敛原理可知，数列$\{f(x_n)\}$收敛，不妨设该数列收敛于$l_x$；<br>若能证明无论$\{x_n\}$怎么取，数列$\{f(x_n)\}$收敛于相同的点，则再由<a href="#theorem1">定理1</a>可知，函数$f$在$x_0$出也收敛。不妨设$\{y_n\}$是另一个收敛于$x_0$的数列，自然数列$\{f(y_n)\}$也收敛，不妨设收敛于$l_y$，构造数列$\{z_n\}$：</p><script type="math/tex; mode=display">    x_1,y_1,x_2,y_2,\cdots,x_n,y_n,\cdots</script><p>可知$z_n \ne x_0(n \in \mathbb{N^*})$，且$z_n \to x_0( n \to \infty)$，可知数列$\{f(z_n)\}$也有极限，记为$l$，又因为$\{f(x_n)\}$和$\{f(y_n)\}$都是$\{f(z_n)\}$的子列，所以有</p><script type="math/tex; mode=display">    l_x = l_y = l</script><p>Q.E.D.</p><h4 id="定理8"><a href="#定理8" class="headerlink" title="定理8"></a>定理8</h4><blockquote><p>设$\lim \limits_{x \to x_0} f(x) = l,\lim \limits_{t \to t_0} g(t) = x_0$，如果在$t_0$的某个邻域$B_\eta(t_0)$内有$g(t) \ne x_0$，则</p><script type="math/tex; mode=display">    \lim \limits_{t \to t_0} f(g(t)) = l</script></blockquote><p>证。由$\lim \limits_{x \to x_0} f(x) = l$，可知对$\forall \varepsilon &gt; 0, \exists \delta &gt; 0$，使得$0 &lt; |x-x_0| &lt; \delta$，有$|f(x) - l| &lt; \varepsilon$；对给定的$\delta&gt;0$，由$\lim \limits_{t \to t_0} g(t) = x_0$，可知存在$\eta_1 &gt; 0$，使得$0&lt;|t - t_0| &lt; \eta_1$时，有$0&lt; |g(t) - x_0| &lt; \delta$，从而有$|f(g(t)) - l| &lt; \varepsilon$，取$\sigma = \min(\eta, \eta_1)$，即对$\forall \varepsilon &gt; 0, \exists \sigma &gt; 0$，使得$0&lt; |t-t_0| &lt; \sigma$时，有$|f(g(t)) - l| &lt; \varepsilon$。</p><p>Q.E.D.</p><h4 id="定义2：单边极限"><a href="#定义2：单边极限" class="headerlink" title="定义2：单边极限"></a>定义2：单边极限</h4><blockquote><p>设函数$f$在$(x_0,x_0+r)$（$r$是一个确定的正数）上有定义，若$\forall \varepsilon &gt; 0, \exists \delta \in (0, r)$，使得当$0 &lt; x - x_0 &lt; \delta$时，有</p><script type="math/tex; mode=display">    |f(x) - l| < \varepsilon</script><p>则称$l$为$f$在$x_0$处的右极限，表示为</p><script type="math/tex; mode=display">    l = \lim \limits_{x \to x_0^+} f(x) = l</script><p>在右极限存在的情况下，也将右极限记为$f(x_0+)$</p></blockquote><p>类似地，可以定义$f$在$x_0$处的左极限$f(x_0-) = \lim \limits_{x \to x_0^-} f(x)$；左右极限统称为单边极限。</p><h4 id="定理9"><a href="#定理9" class="headerlink" title="定理9"></a>定理9</h4><blockquote><p>函数$f$在$x_0$的某个去心邻域内处有定义，则$\lim \limits_{x \to x_0} f(x)$存在的充分必要条件是</p><script type="math/tex; mode=display">    f(x_0+) = f(x_0-)</script></blockquote><p>证明有极限与左右极限的定义显然。</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 函数极限 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode题解4：寻找两个正序数组的中位数</title>
      <link href="/2020/11/14/leetcode%E9%A2%98%E8%A7%A34/"/>
      <url>/2020/11/14/leetcode%E9%A2%98%E8%A7%A34/</url>
      
        <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>该题来自于<a href="https://leetcode-cn.com/problems/median-of-two-sorted-arrays/" target="_blank" rel="noopener">力扣第四题</a></p><p>给定两个大小为 m 和 n 的正序（从小到大）数组 <code>nums1</code> 和 <code>nums2</code>。请你找出并返回这两个正序数组的中位数。<br>进阶：你能设计一个时间复杂度为 <code>O(log(m+n))</code> 的算法解决此问题吗？</p><a id="more"></a><p>示例 1：</p><blockquote><p>输入：nums1 = [1,3], nums2 = [2]<br>输出：2.00000<br>解释：合并数组 = [1,2,3] ，中位数 2</p></blockquote><p>示例 2：</p><blockquote><p>输入：nums1 = [1,2], nums2 = [3,4]<br>输出：2.50000<br>解释：合并数组 = [1,2,3,4] ，中位数 (2 + 3) / 2 = 2.5</p></blockquote><p>示例 3：</p><blockquote><p>输入：nums1 = [0,0], nums2 = [0,0]<br>输出：0.00000</p></blockquote><p>示例 4：</p><blockquote><p>输入：nums1 = [], nums2 = [1]<br>输出：1.00000</p></blockquote><p>示例 5：</p><blockquote><p>输入：nums1 = [2], nums2 = []<br>输出：2.00000</p></blockquote><p>提示：</p><blockquote><ul><li>nums1.length == m</li><li>nums2.length == n</li><li>0 &lt;= m &lt;= 1000</li><li>0 &lt;= n &lt;= 1000</li><li>1 &lt;= m + n &lt;= 2000</li><li>-106 &lt;= nums1[i], nums2[i] &lt;= 106</li></ul></blockquote><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>时间复杂度需达$O(\log(n))$级别，首先想到的是二分法，但该题如何使用二分求解，还需仔细分析。</p><h3 id="中位数特点"><a href="#中位数特点" class="headerlink" title="中位数特点"></a>中位数特点</h3><p>中位数的特点是比它小的数和比它大的数一样多，如下面例子</p><blockquote><p>1 2 3 4 <font color='blue'>5</font> 6 7 8 9    </p></blockquote><p><code>5</code>的前面有四个数<code>1 2 3 4</code>，后面有四个数<code>6 7 8 9</code>，从而<code>5</code>是中位数</p><blockquote><p>1 2 3 4 <font color='blue'>5 6</font> 7 8 9 10</p></blockquote><p><code>5 6</code>的前面有四个数<code>1 2 3 4</code>，后面有四个数<code>6 7 8 9</code>，从而<code>(5+6)/2=5.5</code>是中位数</p><p>所以想找到中位数就需要找到一个分割使得以下两点满足：</p><ol><li>该分割的左边元素比右边元素至多多出一个</li><li>该分割的右边元素都要大于左边的元素</li></ol><h3 id="两个排序数组的中位数寻找"><a href="#两个排序数组的中位数寻找" class="headerlink" title="两个排序数组的中位数寻找"></a>两个排序数组的中位数寻找</h3><p>对于两个排序数组，比如</p><blockquote><p>1 4 5 7 8 9<br>2 3 6</p></blockquote><p>这时分割应该是</p><blockquote><font color='red'>1 4 5</font> <font color='blue'>7 8 9</font> <br/><font color='red'>2 3</font> <font color='blue'>6</font></blockquote><p>可以看到分割的左边为<code>1 4 5 2 3</code>，右边为<code>6 7 8 9</code>，满足上述两点。</p><p>所以基本想法是首先遍历所有满足第一点的分割，然后判断该分割是否满足第二点即可。</p><ul><li><p>满足第1点的分割</p><p>  找分割无非就是如何划分，使得左边有5个数罢了，而这5个数来自于上面数组和下面数组，从而以<code>2 3 6</code>作为基准，如果<code>2 3 6</code>中没有划分到左边的，那么左边5个数都是来自上面数组的<code>1 4 5 7 8</code>；如果<code>2 3 6</code>中只有<code>2</code>划分到左边，那显然是上面数组的<code>1 4 5 7</code>划分到左边。<br>  所有分割情况如下四种：<br>  （1）</p><blockquote><font color='red'>1 4 5 7 8</font> <font color='blue'>9</font> <br/><font color='blue'>2 3 6</font></blockquote><p>  （2）</p><blockquote><font color='red'>1 4 5 7</font> <font color='blue'>8 9</font> <br/><font color='red'>2</font> <font color='blue'>3 6</font></blockquote><p>  （3）</p><blockquote><font color='red'>1 4 5</font> <font color='blue'>7 8 9</font> <br/><font color='red'>2 3</font> <font color='blue'>6</font></blockquote><p>  （4）</p><blockquote><font color='red'>1 4</font> <font color='blue'>5 7 8 9</font> <br/><font color='red'>2 3 6</font></blockquote></li><li><p>满足第2点的分割</p><p> 以下面分割为例</p><blockquote><font color='red'>1 4 5 7</font> <font color='blue'>8 9</font> <br/><font color='red'>2</font> <font color='blue'>3 6</font></blockquote><p> 要判断右边元素是否都要大于左边，只需判断<code>8 3</code>是否都要大于<code>7 2</code>，由于上下两个数组已经排好序了，表示$(8,7),(3,2)$已经满足条件了，所以只需比较$(8,2),(3,7)$是否满足条件，显然$3 &lt; 7$，所以该分割不满足第2点。</p></li></ul><h3 id="最终算法"><a href="#最终算法" class="headerlink" title="最终算法"></a>最终算法</h3><p>经过以上例子的分析，下面解释一般的情况，比如两个数组</p><blockquote><p>$a_0 a_1 a_2 a_3 a_4 a_5$<br>$b_0 b_1 b_2$</p></blockquote><p>假设任取分割$(4,1)$，表示分割点分别在$a_4$的左边和$b_1$的左边</p><blockquote><p><font color="red">$a_0 a_1 a_2 a_3$</font> $a_4 a_5 a_6$</p><p><font color="red">$b_0$</font> $b_1 b_2$</p></blockquote><p>这时根据$a_4,b_0$的大小关系和$b_1,a_3$的大小关系分成三种情况</p><ol><li>$a_4 \ge b_0$且$b_1 \ge a_3$<br>这时分割已经找到了</li><li>$b_1 &lt; a_3$，可以推出$b_0 \le b_1 &lt; a_3 \le a_4 \Rightarrow b_0 &lt; a_4$<br>这时比$b_1$大的数至少有$a_3,a_4,a_5,a_6,b_2$这5个数，显然比$b_1$还小的数不可能是中位数，所以分割点必然在$b_1$的右边</li><li>$a_4 &lt; b_0$，可以推出$a_3 \le a_4 &lt; b_0 \le b_1 \Rightarrow a_3 &lt; b_1$<br>这时比$b_1$小的数至少有$a_0,a_1,a_2,a_3,b_0$这5个数，显然比$b_1$还大的数不可能是中位数，所以分割点必然在$b_1$的左边</li></ol><p>如此才出现了二分的样子了。 所以假设<code>nums2</code>是短的那个数组，且长度为<code>n</code>，取<code>0&lt;=j&lt;=n</code>作为<code>nums2</code>的分割点，如果<code>j=n</code>表示<code>nums2</code>的所有元素都归左边，若<code>j&lt;n</code>，则<code>nums2[j]</code>左边的元素归左边。</p><p>由于二分法每次可以筛选掉一半，所以初始化<code>jleft=0,jright=n</code>，然后执行</p><ol><li><p><code>j = (jleft+jright) // 2</code>，显然此时<code>nums1</code>的分割点<code>i = (m+n+1)//2 - j</code>，如下图所示</p><blockquote><p>… <code>nums1[i-1], nums1[i]</code>, …<br>… <code>nums2[j-1], nums2[j]</code>, …</p></blockquote><p> 这时需比较<code>nums1[i],nums2[j-1]</code>的大小以及<code>nums2[j],nums1[i-1]</code>的大小关系了，</p></li><li><p>若<code>nums1[i] &gt;= nums2[j-1] &amp;&amp; nums2[j] &gt;= nums1[i-1]</code>表示找到了分割点，此时若<code>m+n</code>是奇数，表示中位数只有一个，而分割的左边比右边多一个元素，所以中位数必然是<code>max(nums1[i-1], num2[j-1])</code>；如果<code>m+n</code>是偶数，中位数取两个的均值，此时取<code>max(nums1[i-1], num2[j-1])</code>和<code>min(nums1[i], num2[j])</code>的均值就是中位数了。<strong>也就是说中位数要么是左边数的最大值，要么是左边数的最大值与右边数的最小值的均值。</strong></p></li><li><p>若<code>nums2[j] &lt; nums1[i-1]</code>，这时分割点在<code>j</code>的右边，所以令<code>jleft=j+1</code>，然后回到第1步</p></li><li>若<code>nums1[i] &lt; nums2[j-1]</code>，这时分给点在<code>j</code>的左边，所以令<code>jright=j-1</code>，然后回到第1步</li></ol><p>按照上述步骤下去，就可以找到最终解了，记左边最大值为<code>max_left</code>，右边最小值为<code>min_right</code>；<br>最后注意边界:</p><p>边界1：若<code>j=0,i&lt;m</code>，此时如下</p><blockquote><p>…,<code>nums1[i-1],nums1[i]</code>,…<br><code>nums2[0],nums2[1]</code>,…</p></blockquote><p>可知左边只有<code>nums1[i-1]</code>，所以<code>max_left=nums1[i-1]</code>；而<code>min_right=min(nums[i],nums2[k])</code>；</p><p>边界2：若<code>j=0,i=m</code>，此时如下</p><blockquote><p>…,<code>nums1[m-1]</code><br><code>nums2[0],nums2[1]</code>,…</p></blockquote><p>可知<code>max_left=nums1[m-1]</code>，<code>min_right=nums2[0]</code>;</p><p>边界3：若<code>j=n,i&gt;0</code>，此时如下</p><blockquote><p>…,<code>nums1[i-1],nums1[i]</code>,…<br>…,<code>nums2[n-2],nums2[n-1]</code></p></blockquote><p><code>max_left=max(nums1[i-1],nums2[n-1])</code>；<code>min_right=nums1[i]</code>;</p><p>边界3：若<code>j=n,i=0</code>，此时如下</p><blockquote><p><code>nums1[0],nums1[1]</code>,…<br>…,<code>nums2[n-2],nums2[n-1]</code></p></blockquote><p><code>max_left=nums2[n-1]</code>；<code>min_right=nums1[0]</code>。</p><p>由于每次都是对最短的数组进行二分，所以时间复杂度为$O(\log(\min(m, n)))$。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><details open><summary>python3</summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findMedianSortedArrays</span><span class="params">(self, nums1, nums2)</span>:</span></span><br><span class="line">        m, n = len(nums1), len(nums2)</span><br><span class="line">        <span class="keyword">if</span> m &lt; n:</span><br><span class="line">            m, n, nums1, nums2 = n, m, nums2, nums1</span><br><span class="line">        </span><br><span class="line">        half_len = (m + n + <span class="number">1</span>) &gt;&gt; <span class="number">1</span></span><br><span class="line">        jleft, jright = <span class="number">0</span>, n</span><br><span class="line">        <span class="keyword">while</span> jleft &lt;= jright:</span><br><span class="line">            j = (jleft + jright) &gt;&gt; <span class="number">1</span></span><br><span class="line">            i = half_len - j</span><br><span class="line">            <span class="keyword">if</span> j &lt; n <span class="keyword">and</span> nums2[j] &lt; nums1[i<span class="number">-1</span>]:</span><br><span class="line">                jleft = j + <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> j &gt; <span class="number">0</span> <span class="keyword">and</span> nums1[i] &lt; nums2[j<span class="number">-1</span>]:</span><br><span class="line">                jright = j - <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> j == <span class="number">0</span>:</span><br><span class="line">            max_left = nums1[i<span class="number">-1</span>]</span><br><span class="line">        <span class="keyword">elif</span> j == n <span class="keyword">and</span> i == <span class="number">0</span>:</span><br><span class="line">            max_left = nums2[j<span class="number">-1</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            max_left = max(nums1[i<span class="number">-1</span>], nums2[j<span class="number">-1</span>])</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (m + n) % <span class="number">2</span> == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> max_left</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> j == n:</span><br><span class="line">            min_right = nums1[i]</span><br><span class="line">        <span class="keyword">elif</span> j == <span class="number">0</span> <span class="keyword">and</span> i == m:</span><br><span class="line">            min_right = nums2[j]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            min_right = min(nums1[i], nums2[j])</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> (max_left + min_right) / <span class="number">2</span></span><br></pre></td></tr></table></figure></details><details><summary>c++</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">findMedianSortedArrays</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums1, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (nums1.size() &lt; nums2.size()) &#123;</span><br><span class="line">            <span class="keyword">return</span> findMedianSortedArrays(nums2, nums1);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> m = nums1.size(), n = nums2.size();</span><br><span class="line">        <span class="keyword">int</span> halfLen = (m + n + <span class="number">1</span>) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> jleft = <span class="number">0</span>, jright = n;</span><br><span class="line">        <span class="keyword">int</span> i, j;</span><br><span class="line">        <span class="keyword">while</span> (jleft &lt;= jright) &#123;</span><br><span class="line">            j = (jleft + jright) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            i = halfLen - j;</span><br><span class="line">            <span class="keyword">if</span> (j &lt; n &amp;&amp; nums2[j] &lt; nums1[i - <span class="number">1</span>])</span><br><span class="line">                jleft = j + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (j &gt; <span class="number">0</span> &amp;&amp; nums1[i] &lt; nums2[j - <span class="number">1</span>])</span><br><span class="line">                jright = j - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">double</span> max_left = <span class="number">0</span>, min_right = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">0</span>) max_left = nums1[i - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (j == n &amp;&amp; i == <span class="number">0</span>) max_left = nums2[j - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">else</span> max_left = max(nums1[i - <span class="number">1</span>], nums2[j - <span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ((m + n) % <span class="number">2</span> == <span class="number">1</span>) <span class="keyword">return</span> max_left;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (j == n) min_right = nums1[i];</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (j == <span class="number">0</span> &amp;&amp; i == m) min_right = nums2[j];</span><br><span class="line">        <span class="keyword">else</span> min_right = min(nums1[i], nums2[j]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (min_right + max_left) / <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></details><details><summary>java</summary><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">findMedianSortedArrays</span><span class="params">(<span class="keyword">int</span>[] nums1, <span class="keyword">int</span>[] nums2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (nums1.length &lt; nums2.length) &#123;</span><br><span class="line">            <span class="keyword">return</span> findMedianSortedArrays(nums2, nums1);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> m = nums1.length, n = nums2.length;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> halfLen = (m + n + <span class="number">1</span>) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> jleft = <span class="number">0</span>, jright = n;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(jleft &lt;= jright) &#123;</span><br><span class="line">            j = (jleft + jright) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            i = halfLen - j;</span><br><span class="line">            <span class="keyword">if</span> (j &lt; n &amp;&amp; nums2[j] &lt; nums1[i-<span class="number">1</span>]) jleft = j + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(j &gt; <span class="number">0</span> &amp;&amp; nums1[i] &lt; nums2[j-<span class="number">1</span>]) jright =  j - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">double</span> maxLeft, minRight;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">0</span>) maxLeft = nums1[i-<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(j == n &amp;&amp; i==<span class="number">0</span>) maxLeft = nums2[j-<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">else</span> maxLeft = Math.max(nums1[i-<span class="number">1</span>], nums2[j-<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ((m + n) % <span class="number">2</span> == <span class="number">1</span>) <span class="keyword">return</span> maxLeft;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (j == n) minRight = nums1[i];</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(j == <span class="number">0</span> &amp;&amp; i == m) minRight = nums2[j];</span><br><span class="line">        <span class="keyword">else</span> minRight = Math.min(nums1[i], nums2[j]);</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">return</span> (maxLeft + minRight) / <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 数组 </tag>
            
            <tag> 二分查找 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>点列极限六：拓扑学基础之列紧集、紧致集、连通集</title>
      <link href="/2020/11/10/%E7%82%B9%E5%88%97%E6%9E%81%E9%99%906/"/>
      <url>/2020/11/10/%E7%82%B9%E5%88%97%E6%9E%81%E9%99%906/</url>
      
        <content type="html"><![CDATA[<h4 id="定义1：列紧集"><a href="#定义1：列紧集" class="headerlink" title="定义1：列紧集"></a>定义1：列紧集</h4><blockquote><p>设$E \subset \mathbb{R^n}$，如果$E$中的任一点列都有一个子列收敛于$E$中的一个点，则称$E$是$\mathbb{R^n}$中的一个列紧集。</p></blockquote><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>$\mathbb{R^n}$中的集合$E$为列紧集的充分必要条件是$E$是有界闭集。</p></blockquote><a id="more"></a><p>证：必要性。如果$E$是无界的，那么必可以找到一个子列$\{\boldsymbol{x}_i\} \subset E$，满足$\Vert \boldsymbol{x}_i \Vert &gt; i(i=1,2,3,\cdots)$，显然$\{\boldsymbol{x}_i\}$不收敛，从而$E$不可能是列紧集。如果$E$不是闭集，则$E^{\prime} \not\subset E$，则必可以找到一个收敛点列$\{\boldsymbol{x}_i\} \subset E$有极限$\boldsymbol{a}$，且$\boldsymbol{a} \notin E$，从而找不到一个$\{\boldsymbol{x}_i\}$的子列，使得该子列收敛于$E$中的点，从而$E$不是列紧集。矛盾。<br/><br>充分性。任取点列$\{\boldsymbol{x}_i\} \subset E$，由于$E$是有界集，从而$\{\boldsymbol{x}_i\}$有界，由Bolzano-Weierstrass定理可知，存在一个收敛子列$\{\boldsymbol{x}_{k_i}\}$收敛于$\boldsymbol{a}$，又因为$E$是闭集，可知$\boldsymbol{a} \in E$，所以$E$是列紧集。</p><p>Q.E.D.</p><h4 id="定义2：开覆盖"><a href="#定义2：开覆盖" class="headerlink" title="定义2：开覆盖"></a>定义2：开覆盖</h4><blockquote><p>设$E \subset \mathbb{R^n}$，$\mathscr{J} = \{G_\alpha\}$是$\mathbb{R}^n$中的一个开集族，如果</p><script type="math/tex; mode=display">    E \subset \bigcup \limits_\alpha G_\alpha</script><p>则称开集族$\mathscr{J}$覆盖了$E$，或称$\mathscr{J}$是$E$的一个开覆盖。</p></blockquote><h4 id="定义3：紧致集"><a href="#定义3：紧致集" class="headerlink" title="定义3：紧致集"></a>定义3：紧致集</h4><blockquote><p>设$E \subset \mathbb{R^n}$，若能从$E$的任意一个开覆盖中选出有限个开集，它们仍然能组成$E$的开覆盖，则称$E$为一个紧致集。</p></blockquote><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>$E \subset \mathbb{R^n}$为紧致集的一个充分必要条件是$E$为有界闭集。</p></blockquote><p>证：<strong>必要性</strong>。设$E$为紧致集，考虑以原点$\boldsymbol{0}=(0,0,\cdots,0)$为球心，$m \in \mathbb{N^*}$为半径的球$B_m(\boldsymbol{0})$。有</p><script type="math/tex; mode=display">    E \subset \mathbb{R^n} = \bigcup \limits_{m=1}^\infty B_m(\boldsymbol{0})</script><p>从而$\mathscr{J}=\{B_m(\boldsymbol{0}):m \in \mathbb{N^*}\}$是$E$的一个开覆盖，所以可从$\mathscr{J}$中选取有限个元素，记作</p><script type="math/tex; mode=display">    B_{k_1}(\boldsymbol{0}), B_{k_2}(\boldsymbol{0}), \cdots, B_{k_t}(\boldsymbol{0})</script><p>它们仍然组成$E$的一个开覆盖，令</p><script type="math/tex; mode=display">    s = \max(k_1,k_2,\cdots,k_t)</script><p>可知$E \subset B_s(\boldsymbol{0})$，因此$E$是有界的。<br/><br>再证$E$闭集。即证$E^c$是开集，任取$\boldsymbol{q} \in E^c$，对$\forall \boldsymbol{q} \in E$，存在充分小的球$B_r(\boldsymbol{q})$，使得$B_r(\boldsymbol{q}) \cap B_r(\boldsymbol{p}) = \varnothing$，这里半径$r&gt;0$且于$\boldsymbol{q}$有关，所有的$B_{r}(\boldsymbol{q})$全体构成$E$的一个开覆盖，从而可以取出有限个球</p><script type="math/tex; mode=display">    B_{r_1}(\boldsymbol{q_1}),B_{r_2}(\boldsymbol{q_2}),\cdots,B_{r_m}(\boldsymbol{q_m})</script><p>仍然构成$E$的一个开覆盖，可知</p><script type="math/tex; mode=display">    B_{r_i}(\boldsymbol{q_i}) \cap B_{r_i}(\boldsymbol{p}) = \varnothing \quad (i=1,2,\cdots,m)</script><p>令</p><script type="math/tex; mode=display">    s = \min(r_1,r_2,\cdots,r_m)</script><p>可知球$B_s(\boldsymbol{p}) \cap E = \varnothing$，所以$B_s(\boldsymbol{p}) \subset E^c$，从而$E^c$是开集。<br><strong>充分性</strong>。反证法，假设$E$不是紧致集，则存在开集族$\{G_{\alpha}\}$，它是$E$的一个开覆盖，但它的任意有限子族不能覆盖$E$，由于$E$是有界闭集，从而从在一个超立方体$I^n$，使得$E \subset I$，将$I$分成相等的$2^n$个闭超立方体$K_1,K_2,\cdots,K_{2^n}$，可知</p><script type="math/tex; mode=display">    I^n = K_1 \cup K_2 \cup \cdots \cup K_{2^n}</script><p>且</p><script type="math/tex; mode=display">    diam (K_i) = \frac{1}{2} diam(I^n) (i=1,2,\cdots,2^n)</script><p>由于$E$不能被$\{G_{\alpha}\}$的任意有限子族覆盖，所以存在某个$K_i$使得，不妨记为$F_1$，使得</p><script type="math/tex; mode=display">    H_1 = F_1 \cap E</script><p>不能被$\{G_{\alpha}\}$的任意有限子族覆盖，且$diam(H_1) \le diam(F_1) = \frac{1}{2} diam(I^n)$，继续对$F_1$做上述划分和分析，可知必存在闭超立方体$F_2$，使得</p><script type="math/tex; mode=display">    H_2 = F_2 \cap E</script><p>不能被$\{G_{\alpha}\}$的任意有限子族覆盖，且$diam(H_2) \le diam(F_2) = \frac{1}{2} diam(F_1) = \frac{1}{2^2} diam(I^n)$，一直进行下去，从而得到一列闭集$H_k = F_k \cap E(k=1,2,\cdots)$，它们满足 <br/><br>(a) $H_1 \supset H_2 \supset \cdots$ <br/><br>(b) $diam(H_k) \le \frac{1}{2^k} diam(I) \to 0 (k \to \infty)$ <br/><br>(c) 每个$H_k$都不能被$\{G_{\alpha}\}$的任意有限子族覆盖 <br/><br>由(a)和(b)可知，$\{H_k\}$满足闭区间套的条件，从而存在唯一的点$\boldsymbol{\xi} \in \bigcap\limits_{k=1}^\infty \boldsymbol{H}_k$，由因为$\boldsymbol{\xi} \in E$，而$\{G_{\alpha}\}$是$E$的一个开覆盖，所以存在某个开集$G_{\beta} \in \{G_{\alpha}\}$，使得$\boldsymbol{\xi} \in G_{\beta}$，从而存在$r &gt; 0$，使得$B_r(\boldsymbol{\xi}) \subset G_{\beta}$，又由(b)可知，存在充分大的$k$，使得$diam(H_k) &lt; r$。<br>此时对任意的$\boldsymbol{x} \in H_k$，因为$\boldsymbol{\xi} \in H_k$，从而有</p><script type="math/tex; mode=display">    \Vert \boldsymbol{x} - \boldsymbol{\xi} \Vert \le diam(H_k) < r</script><p>即有$\boldsymbol{x} \in B_r(\boldsymbol{\xi}) \subset G_{\beta}$，所以$H_k \subset G_{\beta}$，这与(c)矛盾。</p><p>Q.E.D.</p><h4 id="定义4：连通集"><a href="#定义4：连通集" class="headerlink" title="定义4：连通集"></a>定义4：连通集</h4><blockquote><p>设$E \subset \mathbb{R^n}$，如果$E$的任一分解式$E=A \cup B$满足条件$A \ne \varnothing,B \ne \varnothing$，并且$A \cap B = \varnothing$，便可使得以下两式：</p><script type="math/tex; mode=display">    A \cap B^{\prime} \ne \varnothing \quad A^{\prime} \cap B \ne \varnothing</script><p>中至少有一个成立，那么称$E$是$\mathbb{R^n}$中的一个连通集，或者称$E$是连通的。</p></blockquote><h4 id="定义5：区域和闭区域"><a href="#定义5：区域和闭区域" class="headerlink" title="定义5：区域和闭区域"></a>定义5：区域和闭区域</h4><blockquote><p>在$\mathbb{R^n}$中，连通的开集称为区域，区域的闭包称为闭区域。</p></blockquote><h4 id="定理3"><a href="#定理3" class="headerlink" title="定理3"></a>定理3</h4><blockquote><p>开集$E \subset \mathbb{R^n}$为连通集的充分必要条件是$E$不能分解成两个不相交的非空开集之并。</p></blockquote><p>证：<strong>必要性</strong>。假设有分解式$E=A \cup B$，其中$A$与$B$是非空开集，并且$A \cap B = \varnothing$，由于$B$是开集，从而对$\forall \boldsymbol{b} \in B$，都存在球对于$B_r(\boldsymbol{b}) \subset B$，即有$B_r(\boldsymbol{b}) \cap A = \varnothing$，从而$\boldsymbol{b}$不可能是$A$的凝聚点，即$B \cap A^{\prime} = \varnothing$，同理$A \cap B^{\prime} = \varnothing$，从而$E$不是连通集，矛盾。<br/><br><strong>充分性</strong>。如果$E$不连通，那么存在两个互不相交的非空集$A$和$B$，使得$E = A \cup B$，且$A \cap B^{\prime} = \varnothing,A^{\prime} \cap B = \varnothing$，任取$\boldsymbol{a} \in A$，可知$\boldsymbol{a} \in E$，由于$E$是开集，从而存在球$B_r(\boldsymbol{a}) \in E$；又因$\boldsymbol{a}$不是$B$的凝聚点，即存在球$B_s(\boldsymbol{a})$不含$B$中的点，从而取$m = \min(r, s)$，可知球$B_m(\boldsymbol{a})$满足</p><script type="math/tex; mode=display">    B_m(\boldsymbol{a}) \subset E, \quad B_m(\boldsymbol{a}) \cap B = \varnothing</script><p>自然有$B_m(\boldsymbol{a}) \subset A$，从而$A$是开集，同理$B$是开集，矛盾。所以$E$是连通集。</p><p>Q.E.D.</p><h4 id="定理4"><a href="#定理4" class="headerlink" title="定理4"></a>定理4</h4><blockquote><p>在$\mathbb{R}$上，集合$E$是连通的充分必要条件是$E$为区间。</p></blockquote><p>证：<strong>必要性</strong>。假设$E \subset \mathbb{R}$是连通集，要证$E$是区间，即证任取$a,b \in E$，不妨设$a &lt; b$，有$[a, b] \subset E$。反证法，假设存在$c \in [a,b]$，使得$c \notin E$，作集合</p><script type="math/tex; mode=display">    A = \{ x \in E: x<c \} \quad B=\{x \in E: x > c\}</script><p>可知$A,B$非空，$E = A \cup B$，而且$A^{\prime} \cap B = \varnothing,A \cap B^{\prime} = \varnothing$，可知$E$不连通，矛盾。 <br/><br><strong>充分性</strong>。任取分解式$E=A \cup B$，其中$A,B$非空，且$A \cap B = \varnothing$，存在$a \in A, b \in B$，不妨设$a &lt; b$，从而有$[a, b] \subset E$，取$c_1 = \frac{a+b}{2}$，若$c_1 \in A$，则令$a_1=c_1,b_1=b$，或则令$a_1=a,b_1=c_1$，若此下去可作出闭区间套$[a_k,b_k]$，其中$a_k \in A, b_k \in B(k \in \mathbb{N^<em>})$，可知存在一个$c \in [a_k,b_k] (k\in \mathbb{N^</em>})$，且$a_k \to c, b_k \to c(k \to \infty)$；所以如果$c \in A$，那么$c \notin B$，从而$c \in B^{\prime}$，从而$A \cap B^{\prime} \ne \varnothing$，同理若$c \in B$，有$A^{\prime} \cap B \ne \varnothing$，所以$E$是连通的。</p><p>Q.E.D.</p><h4 id="定义6：道路连通集"><a href="#定义6：道路连通集" class="headerlink" title="定义6：道路连通集"></a>定义6：道路连通集</h4><blockquote><p>设$E \subset \mathbb{R^n}$，如果对任意的两点$\boldsymbol{p},\boldsymbol{q} \in E$，都有一条连续曲线$l \subset E$将$\boldsymbol{p},\boldsymbol{q}$连接起来，则称$E$是道路连通的。所谓$\mathbb{R^n}$中的连续曲线$l$，是指可以表示为参数分成：</p><script type="math/tex; mode=display">    x_i = \varphi_i(t) \quad (i=1,2,\cdots,n)</script><p>其中$\varphi_i(i=1,2,\cdots,n)$是区间$[a,b]$上的连续函数，且</p><script type="math/tex; mode=display">    \begin{aligned}    \boldsymbol{p} = (\varphi_1(a), \varphi_2(a), \cdots, \varphi_n(a)) \\    \boldsymbol{q} = (\varphi_1(b), \varphi_2(b), \cdots, \varphi_n(b))    \end{aligned}</script></blockquote><h4 id="定理5"><a href="#定理5" class="headerlink" title="定理5"></a>定理5</h4><blockquote><p>道路连通集一定是连通集</p></blockquote><p>证：设$E \subset \mathbb{R^n}$是一个道路连通集，任取分解式$E = A \cup B$，其中$A,B$是互不相交的非空集，在$A$中任取一点$\boldsymbol{p}$，在$B$中任取一点$\boldsymbol{q}$，则存在一条连续曲线$\Gamma \subset E$把$\boldsymbol{p},\boldsymbol{q}$两点连接起来，令</p><script type="math/tex; mode=display">    \boldsymbol{\Phi}(t) = (\varphi_1(t),\varphi_2(t),\cdots,\varphi_n(t)) \quad (a \le t \le b)</script><p>为$\Gamma$的参数方程，令</p><script type="math/tex; mode=display">    F = \{ t \in [a,b]: \boldsymbol{\Phi}(t) \in A \} \quad G = \{ t \in [a,b]: \boldsymbol{\Phi}(t) \in B \}</script><p>可知$F,G$是互不相交的非空集合，且$F \cup G = [a, b]$，又由于$[a,b]$是连通集，所以$F \cap G^{\prime}$和$F^{\prime} \cap G$至少有一个非空，不妨设$c \in F \cap G^{\prime}$，由$c \in G^{\prime}$，知有数列$\{t_i\} \subset G$，使得$\lim \limits_{i \to \infty} t_i = c$，由于$\varphi_i(i=1,2,\cdots,n)$是连续函数，可知</p><script type="math/tex; mode=display">    \lim \limits_{i \to \infty} \boldsymbol{\Phi}(t_i) = \boldsymbol{\Phi}(c)</script><p>由于$\boldsymbol{\Phi}(t_i) \in B(i=1,2,\cdots,n)$且$\boldsymbol{\Phi}(c) \in A$，可知$\boldsymbol{\Phi}(c) \notin B$，从而$\boldsymbol{\Phi}(c) \in B^{\prime}$，所以$\boldsymbol{\Phi}(c) \in A \cap B^{\prime}$，即$A \cap B^{\prime} \ne \varnothing$，可得$E$是连通集。</p><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 点列极限 </tag>
            
            <tag> 拓扑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode题解1：两数之和</title>
      <link href="/2020/11/07/leetcode%E9%A2%98%E8%A7%A31/"/>
      <url>/2020/11/07/leetcode%E9%A2%98%E8%A7%A31/</url>
      
        <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>该题来自于<a href="https://leetcode-cn.com/problems/two-sum/" target="_blank" rel="noopener">力扣第一题</a></p><p>给定一个整数数组<code>nums</code>和一个目标值<code>target</code>，请你在该数组中找出和为目标值的那<strong>两个</strong>整数，并返回他们的数组下标。<br>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。</p><a id="more"></a><p>示例:</p><blockquote><p>给定 nums = [2, 7, 11, 15], target = 9</p><p>因为 nums[0] + nums[1] = 2 + 7 = 9<br>所以返回 [0, 1]</p></blockquote><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>如果原数组已经排好了序，这时可以使用左右双指针法，空间复杂度为$O(1)$，时间复杂度为$O(n)$；</p><p>但这里原数组无序，要想依然达到$O(n)$的时间复杂度，关键在于如何使用$O(1)$的时间复杂度在数组中查找元素并获取下标，这时自然会想到使用hash存储。</p><p>所以基本思路为：将原始数组存储为HashMap，之后只需遍历数组元素并查询数组中是否存在(<strong>目标值</strong>$-$<strong>元素值</strong>)的元素，如果存在取出相应下标即可。此时空间复杂度为$O(n)$，时间复杂度为$O(n)$。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><details open><summary>python3</summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">twoSum</span><span class="params">(self, nums, target)</span>:</span></span><br><span class="line">        item_idx_map = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums)):</span><br><span class="line">            <span class="comment"># 获取另一个数的下标，如果不存在返回None</span></span><br><span class="line">            j = item_idx_map.get(target - nums[i], <span class="literal">None</span>)</span><br><span class="line">            <span class="keyword">if</span> j <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">return</span> [i, j]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                item_idx_map[nums[i]] = i</span><br><span class="line">        <span class="keyword">return</span> []</span><br></pre></td></tr></table></figure></details><details><summary>c++</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; twoSum(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target) &#123;</span><br><span class="line">        <span class="built_in">unordered_map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; <span class="built_in">map</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.size(); i++) &#123;</span><br><span class="line">            <span class="keyword">auto</span> j = <span class="built_in">map</span>.find(target - nums[i]);</span><br><span class="line">            <span class="keyword">if</span> (j != <span class="built_in">map</span>.end()) &#123;</span><br><span class="line">                <span class="keyword">return</span> &#123;j-&gt;second, i&#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">map</span>[nums[i]] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></details><details><summary>java</summary><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target) &#123;</span><br><span class="line">        HashMap&lt;Integer, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;Integer, Integer&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(map.containsKey(target - nums[i]))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;map.get(target - nums[i]), i&#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                map.put(nums[i], i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> 哈希表 </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>点列极限五：拓扑学基础之开集、闭集</title>
      <link href="/2020/10/16/%E7%82%B9%E5%88%97%E6%9E%81%E9%99%905/"/>
      <url>/2020/10/16/%E7%82%B9%E5%88%97%E6%9E%81%E9%99%905/</url>
      
        <content type="html"><![CDATA[<p>本章的内容为接下来的函数极限做铺垫。欧几里得空间$\mathbb{R^n}$中关于点$\boldsymbol{a}$的邻域两个常用到的概念为</p><script type="math/tex; mode=display">    \begin{aligned}        & B_r(\boldsymbol{a}) = \{ \boldsymbol{x} \in \mathbb{R^n} : \Vert \boldsymbol{x} - \boldsymbol{a} \Vert < r \} \\        & B_r(\boldsymbol{\check a}) = \{ \boldsymbol{x} \in \mathbb{R^n} : 0 < \Vert \boldsymbol{x} - \boldsymbol{a} \Vert < r \}    \end{aligned}</script><p>其中$B_r(\boldsymbol{a})$称为以$\boldsymbol{a}$为球心，$r&gt;0$为半径的球，而$B_r(\boldsymbol{\check a})$称为相应的空心球。</p><a id="more"></a><h4 id="定义1：开集"><a href="#定义1：开集" class="headerlink" title="定义1：开集"></a>定义1：开集</h4><blockquote><p>（1）设$E \in \mathbb{R^n}$，如果点$\boldsymbol{a} \in E$，并且存在$r&gt;0$，使得$B_r(\boldsymbol{a}) \subset E$，那么称$\boldsymbol{a}$为$E$的一个内点； <br/><br>（2）$E$的全体内点构成的集合记作$E°$，称为$E$的内部 <br/><br>（3）若$E°=E$，则称$E$为开集。</p></blockquote><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p> 对任何集$E$，$E$的内部$E°$是开集。</p></blockquote><p>证：若$E°=\varnothing$，可知$E°=(E°)°=\varnothing$，可知$E°$是开集；若$E° \ne \varnothing$，任取$\boldsymbol{c} \in E°$，可知存在$r&gt;0$，使得$B_r(\boldsymbol{c}) \subset E$；从而任取$\boldsymbol{a} \in B_r(\boldsymbol{c})$，令$d=r - \Vert \boldsymbol{a} - \boldsymbol{c} \Vert$，对于$\boldsymbol{x} \in B_d(\boldsymbol{a})$，有</p><script type="math/tex; mode=display">    \Vert \boldsymbol{x} - \boldsymbol{c} \Vert \le \Vert \boldsymbol{x} - \boldsymbol{a} \Vert + \Vert \boldsymbol{a} - \boldsymbol{c} \Vert \le d + \Vert \boldsymbol{a} - \boldsymbol{c} \Vert = r</script><p>从而有$\boldsymbol{x} \in B_r(\boldsymbol{c})$，可得$B_d(\boldsymbol{a}) \subset B_r(\boldsymbol{c}) \subset E$，从而$\boldsymbol{a} \in E°$，由于$\boldsymbol{a} \in B_r(\boldsymbol{c})$，所以$B_r(\boldsymbol{c}) \subset E°$，所以$E°$是开集。</p><p>Q.E.D.</p><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>在空间$\mathbb{R^n}$中： <br/><br>（1）$\mathbb{R^n},\varnothing$是开集；<br/><br>（2）设$\{E_\alpha\}$是$\mathbb{R^n}$的一个开子集族，其中指标$\alpha$来自一个指标集$I$，那么并集$\bigcup \limits_{\alpha \in I}E_\alpha$是开集（任意多个开集的并是开集）<br/><br>（3）设$E_1,E_2,\cdots,E_m$是有限多个开集，那么交集$\bigcap \limits_{i=1}^mE_i$是开集（有限个开集的交是开集）。</p></blockquote><p>证：（1）显然，下面证（2）（3）<br>（2）任取$\boldsymbol{a} \in \bigcup \limits_{\alpha \in I} E_\alpha$，存在$\beta \in I$，使得$\boldsymbol{a} \in E_\beta$，由于$E_\beta$是开集，从而存在球$B_r(\boldsymbol{a}) \subset E_\beta \subset \bigcup \limits_{\alpha \in I} E_\alpha$，从而$\boldsymbol{a}$是$\bigcup \limits_{\alpha \in I} E_\alpha$的内点，所以$\bigcup \limits_{\alpha \in I} E_\alpha$是开集。 <br/><br>（3）任取$\boldsymbol{a} \in \bigcap \limits_{i=1}^mE_i$，即$\boldsymbol{a} \in E_i (i=1,2,\cdots,m)$，则存在$r_i&gt;0$，使得</p><script type="math/tex; mode=display">    B_{r_i}(\boldsymbol{a}) \in E_i (i=1,2,\cdots,m)</script><p>令$r = \min(r_1,r_2,\cdots,r_m)$，可得</p><script type="math/tex; mode=display">    B_r(\boldsymbol{a}) \subset \bigcap \limits_{i=1}^mE_i</script><p>所以$\boldsymbol{a}$是$\bigcap \limits_{i=1}^mE_i$的内点，从而$\bigcap \limits_{i=1}^mE_i$是开集。</p><p>Q.E.D.</p><h4 id="定义2：闭集"><a href="#定义2：闭集" class="headerlink" title="定义2：闭集"></a>定义2：闭集</h4><blockquote><p>设$F \subset \mathbb{R^n}$，若$F^c$是开集，则称$F$是闭集。</p></blockquote><h4 id="定理3"><a href="#定理3" class="headerlink" title="定理3"></a>定理3</h4><blockquote><p>在空间$\mathbb{R^n}$中：<br/><br>（1）$\mathbb{R^n},\varnothing$是闭集；<br/><br>（2）设$\{F_\alpha\}$是$\mathbb{R^n}$的一个闭子集族，其中指标$\alpha$来自一个指标集$I$，那么交集$\bigcap \limits_{\alpha \in I}F_\alpha$是闭集（任意多个闭集的并是闭集） <br/><br>（3）设$F_1,F_2,\cdots,F_m$是有限多个开集，那么交集$\bigcup \limits_{i=1}^m F_i$是闭集（有限个闭集的交是闭集）。 <br/></p></blockquote><p>利用De Morgan对偶原理与定理7的结论容易证明，从略。</p><h4 id="定义3：凝聚点或极限点"><a href="#定义3：凝聚点或极限点" class="headerlink" title="定义3：凝聚点或极限点"></a>定义3：凝聚点或极限点</h4><blockquote><p>设$E \subset \mathbb{R^n}$，若$\boldsymbol{a} \in \mathbb{R^n}$，并满足对任意的$r&gt;0$，在空心球$B_r(\boldsymbol{\check a})$内总有$E$中的点，则称$\boldsymbol{a}$为$E$的凝聚点或极限点。</p></blockquote><h4 id="定义4：导集和闭包"><a href="#定义4：导集和闭包" class="headerlink" title="定义4：导集和闭包"></a>定义4：导集和闭包</h4><blockquote><p>点集$E \subset \mathbb{R^n}$的凝聚点的全体称为$E$的导集，记作$E^{\prime}$，记$\bar E = E \cup E^{\prime}$，称$\bar E$为$E$的闭包</p></blockquote><h4 id="定理4"><a href="#定理4" class="headerlink" title="定理4"></a><span id="theorem4">定理4</span></h4><blockquote><p>$E$是闭集的充分必要条件是$E^{\prime} \subset E$，即$\bar E = E$。</p></blockquote><p>证：必要性。反证法，假设存在$\boldsymbol{a} \in E^{\prime}$，而$\boldsymbol{a} \notin E$，可知$\boldsymbol{a} \in E^{c}$，又由于$E$是闭集，从而$E^{c}$是开集，从而存在$B_r(\boldsymbol{a}) \subset E^c$，这时$B_r(\boldsymbol{a})$中没有$E<br>$中的点，结合$\boldsymbol{a} \notin E$，可知$B_r(\boldsymbol{\check a})$中没有$E$中的点，而这与$\boldsymbol{a}$是$E$的凝聚点矛盾，从而得证。<br>充分性。任取$\boldsymbol{a} \in E^{c}$，可知$\boldsymbol{a} \notin E^{\prime}$，从而存在空心球$B_r(\boldsymbol{\check a}) \subset E^{c}$，结合$\boldsymbol{a} \notin E^c$，可知$B_r(\boldsymbol{a}) \in E^c$，所以$E^c$是开集，从而$E$是闭集。  </p><p>Q.E.D.</p><h4 id="定理5"><a href="#定理5" class="headerlink" title="定理5"></a><span id="theorem5">定理5</span></h4><blockquote><p>$E$是闭集的充分必要条件是，$E$中的任意收敛点列的极限必在$E$中。</p></blockquote><p>证：必要性。设$E$中的收敛点列$\{\boldsymbol{x}_i\}$有极限$\boldsymbol{a}$，则$\boldsymbol{a} \in E$或$\boldsymbol{a} \notin E$，如果$\boldsymbol{a} \notin E$，由极限性质可知$\boldsymbol{a} \in E^{\prime}$，又根据<a href="#theorem4">定理4</a>，可得$\boldsymbol{a} \in E$，所以$\boldsymbol{a}$必在$E$中。<br>充分性。任取$\boldsymbol{a} \in E^{\prime}$，可从$E$中选出点列$\{\boldsymbol{x}_i\}$收敛于$\boldsymbol{a}$，而$\boldsymbol{a} \in E$，所以$E^{\prime} \subset E$，从而$E$是闭集。</p><p>Q.E.D.</p><h4 id="定理6"><a href="#定理6" class="headerlink" title="定理6"></a>定理6</h4><blockquote><p>$E$的导集$E^{\prime}$与$\bar E$都是闭集。</p></blockquote><p>证：前一命题。任取$\boldsymbol{a} \in (E^{\prime})^c$，可知$\boldsymbol{a}$不是$E$的极限点，则存在一个球$B_r(\boldsymbol{a})$，其中至多只有$E$中的一个点，且该点若存在只能是$\boldsymbol{a}$，由因为$B_r(\boldsymbol{a})$是开集，从而任取$\boldsymbol{c} \in B_r(\boldsymbol{a})$，若$\boldsymbol{c} = \boldsymbol{a}$，自然有$\boldsymbol{c} \in (E^{\prime})^c$，若$\boldsymbol{c} \ne \boldsymbol{a}$，则存在球$B_s(\boldsymbol{c}) \subset B_r(\boldsymbol{a})$，且$B_s(\boldsymbol{c})$不包含$E$中的点，可知此时$\boldsymbol{c}$也不可能是$E$的极限点；即$B_r(\boldsymbol{a}) \subset (E^{\prime})^c$，所以$E^{\prime}$是闭集。</p><p>后一命题。若$E^{\prime}=\varnothing$，可知$\bar{E} = E$，可知$E$是闭集，从而$\bar{E}$是闭集；若$E^{\prime} \ne \varnothing$，则任取$\bar{E}$中的一个收敛点列$\{\boldsymbol{x}_i\}$有极限$\boldsymbol{a}$，如果$\{\boldsymbol{x}_i\}$中只有有限个点，显然有$\boldsymbol{a} \in \bar{E}$中，否则其中必有一个子列的点全属于$E$或者$E^{\prime}$，若全属于$E$，则有$\boldsymbol{a} \in E^{\prime} \subset \bar{E}$，若全属于$E^{\prime}$，由于前面已证得$E^{\prime}$是闭集，从而$\boldsymbol{a} \in E^{\prime} \subset \bar{E}$，所以$\bar{E}$是闭集。</p><p>Q.E.D.</p><h4 id="定理7"><a href="#定理7" class="headerlink" title="定理7"></a>定理7</h4><blockquote><p>$E°$是含于$E$内的最大开集，$\bar E$是包含$E$的最小闭集。</p></blockquote><p>证：前一命题。设开集$B \subset E$，任取$\boldsymbol{a} \in B \subset E$，可知存在球$B_r(\boldsymbol{a}) \subset B \subset E$，可知$\boldsymbol{a} \in E°$，所以$B \subset E°$。<br>后一命题。设闭集$F \supset E$，任取$\boldsymbol{b} \in \bar E = E^{\prime} \cup E$，若$\boldsymbol{b} \in E$，则$\boldsymbol{b} \in F$；若$\boldsymbol{b} \in E^{\prime}$，则$E$中有一个点列$\{\boldsymbol{x}_i\}$收敛于$\boldsymbol{b}$，而这个点列也可以看出是$F$中的，再由<a href="#theorem5">定理5</a>可知，$\boldsymbol{b} \in F$，所以$\bar E \subset F$。</p><p>Q.E.D.</p><h4 id="定义5：边界"><a href="#定义5：边界" class="headerlink" title="定义5：边界"></a>定义5：边界</h4><blockquote><p>（1）设点集$E\subset \mathbb{R^n}$，$(E^c)^°$中的点称为$E$的外点，外点的全体称为$E$的外部；<br/><br>（2）既不是$E$的内点又不是$E$的外点的点称为$E$的边界点，边界点的全体称为$E$的边界。</p></blockquote><h4 id="定义6：直径"><a href="#定义6：直径" class="headerlink" title="定义6：直径"></a>定义6：直径</h4><blockquote><p>设非空点集$E \subset \mathbb{R^n}$，记</p><script type="math/tex; mode=display">    diam(E) = \sup \{ \Vert \boldsymbol{x} - \boldsymbol{y} \Vert: \boldsymbol{x}, \boldsymbol{y} \in E \}</script><p>称该数为集合$E$的直径。</p></blockquote><h4 id="定理8：闭区间套定理"><a href="#定理8：闭区间套定理" class="headerlink" title="定理8：闭区间套定理"></a>定理8：闭区间套定理</h4><blockquote><p>设$\{\boldsymbol{F}_i\}(\boldsymbol{F}_i \ne \varnothing, i=1,2,3,\cdots)$是一闭集列，并且$\boldsymbol{F}_1 \supset \boldsymbol{F}_2 \supset \boldsymbol{F}_3 \supset \cdots$，若</p><script type="math/tex; mode=display">    \lim \limits_{i \to \infty} diam(\boldsymbol{F}_i) = 0</script><p>那么$\bigcap \limits_{i=1}^\infty \boldsymbol{F}_i$只含唯一的点。</p></blockquote><p>证：因为$\boldsymbol{F}_i$不是空集，因此对每个$i \in \mathbb{N}^{*}$，都存在$\boldsymbol{x}_i \in \boldsymbol{F}_i$，又由闭区间套的性质可知</p><script type="math/tex; mode=display">    \{\boldsymbol{x}_i, \boldsymbol{x}_{i+1}, \boldsymbol{x}_{i+2}, \cdots\} \in \boldsymbol{F}_i \quad (i \in \mathbb{N}^{*})</script><p>所以当$k,l &gt; i$时，</p><script type="math/tex; mode=display">    \Vert \boldsymbol{x}_k - \boldsymbol{x}_l \Vert \le diam(\boldsymbol{F}_i) \to 0 \quad (i \to \infty)</script><p>可知$\{ \boldsymbol{x}_i \}$时基本点列，不妨设其收敛于点$\boldsymbol{a}$，又由闭集的性质<a href="#theorem5">定理5</a>可知，$\boldsymbol{a} \in \boldsymbol{F}_i$对所有$i \in \mathbb{N}^{*}$成立，因此$\boldsymbol{a} \in \bigcap \limits_{i=1}^\infty \boldsymbol{F}_i$。<br>假设还有点$\boldsymbol{b} \in \bigcap \limits_{i=1}^\infty \boldsymbol{F}_i$，从而$\boldsymbol{a},\boldsymbol{b} \in \boldsymbol{F}_i$，可知</p><script type="math/tex; mode=display">    \Vert \boldsymbol{a} - \boldsymbol{b} \Vert \le diam(\boldsymbol{F_i}) = 0 \quad (i \to \infty)</script><p>可知$\boldsymbol{a} = \boldsymbol{b}$。所以$\boldsymbol{a}$唯一。</p><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 点列极限 </tag>
            
            <tag> 拓扑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>点列极限四：欧式空间中的点列极限</title>
      <link href="/2020/10/09/%E7%82%B9%E5%88%97%E6%9E%81%E9%99%904/"/>
      <url>/2020/10/09/%E7%82%B9%E5%88%97%E6%9E%81%E9%99%904/</url>
      
        <content type="html"><![CDATA[<p>本篇主要讲多维空间中点列的极限，下面的讨论都会基于$n$维欧式空间，通常用$\mathbb{R^n}$表示；以下内容的前提是已知$n$维Euclid空间以及各种名词的概念，比如向量，范数，内积等等，如有不理解的概念，建议查看高等代数中关于<strong>度量空间</strong>的内容。</p><a id="more"></a><h4 id="定义1：点列收敛"><a href="#定义1：点列收敛" class="headerlink" title="定义1：点列收敛"></a>定义1：点列收敛</h4><blockquote><p>设$\boldsymbol{x}_i \in \mathbb{R^n}(i=1,2,\cdots)，称\{\boldsymbol{x}_i\}是\mathbb{R^n}$中的一个点列。$\boldsymbol{a} \in \mathbb{R^n}$，如果对任意给定的$\varepsilon&gt;0$，存在$N \in \mathbb{N^*}$，使得当$i &gt; N$时，有</p><script type="math/tex; mode=display">    \Vert \boldsymbol{x}_i - \boldsymbol{a} \Vert < \varepsilon</script><p>称点$\boldsymbol{a}$是点列$\{\boldsymbol{x}_i\}$的极限，记作</p><script type="math/tex; mode=display">    \lim \limits_{i\to\infty} \boldsymbol{x}_i = \boldsymbol{a} \quad 或 \quad \boldsymbol{x}_i \to \boldsymbol{a}(i \to \infty)</script><p>也称点列$\{\boldsymbol{x}_i\}$收敛于点$\boldsymbol{a}$。</p></blockquote><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a>定理1</h4><blockquote><p>（1）如果点列$\{\boldsymbol{x}_i\}$收敛，那么它的极限必是唯一的；<br/><br>（2）收敛点列必定是有界的。</p></blockquote><p>证明与数列极限的证明几乎一样，从略</p><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>设$\lim \limits_{i \to \infty}\boldsymbol{x}_i = \boldsymbol{a}，\lim \limits_{i \to \infty}\boldsymbol{y}_i = \boldsymbol{b}$，那么 <br/><br>（1）$\lim \limits_{i \to \infty}(\boldsymbol{x}_i \pm \boldsymbol{y}_i) = \boldsymbol{a} \pm \boldsymbol{b}$ <br/><br>（2）对任意$\lambda \in \mathbb{R}$，有 </p><script type="math/tex; mode=display">    \lim \limits_{i \to \infty}(\lambda \boldsymbol{x}_i) = \lambda \boldsymbol{a}</script></blockquote><p>证明与数列极限的证明几乎一样，从略</p><h4 id="定义2"><a href="#定义2" class="headerlink" title="定义2"></a>定义2</h4><blockquote><p>设$\{\boldsymbol{x}_i\}$是$\mathbb{R^n}$中的一个点列，并设</p><script type="math/tex; mode=display">    \boldsymbol{x}_i = (x_1^{(i)},x_2^{(i)},\cdots,x_n^{(i)}) \quad (i=1,2,\cdots)</script><p>如果对$k=1,2,\cdots,n$，有</p><script type="math/tex; mode=display">    \lim \limits_{i \to \infty} x_k^{(i)} = a_k</script><p>则称点列$\{\boldsymbol{x}_i\}$按分量收敛于$\boldsymbol{a}=(a_1,a_2,\cdots,a_n)$。</p></blockquote><h4 id="定理3"><a href="#定理3" class="headerlink" title="定理3"></a>定理3</h4><blockquote><p>$\lim \limits_{i \to \infty} \boldsymbol{x}_i = \boldsymbol{a}$等价于点列$\{\boldsymbol{x}_i\}$按分量收敛于$\boldsymbol{a}$。</p></blockquote><p>证：（a）先证$\boldsymbol{a} = \boldsymbol{0}$的情形，易知不等式</p><script type="math/tex; mode=display">    |x_k^{(i)}| \le \Vert \boldsymbol{x}_i \Vert \le |x_1^{(i)}| + |x_2^{(i)}| + \cdots + |x_n^{(i)}| \quad (k=1,2,\cdots,n)</script><p>对所有的$i \in \mathbb{N^*}$都成立；所以当$\lim \limits_{i \to \infty} \boldsymbol{x}_i = \boldsymbol{0}$，有$\lim \limits_{i \to \infty} x_k^{(i)}=0 (k=1,2,\cdots,n)$，即$\{\boldsymbol{x}_i\}$按分量收敛于$\boldsymbol{0}$。反之，若$\{\boldsymbol{x}_i\}$按分量收敛于$\boldsymbol{0}$，则有</p><script type="math/tex; mode=display">    \lim \limits_{i \to \infty} |x_1^{(i)}| + |x_2^{(i)}| + \cdots + |x_n^{(i)}| = 0</script><p>由此可知$\lim \limits_{i \to \infty} \Vert \boldsymbol{x}_i \Vert = 0$，即$\lim \limits_{i \to \infty} \boldsymbol{x}_i = \boldsymbol{0}$。<br>（b）若$\boldsymbol{a} \ne \boldsymbol{0}$，则考虑点列$\{\boldsymbol{x}_i - \boldsymbol{a}\}$，再由（a）的结论就易证明 $\lim \limits_{i \to \infty} \boldsymbol{x}_i = \boldsymbol{a}$等价于点列$\{\boldsymbol{x}_i\}$按分量收敛于$\boldsymbol{a}$。</p><p>Q.E.D.</p><h4 id="定义3：基本点列"><a href="#定义3：基本点列" class="headerlink" title="定义3：基本点列"></a>定义3：基本点列</h4><blockquote><p>设$\{\boldsymbol{x}_i\}$是$\mathbb{R^n}$中的一个点列，如果对任意的$\varepsilon&gt;0$，存在$N \in \mathbb{N^*}$，使得当$k,l&gt;N$时，有$\Vert \boldsymbol{x}_k - \boldsymbol{x}_l \Vert &lt; \varepsilon$，则称$\{\boldsymbol{x}_i\}$是一个基本（点）列。</p></blockquote><h4 id="定理4：基本点列收敛"><a href="#定理4：基本点列收敛" class="headerlink" title="定理4：基本点列收敛"></a>定理4：基本点列收敛</h4><blockquote><p>$\{\boldsymbol{x}_i\}$是收敛点列的充分必要条件是$\{\boldsymbol{x}_i\}$是基本点列。</p></blockquote><p>证：必要性。设$\{\boldsymbol{x}_i\}$收敛于$\boldsymbol{a}$，可知对任意给定的$\varepsilon &gt; 0$，存在$N \in \mathbb{N^*}$，使得当$i &gt; N$时，有$\Vert \boldsymbol{x}_i - \boldsymbol{a}\Vert &lt; \frac{\varepsilon}{2}$，因此当$k,l&gt;N$时，有</p><script type="math/tex; mode=display">    \Vert \boldsymbol{x}_k - \boldsymbol{a} \Vert < \frac{\varepsilon}{2}, \quad \Vert \boldsymbol{x}_l - \boldsymbol{a} \Vert < \frac{\varepsilon}{2}</script><p>从而有</p><script type="math/tex; mode=display">    \Vert \boldsymbol{x}_k - \boldsymbol{x}_l \Vert \le \Vert \boldsymbol{x}_k - \boldsymbol{a} \Vert + \Vert \boldsymbol{a} - \boldsymbol{x}_l \Vert < \varepsilon</script><p>即$\{\boldsymbol{x}_i\}$是基本列；<br>充分性。设$\{\boldsymbol{x}_i\}$是基本列，由不等式</p><script type="math/tex; mode=display">    |x_j^{(k)} - x_j^{(l)}| \le \Vert \boldsymbol{x}_k - \boldsymbol{x}_l \Vert \quad (j=1,2,\cdots,n)</script><p>可知$\{x_j^{(k)}\}(j=1,2,\cdots,n)$是基本列，所以它们是收敛数列，令</p><script type="math/tex; mode=display">    \lim \limits_{i \to \infty} x_j^{(i)} = a_j \quad (j = 1,2,\cdots,n)</script><p>从而有点列$\{\boldsymbol{x}_i\}$按分量收敛于$\boldsymbol{a} = (a_1,a_2,\cdots,a_n)$，也即$\{\boldsymbol{x}_i\}$收敛于$\boldsymbol{a}$。</p><p>Q.E.D.</p><h4 id="定理5"><a href="#定理5" class="headerlink" title="定理5"></a>定理5</h4><blockquote><p>(Bolzano-Weierstrass) 从任一有界的点列可以选出收敛的子点列。</p></blockquote><p>证：设点列$\{\boldsymbol{x}_i\}$有界，由不等式$|x_k^{(i)}| \le \Vert \boldsymbol{x}_i \Vert$，易知数列$\{x_k^{(i)}\}(k=1,2,\cdots,n)$是有界的，从而根据数列的Bolzano-Weierstrass定理，存在$\{i\}$的子列$\{i^{(1)}\} \subset \{i\}$，使得，</p><script type="math/tex; mode=display">\lim \limits_{l \to \infty} x_{1}^{(i^{(1)})} = a_1</script><p>而$\{x_2^{(i^{(1)})}\}$也是一个有界数列，从而存在$\{i^{(1)}\}$的一个子列$\{i^{(2)}\} \subset \{i^{(1)}\} $，使得</p><script type="math/tex; mode=display">\lim \limits_{l \to \infty} x_{k}^{(i^{(2)})} = a_2</script><p>依此下去，找到一串子列满足$\{i^{(n)}\} \subset \{i^{(n-1)}\} \subset \cdots \subset \{i^{(2)}\} \subset \{i^{(1)}\}$，且有</p><script type="math/tex; mode=display">    \lim \limits_{l \to \infty} x_{k}^{(i^{(k)})} = a_k \quad (k=1,2,\cdots,n)</script><p>根据收敛数列的任意子列收敛于同一值，可知</p><script type="math/tex; mode=display">    \lim \limits_{l \to \infty} x_{k}^{(i^{(n)})} = a_k \quad (k=1,2,\cdots,n)</script><p>从而找到了$\{i\}$的一个子列$\{i^{(n)}\}$，使得$\{\boldsymbol{x}_{i^{n)}}\}$按分量收敛于$(a_1,a_2,\cdots,a_n)$，即选出了一个收敛子点列。</p><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 点列极限 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>点列极限三：数列极限的上极限与下极限，Stolz定理</title>
      <link href="/2020/09/28/%E7%82%B9%E5%88%97%E6%9E%81%E9%99%903/"/>
      <url>/2020/09/28/%E7%82%B9%E5%88%97%E6%9E%81%E9%99%903/</url>
      
        <content type="html"><![CDATA[<p>对于任意给定的数列$\{a_n\}$，如果$\{a_n\}$有界，由列紧性可知，必然存在收敛子列，如果$\{a_n\}$无解，则总可以找到一个子列趋向于$-\infty$或$+\infty$。我们把数列$\{a_n\}$的收敛子列的极限称为$\{a_n\}$的一个极限点，若还有趋于$-\infty$或$+\infty$的子列，也将$-\infty$或$+\infty$称为$\{a_n\}$的一个极限点。</p><a id="more"></a><h4 id="定义1：上极限与下极限"><a href="#定义1：上极限与下极限" class="headerlink" title="定义1：上极限与下极限"></a><span id="define1">定义1：上极限与下极限<span></h4><blockquote><p>设$\{a_n\}$是一个数列，$E$是由$\{a_n\}$的全部极限点构成的集合，记</p><script type="math/tex; mode=display">    a^* = \sup E, \quad a_*=\inf E</script><p>则$a^{<em>}$和$a_{</em>}$分别称为数列$\{a_n\}$的<strong>上极限</strong>和<strong>下极限</strong>，记为</p><script type="math/tex; mode=display">    a^* = \limsup \limits_{n\to\infty} a_n, \quad a_* = \liminf \limits_{n\to\infty} a_n</script></blockquote><h4 id="定理1"><a href="#定理1" class="headerlink" title="定理1"></a><span id="theorem1">定理1<span></h4><blockquote><p>设$\{a_n\}$是一个数列，$E$与$a^<em>$的含义与<a href="#define1">定义1</a>中一样，那么<br>（1）$a^</em> \in E$; <br/><br>（2）若$x&gt;a^<em>$，则存在$N&gt;\mathbb{N^{</em>}}$，当$n \ge N$时，有$a_n &lt; x$; <br/><br>（3）$a^*$是满足前两条性质的唯一的数。即由（1）（2）也可以定理上极限。</p></blockquote><p>证：（1）若$a^<em>=+\infty$，则$E$无上界，可知$\{a_n\}$也没有上界，所以必然可以从$\{a_n\}$中选取一个趋于$+\infty$的子列，即$a^</em> \in E$，<br>如果$a^<em>=-\infty$，则$E={-\infty}$，显然由$a^</em> \in E$<br>如果$a^<em>$是一个有限数，由于$a^</em>=\sup E$，从而必存在$l_1\in E$，使得</p><script type="math/tex; mode=display">    a^* - 1 < l_1 < a^* + 1</script><p>又由于$l_1$是$\{a_n\}$某个子列的极限，则一定存在正整数$k_1$，使得</p><script type="math/tex; mode=display">    a^* - 1 < a_{k_1} < a^* + 1</script><p>同理，存在$l_2 \in E$，使得</p><script type="math/tex; mode=display">    a^* - \frac{1}{2} < l_2 < a^* + \frac{1}{2}</script><p>$l_2$是$\{a_n\}$的某个子列的极限，则一定存在正整数$k_2 &gt; k_1$，使得</p><script type="math/tex; mode=display">    a^* - \frac{1}{2} < a_{k_2} < a^* + \frac{1}{2}</script><p>归纳可得，对任何$n \in \mathbb{N^*}$，存在$k_n$，满足$k_n&gt;k_{n-1}&gt;\cdots&gt;k_1$，使得</p><script type="math/tex; mode=display">    a^* - \frac{1}{n} < a_{k_n} < a^* + \frac{1}{n}</script><p>所以有$\lim \limits_{n \to \infty}a_{k_n} = a^<em>$，即找到了$\{a_n\}$的一个子列收敛于$a^</em>$，所以$a^<em> \in E$。<br/><br>（2）反证法。假设存在无穷多个$n$，满足$a_n \ge x$，则存在一个$y \in E$，使得$y \ge x &gt; a^</em>$，这与$a^<em>$是$E$的上确界矛盾。<br/><br>（3）反证法。假设存在两个不同的数$p，q$同时满足（1）（2），不妨设$p&lt;q$，取$x$，使得$p&lt;x&lt;q$，由（2）可知，存在$N \in \mathbb{N^</em>}$，使得当$n \ge N$时，有$a_n &lt; x$，易知$E$中的点不可能超过$x$，这是$q$不能满足（1）。  </p><p>Q.E.D.</p><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a>定理2</h4><blockquote><p>设$\{a_n\}$是一个数列，$E$与$a_<em>$的含义与<a href="#define1">定义1</a>中一样，那么<br>（1）$a_</em> \in E$; <br/><br>（2）若$x &lt; a_<em>$，则存在$N&gt;\mathbb{N^{</em>}}$，当$n \ge N$时，有$a_n &gt; x$; <br/><br>（3）$a_*$是满足前两条性质的唯一的数。即由（1）（2）也可以定理下极限。</p></blockquote><p>证法与<a href="#theorem1">定理1</a>的证明方法几乎一样（从略）。</p><h4 id="定理3"><a href="#定理3" class="headerlink" title="定理3"></a>定理3</h4><blockquote><p>设$\{a_n\},\{b_n\}$是两个数列，<br/><br>（1）$\liminf \limits_{n \to \infty}a_n \le \limsup \limits_{n \to \infty}a_n$ <br/><br>（2）$\lim \limits_{n \to \infty}a_n = a$当且仅当$\liminf \limits_{n \to \infty}a_n = \limsup \limits_{n \to \infty}a_n = a$ <br/><br>（3）若$N$是某个正整数，当$n&gt;N$时，有$a_n \le b_n$，那么</p><script type="math/tex; mode=display">    \liminf \limits_{n \to \infty}a_n \le \liminf \limits_{n \to \infty}b_n，\quad \limsup \limits_{n \to \infty}a_n \le \limsup \limits_{n \to \infty}b_n</script></blockquote><p>证：（1）（2）显然，下面只证（3）的右边等式，左边等式可以相似的证明。记</p><script type="math/tex; mode=display">    \limsup \limits_{n \to \infty}a_n = a^*, \quad \limsup \limits_{n \to \infty}b_n = b^*</script><p>若$b^<em>=+\infty$，不等式自然成立；当$a^</em>=+\infty$，存在子列$a_{k_n} \to +\infty (n \to \infty)$，这时也有$b_{k_n} \to +\infty (n \to \infty)$，从而有$b^<em> = +\infty$，不等式等号成立；同样若$a^</em>$与$b^<em>$中有一个为$-\infty$时，结论也成立。现在设$a^</em>$与$b^<em>$都是有限数，采用反证法，假设$b^</em> &lt; a^<em>$，取$x$，使得$b^</em> &lt; x &lt; a^*$，由<a href="#theorem1">定理1</a>（2）可知，存在正整数$N_1$，使得当$n&gt;N_1$时，有$b_n &lt; x$，取$n&gt;\max(N, N_1)$时，有</p><script type="math/tex; mode=display">    a_n \le b_n < x < a^*</script><p>这与$a^*$的定义矛盾。</p><p>（3）也可以不采用反证法。由$a^<em>$的性质可知，可从$\{a_n\}$中取出一个子列$\{a_{k_n}\}$，使得$\lim \limits_{n \to \infty}a_{k_n} = a^</em>$，又当$k_n \ge n &gt; N$，$a_{k_n} \le b_{k_n}$，这时可以从$b_{k_n}$中取出一个收敛子列$\{b_{i_{k_{n}}}\}$，相应的$\{a_{k_n}\}$的子列为$\{a_{i_{k_{n}}}\}$，由$\lim \limits_{n \to \infty}a_{k_n} = a^*$，可得</p><script type="math/tex; mode=display">    \lim \limits_{n \to \infty}a_{i_{k_n}} = a^*</script><p>又由$a_{i_{k_{n}}} \le b_{i_{k_{n}}}$，可得</p><script type="math/tex; mode=display">    \lim \limits_{n \to \infty}b_{i_{k_n}} \ge a^*</script><p>而$\{b_{i_{k_{n}}}\}$显然也是$\{b_n\}$的子列，从而有</p><script type="math/tex; mode=display">    b^* \ge \lim \limits_{n \to \infty}b_{i_{k_n}} \ge a^*</script><p>Q.E.D.</p><h4 id="定理4"><a href="#定理4" class="headerlink" title="定理4"></a>定理4</h4><blockquote><p>对数列$\{a_n\}$，定义$\alpha_n=\inf \limits_{k \ge n}a_k，\beta_n = \sup \limits_{k \ge n}a_k$，那么 <br/><br>（1）$\{\alpha_n\}$是递增数列，$\{\beta_n\}$是递减数列； </br><br>（2）$\lim \limits_{n \to \infty} \alpha_n = a_<em>，\lim \limits_{n \to\infty} \beta_n =a^</em>$。 </p></blockquote><p>证：（1）按定义，有$\alpha_n = \inf\{a_n,a_{n+1},\cdots\}, \quad \alpha_{n+1}=\inf\{a_{n+1}, a_{n+2}, \cdots\}$，显然有$\alpha_n \le \alpha_{n+1}$，同理可得$\beta_n \ge \beta_{n+1}$。<br>（2）这里只证明右边等式，左边等式的证明是类似的。<br>（a）先设$a^<em>$是一个有限数，由<a href="#theorem1">定理1</a>（1）可知$a^</em> \in E$，所以存在$\{a_n\}$的一个子列$\{a_{k_n}\}$，使得$\lim \limits_{n \to \infty}a_{k_n} = a^*$，而$k_n \ge n$，所以$a_{k_n} \le \sup\{a_n,a_{n+1},\cdots\}=\beta_n$，从而有</p><script type="math/tex; mode=display">    \lim \limits_{n \to \infty}a_{k_n} \le \lim \limits_{n \to \infty}\beta_n \Rightarrow a^* \le \lim \limits_{n \to \infty}\beta_n \tag 1</script><p>对任意的$\varepsilon&gt;0$，由<a href="#theorem1">定理1</a>（2）可知，存在$n_0 \in N^<em>$，当$n \ge n_0$时，有$a_n \le a^</em> + \varepsilon$，因此$\sup \limits_{k \ge n_0}a_n \le a^<em> + \varepsilon$，即$\beta_{n_0} \le a^</em> + \varepsilon$<br>，又由于$\{\beta_n\}$是递减的，所以当$n&gt;n_0$时，$\beta_n \le \beta_{n_0} \le a^<em> + \varepsilon$，再令$\varepsilon \to 0$，从而有$\lim \limits_{n \to \infty}\beta_n \le a^</em> + \varepsilon$，得</p><script type="math/tex; mode=display">    \lim \limits_{n \to \infty}\beta_n \le a^* \tag 2</script><p>由（1）（2）可得$\lim \limits_{n \to \infty}\beta_n = a^<em>$<br>（b）设$a^</em> = +\infty$，则有一子列趋于$+\infty$，从而有</p><script type="math/tex; mode=display">    \beta_n = \sup\{a_n, a_{n+1},\cdots\} = +\infty</script><p>从而有$\lim \limits_{n \to \infty}\beta_n = +\infty$。</p><p>Q.E.D.</p><h4 id="定理5：Stolz定理"><a href="#定理5：Stolz定理" class="headerlink" title="定理5：Stolz定理"></a>定理5：Stolz定理</h4><blockquote><p>设$\{b_n\}$是严格递增且趋于$+\infty$的数列，如果</p><script type="math/tex; mode=display">    \lim \limits_{n \to \infty}\frac{a_n - a_{n-1}}{b_n - b_{n-1}}=A</script><p>那么</p><script type="math/tex; mode=display">    \lim \limits_{n \to \infty}\frac{a_n}{b_n} = A</script><p>其中$A$可以是$+\infty,-\infty$或有限数。</p></blockquote><p>证：（a）先设$A$是有限数，由极限定义可知，对任意$\varepsilon&gt;0$，存在$n_0 \in \mathbb{N^*}$，使得当$n \ge n_0$时，有</p><script type="math/tex; mode=display">    A-\varepsilon < \frac{a_n-a_{n-1}}{b_n-b_{n-1}} < A+\varepsilon</script><p>从而有</p><script type="math/tex; mode=display">    \begin{aligned}    A-\varepsilon & < \frac{a_{n_0}-a_{n_0-1}}{b_{n_0}-b_{n_0-1}} < A+\varepsilon \Rightarrow (A-\varepsilon)(b_{n_0}-b_{n_0-1}) < a_{n_0} - a_{n_0-1} < (A+\varepsilon)(b_{n_0}-b_{n_0}-1) \\    A-\varepsilon & < \frac{a_{n_0+1}-a_{n_0}}{b_{n_0+1}-b_{n_0}} < A+\varepsilon \Rightarrow (A-\varepsilon)(b_{n_0+1}-b_{n_0}) < a_{n_0+1} - a_{n_0} < (A+\varepsilon)(b_{n_0+1}-b_{n_0}) \\    & \cdots \\    A-\varepsilon &< \frac{a_{n}-a_{n-1}}{b_{n}-b_{n-1}} < A+\varepsilon \Rightarrow (A-\varepsilon)(b_{n}-b_{n-1}) < a_{n} - a_{n-1} < (A+\varepsilon)(b_{n}-b_{n-1})    \end{aligned}</script><p>得</p><script type="math/tex; mode=display">    (A-\varepsilon)(b_n - b_{n_0-1}) < a_n - a_{n_0-1} < (A+\varepsilon)(b_n - b_{n_0-1}) \Rightarrow A-\varepsilon < \frac{a_n - a_{n_0-1}}{b_n - b_{n_0-1}} < A+\varepsilon</script><p>即</p><script type="math/tex; mode=display">    A-\varepsilon < \frac{\frac{a_n}{b_n} - \frac{a_{n_0-1}}{b_n}}{1-\frac{b_{n_0-1}}{b_n}} < A+\varepsilon</script><p>于是得</p><script type="math/tex; mode=display">    (A-\varepsilon)(1-\frac{b_{n_0-1}}{b_n}) + \frac{a_{n_0-1}}{b_n} < \frac{a_n}{b_n} < (A+\varepsilon)(1-\frac{b_{n_0-1}}{b_n}) + \frac{a_{n_0-1}}{b_n}</script><p>从而得</p><script type="math/tex; mode=display">    A - \varepsilon \le \liminf \limits_{n\to\infty} \frac{a_n}{b_n} \le \limsup \limits_{n\to\infty} \frac{a_n}{b_n} \le A + \varepsilon</script><p>此时令$\varepsilon \to 0$，即得</p><script type="math/tex; mode=display">    \liminf \limits_{n\to\infty} \frac{a_n}{b_n} = \limsup \limits_{n\to\infty} \frac{a_n}{b_n} = A</script><p>所以</p><script type="math/tex; mode=display">    \lim \limits_{n\to\infty} \frac{a_n}{b_n} = A</script><p>（b）设$A=+\infty$，当$n$充分大时，$a_n - a_{n-1} &gt; b_n - b_{n-1} &gt; 0$，所以$\{a_n\}$从某项开始也是严格递增且趋于$+\infty$，从而有</p><script type="math/tex; mode=display">    \lim \limits_{n \to \infty}\frac{b_n - b_{n-1}}{a_n - a_{n-1}}=0</script><p>由（a）可知，$\lim \limits_{n\to\infty} \frac{b_n}{a_n} = 0$，从而有$\lim \limits_{n\to\infty} \frac{a_n}{b_n} = +\infty$；</p><p>（c）设$A=-\infty$，设$c_n = -a_n$，可知</p><script type="math/tex; mode=display">    \lim \limits_{n \to \infty}\frac{c_n - c_{n-1}}{b_n - b_{n-1}} = - \lim \limits_{n \to \infty}\frac{a_n - a_{n-1}}{b_n - b_{n-1}}=+\infty</script><p>由（b）可知，有$\lim \limits_{n\to\infty} \frac{c_n}{b_n} = +\infty$，从而有$\lim \limits_{n\to\infty} \frac{a_n}{b_n} = -\infty$   </p><p>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 上极限与下极限 </tag>
            
            <tag> 点列极限 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>点列极限二：实数连续性</title>
      <link href="/2020/09/24/%E7%82%B9%E5%88%97%E6%9E%81%E9%99%902/"/>
      <url>/2020/09/24/%E7%82%B9%E5%88%97%E6%9E%81%E9%99%902/</url>
      
        <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>在点列极限一的定理7证明了单调有界的数列必收敛，此命题是实数连续性的表现之一，本篇将会说明实数连续性的6个等价命题，即这6个命题可以互相推出，而<code>单调有界的数列必收敛</code>命题前面已经证明，所以只需要在这6个命题中做循环论证即可。本篇将会首先列出这6个命题的描述，然后证明其相互等价。</p><a id="more"></a><h4 id="定理1：单调且有界的数列一定收敛。"><a href="#定理1：单调且有界的数列一定收敛。" class="headerlink" title="定理1：单调且有界的数列一定收敛。"></a><span id="theorem1">定理1：单调且有界的数列一定收敛。</span></h4><h4 id="定理2：闭区间套定理"><a href="#定理2：闭区间套定理" class="headerlink" title="定理2：闭区间套定理"></a><span id="theorem2">定理2：闭区间套定理</span></h4><blockquote><p>设$I_n=[a_n,b_n] (n \in \mathbb{N^*})$，并且有$I_1 \supset I_2 \supset I_3 \supset \cdots \supset I_n \supset I_{n+1}\supset \cdots$，如果这一列区间的长度$|I_n|=b_n-a_n \to 0(n \to \infty)$，那么交集$\bigcap \limits_{n=1}^NI_n$含有唯一的点。</p></blockquote><h4 id="定理3：（Bolzano-Weierstrass）列紧性定理"><a href="#定理3：（Bolzano-Weierstrass）列紧性定理" class="headerlink" title="定理3：（Bolzano-Weierstrass）列紧性定理"></a><span id="theorem3">定理3：（Bolzano-Weierstrass）列紧性定理</span></h4><blockquote><p>从任何有界数列中必可以选出一个收敛的子列。</p></blockquote><h4 id="定义1：基本列"><a href="#定义1：基本列" class="headerlink" title="定义1：基本列"></a><span id="define1">定义1：基本列</span></h4><blockquote><p>设$\{a_n\}$是一个实数数列，若对$\forall \varepsilon&gt;0$，$\exists N \in \mathbb{N^*}$，使得当$m,n&gt;N$时，有</p><script type="math/tex; mode=display">    |a_m-a_n| < \varepsilon</script><p>则称该数列是一个基本列或Cauchy列。<br>该定义的一个等价叙述为：$\forall \varepsilon &gt; 0$，$\exists N \in \mathbb{N^*}$，使得当$n &gt; N$时，有</p><script type="math/tex; mode=display">    |a_{n+p} - a_n| < \varepsilon</script><p>对一切$p \in \mathbb{N^*}$对成立，则称该数列为基本列。</p></blockquote><h4 id="定理4：Cauchy收敛原理"><a href="#定理4：Cauchy收敛原理" class="headerlink" title="定理4：Cauchy收敛原理"></a><span id="theorem4">定理4：Cauchy收敛原理</span></h4><blockquote><p>一个数列收敛的充分必要条件是，它是基本列。</p></blockquote><h4 id="定义2：上确界与下确界"><a href="#定义2：上确界与下确界" class="headerlink" title="定义2：上确界与下确界"></a>定义2：上确界与下确界</h4><blockquote><p>设$E$为一非空的由上界的集合，实数$\beta$满足以下两个条件： <br /><br>（1）$\forall x \in E$，有$x \le \beta$  <br /><br>（2）$\forall \varepsilon &gt; 0，\exists x_{\varepsilon} \in  E$，使得$x_{\varepsilon} &gt; \beta - \varepsilon$ <br/><br>则称$\beta$为集合$E$的<strong>上确界</strong>，记为$\beta = \sup E$； <br/><br>若另一实数$\alpha$满足以下两个条件： <br/><br>（1）$\forall x \in E$，有$x \ge \alpha$ <br/><br>（2）$\forall \varepsilon &gt; 0，\exists y_{\varepsilon} \in  E$，使得$y_{\varepsilon} &lt; \alpha + \varepsilon$ <br/><br>则称$\alpha$为集合$E$的<strong>下确界</strong>，记为$\alpha = \inf E$。</p></blockquote><h4 id="定理5：确界存在原理"><a href="#定理5：确界存在原理" class="headerlink" title="定理5：确界存在原理"></a><span id="theorem5">定理5：确界存在原理</span></h4><blockquote><p>非空的有上界的集合必有上确界；非空的有下界的集合必有下确界。</p></blockquote><h4 id="定义3：开覆盖"><a href="#定义3：开覆盖" class="headerlink" title="定义3：开覆盖"></a>定义3：开覆盖</h4><blockquote><p>若$A$是实数集，$\mathscr{I}=\{I_{\lambda}\}$是一个开区间族，其中$\lambda \in \Lambda$，这里$\Lambda$称为指标集。如果</p><script type="math/tex; mode=display">    A \subset \bigcup \limits_{\lambda \in \Lambda}I_{\lambda}</script><p>则称开区间族$\{I_\lambda\}$是$A$的一个开覆盖。</p></blockquote><h4 id="定理6：（Heine-Borel）有限覆盖定理或紧致性定理"><a href="#定理6：（Heine-Borel）有限覆盖定理或紧致性定理" class="headerlink" title="定理6：（Heine-Borel）有限覆盖定理或紧致性定理"></a><span id="theorem6">定理6：（Heine-Borel）有限覆盖定理或紧致性定理</span></h4><blockquote><p>设$[a,b]$是一个有限闭区间，并且它有一个开覆盖$\{I_\lambda\}$，那么从这个开区间族中必可以选出有限个元素（开区间），使得 这有限个开区间构成的族仍是$[a,b]$的开覆盖。</p></blockquote><h4 id="六条定理的等价证明"><a href="#六条定理的等价证明" class="headerlink" title="六条定理的等价证明"></a>六条定理的等价证明</h4><p>以下图的证明顺序来证明定理的等价</p><pre class="mermaid">graph LR定理1 --> 定理2 --> 定理3 --> 定理4 --> 定理5 --> 定理6 --> 定理1</pre><h5 id="定理1-Rightarrow-定理2"><a href="#定理1-Rightarrow-定理2" class="headerlink" title="定理1$\Rightarrow$定理2"></a>定理1$\Rightarrow$定理2</h5><p>证：由闭区间族$\{I_n\}$的性质可知，数列$\{a_n\}$单调递增，$\{b_n\}$单调递减，显然$b_1$是$\{a_n\}$的一个上界，$a_1$是$\{b_n\}$的一个下界，所以由<a href="#theorem1">定理1</a>可知，$\{a_n\}$与$\{b_n\}$都收敛，不妨设</p><script type="math/tex; mode=display">    \lim \limits_{n \to \infty}a_n = a, \quad \lim \limits_{n \to \infty}b_n = b</script><p>又显然有$a_n \le b_n (n \in \mathbb{N^*})$，所以由极限保号性可知$a \le b$，从而</p><script type="math/tex; mode=display">    a_n \le a \le b \le b_n (n \in \mathbb{N^*})</script><p>此时有</p><script type="math/tex; mode=display">     0 \le |b-a| \le |b_n-a_n| = |I_n| \to 0 (n \to \infty)</script><p>可知$a=b$，又因为$a_n \le a \le b_n (n\in \mathbb{N^<em>})$，即$a_n \in I_n (n \in \mathbb{N^</em>})$，所以</p><script type="math/tex; mode=display">    a \in \bigcap \limits_{n=1}^\infty I_n</script><p>假设还存在$c \ne a$，使得$c \in \bigcap \limits_{n=1}^\infty I_n$，则有$c,a \in [a_n, b_n]$，从而</p><script type="math/tex; mode=display">    |I_n|=|b_n-a_n| \ge |c-a|</script><p>由于$|c-a|$是个常数，从而与$|I_n| \to 0 (n \to \infty)$矛盾，从而这样的$a$唯一。<br>Q.E.D.</p><h5 id="定理2-Rightarrow-定理3"><a href="#定理2-Rightarrow-定理3" class="headerlink" title="定理2$\Rightarrow$定理3"></a>定理2$\Rightarrow$定理3</h5><p>证：由于数列$\{x_n\}$有界，不妨设$m \le x_n \le M (n \in \mathbb{N^<em>})$，令区间$[a_1,b_1]=[m,M]$，将区间$[a_1,b_1]$按中点$(a+b)/2$分成两个闭子区间，显然必有一个子区间包含$\{x_n\}$中无穷多项，记该区间为$[a_2,b_2]$，接着对$[a_2,b_2]$进行上述分析，可以得到闭区间$[a_3,b_3]$包含数列$\{x_n\}$的无穷多项，若此继续分析下去，可以得到一列闭区间套$I_n=[a_n,b_n] (n \in \mathbb{N^</em>})$，有$I_1 \supset I_2 \supset I_3 \supset \cdots$，$|I_n|=(M-m)/2^{n-1} (n \in \mathbb{N^<em>})$，并且对所有$n \in \mathbb{N^</em>}$，$I_n$包含$\{x_n\}$的无穷多项。<br>根据<a href="#theorem2">定理2</a>可知，$\exists x \in \mathbb{R}$，使得</p><script type="math/tex; mode=display">    \lim \limits_{n\to\infty} a_n = x, \quad \lim \limits_{n\to\infty} b_n = x</script><p>从而$\forall \varepsilon &gt; 0, \exists N \in \mathbb{N^*}$，使得当$ n&gt; N$时有</p><script type="math/tex; mode=display">    x-\varepsilon \le a_{n} \le x \le b_{n} \le x + \varepsilon</script><p>可知，$\forall k \in \mathbb{N^<em>}，\exists n_k \in \mathbb{N^</em>}$，使得</p><script type="math/tex; mode=display">    x - \frac{1}{k} \le a_{n_k} \le x \le b_{n_k} \le x + \frac{1}{k}</script><p>由于$[a_{n_1}, b_{n_1}]$包含$\{x_n\}$的无穷多项，从而存在$x_{r_1} \in [a_{n_1}, b_{n_1}]$，此时有</p><script type="math/tex; mode=display">    x - 1 \le a_{n_1} \le x_{r_1} \le b_{n_1} \le x + 1</script><p>又因为$[a_{n_2}, b_{n_2}]$包含$\{x_n\}$的无穷多项，从而存在$r_2 &gt; r_1$，使得$x_{r_2} \in [a_{n_2}, b_{n_2}]$，此时有</p><script type="math/tex; mode=display">    x - \frac{1}{2} \le a_{n_2} \le x_{r_2} \le b_{n_2} \le x + \frac{1}{2}</script><p>如此下去，可知存在$x_{r_i} \in [a_{n_i},b_{n_i}] (1,2,\cdots)$，满足$x_{r_1} &lt; x_{r_2} &lt; x_{r_3} &lt; \cdots$，且有</p><script type="math/tex; mode=display">    x - \frac{1}{i} \le x_{r_i} \le x + \frac{1}{i}</script><p>所以有</p><script type="math/tex; mode=display">    \lim \limits_{i \to \infty} x_{r_i} = x</script><p>即找到了数列$\{x_n\}$的一个子列$\{x_{r_i}\}$收敛于$x$。<br>Q.E.D.</p><h5 id="定理3-Rightarrow-定理4"><a href="#定理3-Rightarrow-定理4" class="headerlink" title="定理3$\Rightarrow$定理4"></a>定理3$\Rightarrow$定理4</h5><p>证：必要性。设$\{a_n\}$是一个收敛数列，其极限为$a$，则$\forall \varepsilon&gt;0，\exists N\in \mathbb{N^*}$，使得当$n&gt;N$时，有</p><script type="math/tex; mode=display">    |a_n - a| < \frac{\varepsilon}{2}</script><p>当$n,m&gt;N$时，可知</p><script type="math/tex; mode=display">    |a_n - a_m| = |a_n - a + a - a_m| \le |a_n-a| + |a_m - b| < \varepsilon</script><p>从而$\{a_n\}$是基本列。<br>充分性。先证明Cauchy基本列有界，由<a href="#define1">基本列定义</a>可知，存在$ N\in \mathbb{N^*}$，使得当$n&gt;N$时，有</p><script type="math/tex; mode=display">    |a_n - a_{N+1}| < 1</script><p>可知</p><script type="math/tex; mode=display">    |a_n| \le |a_n - a_{N+1}| + |a_{N+1}| < 1 + |a_{N+1}|</script><p>令$M = \max(|a_1|,|a_2|,\cdots,|a_{N}|,1+|a_{N+1}|)$，显然有$|a_n| \le M (n \in \mathbb{N^<em>})$，表明$\{a_n\}$有界。<br>根据<a href="#theorem3">定理3</a>可知，$\{a_n\}$中可以选出一个收敛子列$\{a_{i_n}\}$，设$\lim \limits_{n \to \infty}a_{i_n} = a$，下面证明$a$就是数列$\{a_n\}$的极限。<br>$\forall \varepsilon &gt; 0$，存在$N_1 \in \mathbb{N^</em>}$，使得当$n&gt;N_1$时，有$|a_{i_{n}}-a| &lt; \frac{\varepsilon}{2}$；同时存在$N_2 \in \mathbb{N^*}$，使得当$n,m &gt; N_2$时，有$|a_n-a_m| &lt; \frac{\varepsilon}{2}$，取$N= \max(N_1, N_2)$，可知当$n &gt; N$时有</p><script type="math/tex; mode=display">    |a_n - a| \le |a_n - a_{i_n}| + |a_{i_n} - a| < \varepsilon</script><p>说明$\lim \limits_{n \to \infty}a_n = a$。<br>Q.E.D.</p><h5 id="定理4-Rightarrow-定理5"><a href="#定理4-Rightarrow-定理5" class="headerlink" title="定理4$\Rightarrow$定理5"></a>定理4$\Rightarrow$定理5</h5><p>下面只证明有上界必有上确界。有下界必有下确界可以类似证明（从略）。<br>证：设非空集合$E$的一个上界为$\gamma$，任取一点$x \in E$，可知最小上界只可能在$[x,\gamma]$中，记$[a_1,b_1]=[x,\gamma]$，用$[a_1,b_1]$的中点$(a+b)/2$将该区间一分为二，若右边闭区间包含$E$中的点，则将该区间记为$[a_2,b_2]$，否则将左边闭区间记为$[a_2,b_2]$，接着对$[a_2,b_2]$做上述类似的讨论，可得到区间$[a_3,b_3]$，若此继续下去，可以得到一列闭区间套$I_n=[a_n,b_n] (n \in \mathbb{N^<em>})$，$I_1 \supset I_2 \supset I_3 \supset \cdots$，且$|I_n|=b_n-a_n=(\gamma - x)/2^{n-1} \to 0 (n\to \infty)$，则$\forall \varepsilon &gt; 0，\exists N \in \mathbb{N^</em>}$，且该区间套包含两个重要的特征：<br>（a）$I_n$的右端点$b_n$的右边没有$E$中的点，即$[b_n,+\infty] (n=1,2,\cdots)$都是$E$的上界。<br>（b）$I_n$总是包含$E$中的点。<br>使得当$n &gt; N$时，有$b_n - a_n &lt; \varepsilon$，此时$\forall p \in \mathbb{N^*}$，有</p><script type="math/tex; mode=display">    |b_{n+p} - b_n| = b_n - b_{n+p} < b_n - a_{n+p} < b_n - a_n < \varepsilon</script><p>所以$\{b_n\}$是基本列，有<a href="#theorem4">定理4</a>可知，数列$\{b_n\}$收敛，设$\lim \limits_{n\to\infty}b_n=\beta$，下面证明$\beta=\sup E$。</p><p>（1）证明$\beta$是上界。任取$c \in E$，由（a）可知，有$c \le b_n$，令$n \to \infty$，得到$c \le \beta$<br>（2）证明$\beta$是上确界。由$\lim \limits_{n \to \infty}(b_n - a_n) = 0$，$\lim \limits_{n \to \infty}b_n = \beta$，可知$\forall \varepsilon &gt; 0, \exists N_1 \in \mathbb{N^*}$，使得当$n&gt;N_1$时，有</p><script type="math/tex; mode=display">    b_n - a_n < \frac{\varepsilon}{2}</script><p>同时$\exists N_2 \in \mathbb{N}$，使得当$n &gt; N_2$时，有</p><script type="math/tex; mode=display">    |b_n - \beta| < \frac{\varepsilon}{2} \Rightarrow b_n > \beta - \frac{\varepsilon}{2}</script><p>从而有</p><script type="math/tex; mode=display">    a_n = b_n - (b_n - a_n) > \beta - \frac{\varepsilon}{2} - \frac{\varepsilon}{2} = \beta - \varepsilon</script><p>则由（b）可知，存在$E$中的点记为$d$，满足$d \in [a_n,b_n]$，从而有$d \ge a_n &gt; \beta - \varepsilon$，所以$\beta$是最小上界。<br>Q.E.D.</p><h5 id="定理5-Rightarrow-定理6"><a href="#定理5-Rightarrow-定理6" class="headerlink" title="定理5$\Rightarrow$定理6"></a>定理5$\Rightarrow$定理6</h5><p>证：设$[a,b]$有一个开覆盖$H$，令$S=\{x| a &lt; x \le b,[a,x]可以被H的有限个元素覆盖\}$，可知$S$由上界。<br>（1）证明$S$非空。因为$a \in [a,b] \subset H$，所以存在$[\alpha, \beta] \in H$，使得$a \in [\alpha, \beta]$，取$x \in (\alpha, \beta)$，则$[a,x] \subset [\alpha, \beta]$，记$x \in S$，所以$S$非空。<br>（2）由<a href="#theorem5">定理5</a>可知，$S$有上确界，令$\sup S = \eta$，证明$b=\eta$。反证法。假设$\eta &lt; b$，则有$a &lt; \eta &lt; b$，可知存在$[\alpha_1, \beta_1] \in H$，使得$\eta \in [\alpha_1, \beta_1]$，由于$\eta$是$E$的上确界，所以必存在$x_1 \in S$，使得$\alpha_1 &lt; x_1 &lt; \eta$，取$x_2 \in R$，使得$\eta &lt; x_2 &lt; \beta_1$，有</p><script type="math/tex; mode=display">    \alpha_1 < x_1 < \eta < x_2 < \beta_1</script><p>从而有</p><script type="math/tex; mode=display">    [a,x_2] \subset [a,x_1] \cup [\alpha_1, \beta_1]</script><p>由于$x_1 \in S$，所以$[a,x_1]$可以被$H$中有限个元素覆盖，而$[\alpha_1, \beta_1] \in H$，所以$[a,x_2]$可以被$H$中有限个元素覆盖，即$x_2 \in S$，与$\eta$是$E$的最小上界矛盾。所以$b=\sup S$，所以$[a,b)$能被$H$有限个元素覆盖，而$b \in H$，所以存在$[\alpha_2, \beta_2] \in H$，使得$b \in [\alpha_2, \beta_2]$，所以$[a,b]$能被$H$有限个元素覆盖。<br>Q.E.D.</p><h5 id="定理6-Rightarrow-定理1"><a href="#定理6-Rightarrow-定理1" class="headerlink" title="定理6$\Rightarrow$定理1"></a>定理6$\Rightarrow$定理1</h5><p>证：反证法。假设数列$\{a_n\}$单调并有界，但没有极限。不妨设$a_n \in [a, b] (n=1,2,\cdots)$，由于$\{a_n\}$没有极限，从而$\forall x \in [a,b]，\exists \varepsilon_x&gt;0，\forall N \in \mathbb{N^*}，\exists M &gt; N$，使得</p><script type="math/tex; mode=display">|a_{M} - x| \ge \varepsilon_x \Rightarrow a_{M} \ge x+\varepsilon_x或a_{M} \le x-\varepsilon_x</script><p>（1）先证明$\{a_n\}$无论是单调递增还是单调递减，区间$(x - \varepsilon_x, x + \varepsilon_x)$只包含$\{a_n\}$中的有限多项或者0项。<br>（1.a）若$\{a_n\}$单调递增，当$n&gt;M$时，有$a_n \ge a_{M} \ge x + \varepsilon_x$，所以$(x-\varepsilon_x,x+\varepsilon_x)$区间内只可能含有$\{a_n\}$中的有限多项，也可能不包含$\{a_n\}$的项即0个；<br>（1.b） 若$\{a_n\}$单调递减，当$n&gt;M$时，有$a_n \le a_{M} \le x - \varepsilon_x$，也可以知道$(x - \varepsilon_x, x + \varepsilon_x)$只包含$\{a_n\}$中的有限多项或者0项。<br>（2）取$H=\{(x-\varepsilon_x, x+\varepsilon_x)| x\in [a,b]\}$，可知$H$是$[a,b]$的一个开覆盖，由<a href="#theorem6">定理6</a>可知，存在$\exists n_0 \in \mathbb{N^*}$，使得</p><script type="math/tex; mode=display">\bigcup \limits_{i=1}^{n_0}(x_i-\varepsilon_i,x_i+\varepsilon_i) \supset [a,b]</script><p>其中$(x_i-\varepsilon_i,x_i+\varepsilon_i) \in H (i=1,2,\cdots)$，记$H_{n_0} = \bigcup \limits_{i=1}^{n_0}(x_i-\varepsilon_i,x_i+\varepsilon_i)$；<br>由于$n_0$是有限数，且属于$H_{n_0}$每个开区间也只包含$\{a_n\}$中的有限项，所以$H_{n_0}$只包含$\{a_n\}$的有限项，从而$[a, b]$只包含$\{a_n\}$的有限项，与$a_n \in [a, b] (n=1,2,\cdots)$矛盾。所以$\{a_n\}$有极限。<br>Q.E.D.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 点列极限 </tag>
            
            <tag> 实数连续性 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>点列极限一：数列极限定义与基本性质</title>
      <link href="/2020/09/20/%E7%82%B9%E5%88%97%E6%9E%81%E9%99%901/"/>
      <url>/2020/09/20/%E7%82%B9%E5%88%97%E6%9E%81%E9%99%901/</url>
      
        <content type="html"><![CDATA[<h4 id="定义1"><a href="#定义1" class="headerlink" title="定义1"></a><span id="define1">定义1</span></h4><blockquote><p>在$\mathbb{R}$上，设$\{a_n\}$是一个数列，$a \in \mathbb{R}$，若$\forall \varepsilon&gt;0$，$\exists N(\varepsilon)\in \mathbb{N^*}$，使得$\forall n&gt;N(\varepsilon)$，有$|a_n-a|&lt;\varepsilon$，则称$\{a_n\}$当$n$趋于无穷大时以$a$为极限，记为</p><script type="math/tex; mode=display">    \lim_{n\to \infty} a_n = a</script><p>或 </p><script type="math/tex; mode=display">a_n \to a \quad (n \to \infty)</script><p>也称数列$\{a_n\}$收敛于$a$； 存在极限的数列称为收敛数列，否则称为发散数列。</p></blockquote><a id="more"></a><h4 id="定理1：数列极限唯一性"><a href="#定理1：数列极限唯一性" class="headerlink" title="定理1：数列极限唯一性"></a>定理1：数列极限唯一性</h4><blockquote><p>如果数列$\{a_n\}$收敛，那么极限只有一个。</p></blockquote><p>证：反证法。假设存在两个不同的极限$a, b$，不妨设 $a &lt; b$，由<a href="#define1">定义1</a>可知，对$\frac{b-a}{2}&gt;0$，存在$N_1 \in \mathbb{N^*}$，使得当$n&gt;N_1$时，有</p><script type="math/tex; mode=display">    |a_n-a|<\frac{b-a}{2} \tag 1</script><p>同理存在$N_2 \in \mathbb{N^*}$，使得当$n&gt;N_2$时，有</p><script type="math/tex; mode=display">    |a_n-b|<\frac{b-a}{2} \tag 2</script><p>令$N=\max(N_1,N_2)$，可知当$n&gt;N$时，式(1)(2)同时成立，由式(1)可得$a_n&lt;\frac{a+b}{2}$，由式(2)可得$a_n&gt;\frac{a+b}{2}$，从而矛盾，所以假设不成立，记极限唯一。<br>Q.E.D.</p><h4 id="定义2"><a href="#定义2" class="headerlink" title="定义2"></a>定义2</h4><blockquote><p>设$\{a_n\}$是一个数列，若$\exists A \in \mathbb{R}$，使得 $\forall n \in \mathbb{N^<em>}$ ，有$a_n \le A$，则称$\{a_n\}$有上界，$A$是此数列的一个上界；若$\exists B \in \mathbb{R}$，使得$\forall n \in \mathbb{N^</em>}$，有$a_n \ge B$，则称$\{a_n\}$有下界，$B$是此数列的一个下界；若数列既有上界又有下界，则称此数列是一个有界数列。</p></blockquote><h4 id="定理2"><a href="#定理2" class="headerlink" title="定理2"></a><span id="theorem2">定理2</span></h4><blockquote><p>收敛数列是有界的。</p></blockquote><p>证：设数列$\{a_n\}$收敛于$a$，由<a href="#define1">定义1</a>可知，对于$1&gt;0$，存在$N \in \mathbb{N^<em>}$，使得当$n &gt; N$时，有$|a_n-a| &lt; 1$，从而$|a_n|=|a_n-a+a|&lt;=|a_n-a|+|a|&lt;1+|a|$，令$M=|a_1|+|a_2|+\cdots+|a_N|+|a|+1$，可知对所有的$n \in \mathbb{N^</em>}$，有$|a_n|&lt;M$。<br>Q.E.D.</p><h4 id="定义3"><a href="#定义3" class="headerlink" title="定义3"></a>定义3</h4><blockquote><p>设$\{a_n\}$是一个数列，$k_i \in \mathbb{N^*} (i=1,2,3,\cdots)$，且满足$k_1&lt;k_2&lt;k_3&lt;\cdots$，那么数列$\{a_{k_n}\}$称为$\{a_n\}$的一个子列。</p></blockquote><h4 id="定理3"><a href="#定理3" class="headerlink" title="定理3"></a>定理3</h4><blockquote><p>设数列$\{a_n\}$的极限为$a$，那么该数列的任何一个子列都收敛于$a$。</p></blockquote><p>证：任取$\{a_n\}$的一个子列$\{a_{k_n}\}，$由<a href="#define1">定义1</a>可知，任取$\varepsilon&gt;0$，存在$N\in \mathbb{N^*}$，使得当$n&gt;N$时，有$|a_n-a|&lt;\varepsilon$，而$k_n \ge n$，所以当$k_n \ge n &gt; N$时， 有$|a_{k_n}-a|&lt;\varepsilon$，所以$\{a_{k_n}\}$收敛于$a$。<br>Q.E.D.</p><h4 id="定理4：极限的四则运算"><a href="#定理4：极限的四则运算" class="headerlink" title="定理4：极限的四则运算"></a>定理4：极限的四则运算</h4><blockquote><p>设$\{a_n\}$与$\{b_n\}$都是收敛数列，则$\{a_n+b_n\}$，$\{a_nb_n\}$也是收敛数列，如果$\lim \limits_{n\to\infty}b_n \ne 0$，则$\{\frac{a_n}{b_n}\}$也收敛，并且有： <br /><br>（1）$\lim \limits_{n\to\infty}(a_n \pm b_n)=\lim \limits_{n\to\infty}a_n \pm \lim \limits_{n\to\infty}b_n$  <br /><br>（2）$\lim \limits_{n\to\infty}(a_nb_n)=\lim \limits_{n\to\infty}a_n \cdot \lim \limits_{n\to\infty}b_n$   <br /><br>（3）$\lim \limits_{n\to\infty}\frac{a_n}{b_n}=\frac{\lim \limits_{n\to\infty}a_n}{\lim \limits_{n\to\infty}b_n}$</p></blockquote><p>证：设$\lim \limits_{n\to\infty}a_n=a$，$\lim \limits_{n\to\infty}b_n=b$</p><p>（1）由<a href="#define1">定义1</a>可知，任取$\varepsilon&gt;0$，存在$N_1 \in \mathbb{N^<em>}$，使得当$n&gt;N_1$时，有$|a_n-a|&lt;\frac{\varepsilon}{2}$；存在$N_2 \in \mathbb{N^</em>}$，使得当$n&gt;N_2$时，有$|b_n-b|&lt;\frac{\varepsilon}{2}$；取$N=\max(N_1,N_2)$，可知当$n&gt;N$时，有</p><script type="math/tex; mode=display">\begin{aligned}    |(a_n \pm b_n) - (a \pm b)| & = |(a_n-a) \pm (b_n-b)| \\    & \le |a_n-a| + |b_n-b| \\    & < \frac{\varepsilon}{2} + \frac{\varepsilon}{2} = \varepsilon\end{aligned}</script><p>（2） 由于$\{a_n\}$收敛，由<a href="#theorem2">定理2</a>可知$\{a_n\}$有界，即存在$M \in N^<em>$，使得$|a_n|&lt;M$对一切$n \in N^</em>$成立，从而有</p><script type="math/tex; mode=display">\begin{aligned}    |a_nb_n-ab| & = |a_nb_n-a_nb+a_nb-ab| \\    & \le |a_n||b_n-b| + |b||a_n-a| \\    & \le M|b_n-b| + |b||a_n-a|\end{aligned}</script><p>类似（1），因为$\{a_n\}$，$\{b_n\}$分别收敛于$a,b$，所以对任意的$\varepsilon&gt;0$，存在$n \in N^*$，使得当$n&gt;N$时，有</p><script type="math/tex; mode=display">    |a_n-a|<\frac{\varepsilon}{2(|b|+1)}， |b_n-b|<\frac{\varepsilon}{2M}</script><p>同时成立；从而</p><script type="math/tex; mode=display">    |a_nb_n-ab| < M \frac{\varepsilon}{2M} + |b|\frac{\varepsilon}{2(|b|+1)} < \varepsilon</script><p>（3）先证明，当$b\ne0$时，有</p><script type="math/tex; mode=display">   \lim \limits_{n\to\infty}\frac{1}{b_n}=\frac{1}{b}</script><p>对$\frac{|b|}{2}&gt;0$，存在$N_1 \in N^<em>$，当$n&gt;N^</em>$时，有</p><script type="math/tex; mode=display">    |b_n-b|<\frac{|b|}{2}</script><p>此时，有$|b_n| \ge |b| - |b_n-b| &gt; \frac{|b|}{2} &gt; 0$，并且有</p><script type="math/tex; mode=display">    \left|\frac{1}{b_n} - \frac{1}{b}\right| = \frac{|b_n - b|}{|b_nb|} \le \frac{2}{b^2} |b_n-b|</script><p>由于$\{b_n\}$收敛于$b$，对任意的$\varepsilon&gt;0$，存在$N_2\in N^*$，使得当$n&gt;N_2$时，有$|b_n-b|&lt;\frac{b^2}{2}\varepsilon$；从而当$n&gt;\max(N_1,N_2)$时，有</p><script type="math/tex; mode=display">    \left|\frac{1}{b_n} - \frac{1}{b}\right| < \frac{2}{b^2}\frac{b^2}{2}\varepsilon=\varepsilon</script><p>所以</p><script type="math/tex; mode=display">\lim \limits_{n\to\infty}\frac{1}{b_n}=\frac{1}{b}</script><p>再由前面已证的（2），可知</p><script type="math/tex; mode=display">    \lim \limits_{n\to\infty}\frac{a_n}{b_n}=\lim \limits_{n\to\infty}a_n(\frac{1}{b_n})=\frac{b}{a}</script><p>Q.E.D.</p><h4 id="定理5：极限保号性"><a href="#定理5：极限保号性" class="headerlink" title="定理5：极限保号性"></a><span id="theorem5">定理5</span>：极限保号性</h4><blockquote><p>（1）设$\lim \limits_{n\to\infty}a_n=a$，$\alpha，\beta$满足$\alpha &lt; a &lt; \beta$，那么当$n$充分大时，有$\alpha &lt; a_n &lt; \beta$。 <br /><br>（2）设$\lim \limits_{n\to\infty}a_n=a，\lim \limits_{n\to\infty}b_n=b$，且$a &lt; b$，那么当$n$充分大时，一定有$a_n &lt; b_n$。<br/><br>（3）设$\lim \limits_{n\to\infty}a_n=a，\lim \limits_{n\to\infty}b_n=b$，并且当$n$充分大时$a_n \le b_n$，那么有$a \le b$。<br/></p></blockquote><p>证：（1）对$\varepsilon = \beta-a&gt;0$，则存在$N_1 \in \mathbb{N^*}$，使得当$n&gt;N_1$时，有</p><script type="math/tex; mode=display">    |a_n-a|<\beta-a \Rightarrow a_n<\beta</script><p>同理，对$\varepsilon = a-\alpha&gt;0$，则存在$N_2 \in \mathbb{N^*}$，使得当$n&gt;N_2$时，有</p><script type="math/tex; mode=display">    |a_n-a|<a-\alpha \Rightarrow a_n>\alpha</script><p>从而当$n&gt;\max(N_1,N_2)$时，有</p><script type="math/tex; mode=display">    \alpha < a <\beta</script><p>（2）取$m=\frac{a+b}{2}$，则有$a&lt;m&lt;b$，此时由（1）可知，当$n$充分大时，有</p><script type="math/tex; mode=display">    a_n < m < b_n</script><p>（3）反证法。假设$a&gt;b$，则由（2）可知，当$n$充分大时，有$a_n&gt;b_n$，与条件$a_n \le b_n$矛盾，所以$a \le b$。</p><p>Q.E.D.</p><h4 id="定理6：夹逼定理"><a href="#定理6：夹逼定理" class="headerlink" title="定理6：夹逼定理"></a>定理6：夹逼定理</h4><blockquote><p>三个实数域上的数列$\{a_n\},\{b_n\},\{c_n\}$，若满足</p><script type="math/tex; mode=display">    a_n \le b_n \le c_n \quad  (n \in \mathbb{N^*})</script><p>若$\lim \limits_{n\to\infty}a_n=\lim \limits_{n\to\infty}c_n=a$，那么</p><script type="math/tex; mode=display">    \lim \limits_{n\to\infty}b_n = a</script></blockquote><p>证：由<a href="#theorem5">定理5</a>的（3）可知，有</p><script type="math/tex; mode=display">    a = \lim \limits_{n\to\infty}a_n \le \lim \limits_{n\to\infty}b_n \le \lim \limits_{n\to\infty}c_n = a</script><p>从而有</p><script type="math/tex; mode=display">\lim \limits_{n\to\infty}b_n = a</script><p>Q.E.D.</p><h4 id="定义4"><a href="#定义4" class="headerlink" title="定义4"></a>定义4</h4><blockquote><p>如果数列$\{a_n\}$满足条件，对任何正数$A$，都存在$N\in \mathbb{N^*}$，使得当$n&gt;N$时，有$a_n&gt;A$，则称数列$\{a_n\}$趋向于$+\infty$，记作</p><script type="math/tex; mode=display">    \lim \limits_{n\to\infty}a_n = +\infty</script><p>如果对任何正数$A$，都存在$N\in \mathbb{N^*}$，使得当$n&gt;N$时，有$a_n&lt;-A$，则称数列$\{a_n\}$趋向于$-\infty$，记作</p><script type="math/tex; mode=display">    \lim \limits_{n\to\infty}a_n = -\infty</script></blockquote><h4 id="定义5"><a href="#定义5" class="headerlink" title="定义5"></a>定义5</h4><blockquote><p>如果收敛数列$\{a_n\}$的极限为0，则称该数列为无穷小数列，简称无穷小；如果$\lim \limits_{n\to\infty}|a_n|=\infty$，则称该数列趋向于$\infty$，记作$\lim \limits_{n\to\infty}a_n=\infty$，也称该数列为无穷大数列，简称无穷大。</p></blockquote><h4 id="定义6：单调数列"><a href="#定义6：单调数列" class="headerlink" title="定义6：单调数列"></a>定义6：单调数列</h4><blockquote><p>如果数列$\{a_n\}$满足</p><script type="math/tex; mode=display">    a_n \le a_{n+1} \quad (n=1,2,\cdots)</script><p>则称此数列为递增数列；如果$\{a_n\}$满足</p><script type="math/tex; mode=display">    a_n \ge a_{n+1} \quad (n=1,2,\cdots)</script><p>则称此数列为递减数列；如果上面两个不等式都是严格的，即$a_n &lt; a_{n+1}$（或$a_n &gt; a_{n+1}$）（$n=1,2,\cdots$），则称此数列为严格递增的（或严格递减的）</p></blockquote><h4 id="定理7：单调且有界的数列一定有界。"><a href="#定理7：单调且有界的数列一定有界。" class="headerlink" title="定理7：单调且有界的数列一定有界。"></a>定理7：单调且有界的数列一定有界。</h4><p>证：不妨设数列$\{a_n\}$为递增的且有上界，利用实数都可以表示成十进制无尽小数的性质，将该数列的每项表示为无尽小数：</p><script type="math/tex; mode=display">    \begin{aligned}    a_1 & = A_1.b_{11}b_{12}\cdots \\    a_2 & = A_2.b_{21}b_{22}\cdots \\    a_3 & = A_3.b_{31}b_{32}\cdots \\    & \cdots    \end{aligned}</script><p>其中$A_1,A_2,A_3,\cdots$都是整数，而$b_{ij}$是0到9中的数。由于$\{a_n\}$有上界，从而$\{A_n\}$必有上界，记该数为$A$，而$\{a_n\}$又是单调递增的，从而存在$N_0 \in \mathbb{N^<em>}$，使得当$n \ge N_0$时，有$A_n=A$；此时考虑$\{a_n\}$数列$n \ge N_0$的项，对$b_{N_01},b_{(N_0+1)1},b_{(N_0+2)1},\cdots$类似前面的讨论，可知$\{b_{i1}\}(i \ge N_0)$存在上界，记为$x_1$，同时存在$N_1 \ge N_0$，使得当$n \ge N_1$时，有$b_{n1}=x_1$；对其他列类比讨论，可以得到一列数$x_1,x_2,x_3,\cdots$，以及相应的正整数$N_0 \le N_1 \le N_2 \le \cdots$。令$a=A.x_1x_2x_3\cdots$，下面证明$a$就是数列$\{a_n\}$的极限。任取$\varepsilon&gt;0$，总存在$m \in \mathbb{N^</em>}$，使得$10^{-m}&lt;\varepsilon$，而当$n&gt;N_m$，有$a_n$的整数部分和小数点后的前$m$位上的数与$a$完全一致，所以</p><script type="math/tex; mode=display">    |a_n-a| < 10^{-m} < \varepsilon</script><p>从而证明了</p><script type="math/tex; mode=display">    \lim \limits_{n\to\infty}a_n = a</script>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学分析 </tag>
            
            <tag> 点列极限 </tag>
            
            <tag> 数列极限 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim教程</title>
      <link href="/2020/03/20/vim%E6%95%99%E7%A8%8B/"/>
      <url>/2020/03/20/vim%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Vim逻辑"><a href="#1-Vim逻辑" class="headerlink" title="1 Vim逻辑"></a>1 Vim逻辑</h2><blockquote><p>Vim命令逻辑为operation + motion的方式，首先输入主要操作（命令），然后可以输入行为，比如输入c，然后输入5→表示修改右边5个字符</p></blockquote><a id="more"></a><h2 id="2-快捷键"><a href="#2-快捷键" class="headerlink" title="2 快捷键"></a>2 快捷键</h2><ul><li>普通模式</li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">快捷键</th><th style="text-align:center">含义</th><th style="text-align:center">功能</th></tr></thead><tbody><tr><td style="text-align:center">esc</td><td style="text-align:center"></td><td style="text-align:center">进入普通模式</td></tr><tr><td style="text-align:center">h</td><td style="text-align:center"></td><td style="text-align:center">左</td></tr><tr><td style="text-align:center">j</td><td style="text-align:center"></td><td style="text-align:center">下</td></tr><tr><td style="text-align:center">k</td><td style="text-align:center"></td><td style="text-align:center">上</td></tr><tr><td style="text-align:center">l</td><td style="text-align:center"></td><td style="text-align:center">右</td></tr><tr><td style="text-align:center">i</td><td style="text-align:center">insert</td><td style="text-align:center">光标前一个字符插入</td></tr><tr><td style="text-align:center">gg</td><td style="text-align:center"></td><td style="text-align:center">到文件头部</td></tr><tr><td style="text-align:center">G</td><td style="text-align:center"></td><td style="text-align:center">到文件尾部</td></tr><tr><td style="text-align:center">a</td><td style="text-align:center">append</td><td style="text-align:center">光标后一个字符插入</td></tr><tr><td style="text-align:center">I</td><td style="text-align:center">shift+insert</td><td style="text-align:center">行首插入</td></tr><tr><td style="text-align:center">A</td><td style="text-align:center">shift+append</td><td style="text-align:center">行尾插入</td></tr><tr><td style="text-align:center">u</td><td style="text-align:center">undo</td><td style="text-align:center">撤销</td></tr><tr><td style="text-align:center">d</td><td style="text-align:center">delete(cut)</td><td style="text-align:center">删除（剪切）</td></tr><tr><td style="text-align:center">p</td><td style="text-align:center">paste</td><td style="text-align:center">粘贴</td></tr><tr><td style="text-align:center">y</td><td style="text-align:center">yank</td><td style="text-align:center">复制</td></tr><tr><td style="text-align:center">c</td><td style="text-align:center">change</td><td style="text-align:center">修改（删除光标中的内容并进入编辑模式）</td></tr><tr><td style="text-align:center">w</td><td style="text-align:center">word</td><td style="text-align:center">光标移动到下一个词</td></tr><tr><td style="text-align:center">f</td><td style="text-align:center">find</td><td style="text-align:center">在行内查找</td></tr><tr><td style="text-align:center">%</td><td style="text-align:center"></td><td style="text-align:center">快速定位括号的另一半</td></tr><tr><td style="text-align:center">&gt;&gt;</td><td style="text-align:center"></td><td style="text-align:center">向前缩进</td></tr><tr><td style="text-align:center">&lt;&lt;</td><td style="text-align:center"></td><td style="text-align:center">向后缩进</td></tr><tr><td style="text-align:center">cw</td><td style="text-align:center">change word</td><td style="text-align:center">光标位于词开头，修改整个词</td></tr><tr><td style="text-align:center">ciw</td><td style="text-align:center">change in word</td><td style="text-align:center">光标位于中间，修改整个词</td></tr><tr><td style="text-align:center">ci”</td><td style="text-align:center">change in “ “</td><td style="text-align:center">光标位于单引号中，修改单引号中的词</td></tr><tr><td style="text-align:center">di”</td><td style="text-align:center">delete in “ “</td><td style="text-align:center">光标位于单引号中，删除单引号中的词</td></tr><tr><td style="text-align:center">yi”</td><td style="text-align:center">yank in “ “</td><td style="text-align:center">光标位于单引号中，复制单引号中的词</td></tr><tr><td style="text-align:center">cf”</td><td style="text-align:center">change until find “</td><td style="text-align:center">修改从光标到找到单引号字符的内容</td></tr></tbody></table></div><ul><li>命令行模式</li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">快捷键</th><th style="text-align:center">含义</th><th style="text-align:center">功能</th></tr></thead><tbody><tr><td style="text-align:center">:</td><td style="text-align:center"></td><td style="text-align:center">命令行模式</td></tr><tr><td style="text-align:center">:q</td><td style="text-align:center">quit</td><td style="text-align:center">命令行模式下，退出</td></tr><tr><td style="text-align:center">:r file</td><td style="text-align:center"></td><td style="text-align:center">将file文件的内容读到当前文件中（从光标后一行插入）</td></tr><tr><td style="text-align:center">:w</td><td style="text-align:center">writen</td><td style="text-align:center">命令行模式下，保存（写入）</td></tr><tr><td style="text-align:center">:w file</td><td style="text-align:center"></td><td style="text-align:center">另存到file文件（如果在vision模型下选中的内容，会将这部分内容保存到file文件）</td></tr><tr><td style="text-align:center">:s</td><td style="text-align:center"></td><td style="text-align:center">替换</td></tr><tr><td style="text-align:center">:!</td><td style="text-align:center"></td><td style="text-align:center">执行shell命令</td></tr></tbody></table></div><h2 id="3-搜索与替换"><a href="#3-搜索与替换" class="headerlink" title="3 搜索与替换"></a>3 搜索与替换</h2><ul><li><p><code>/</code>搜索模式下，从光标开始往后搜索</p><p>| 快捷键 |    含义    |     功能     |<br>| :——: | :————: | :—————: |<br>|   n    |    next    | 下一个匹配的 |<br>|   N    | shift+next | 前一个匹配的 |</p></li><li><p><code>?</code>搜索模式下，从光标开始往前搜索，快捷键的功能与<code>/</code>模型下刚好相反</p></li><li><p><code>:s</code>替换</p><p>|     语法      |          功能          |<br>| :—————-: | :——————————: |<br>|   <code>:s/a/b/</code>   | 光标后的第一个a替换成b |<br>|  <code>:s/a/b/g</code>   |        替换整行        |<br>| <code>:1,4s/a/b/g</code> |     1-4行的a换成b      |<br>|  <code>:%s/a/b/g</code>  |      全文的a换成b      |</p></li></ul><h2 id="4-vim基础配置"><a href="#4-vim基础配置" class="headerlink" title="4 vim基础配置"></a>4 vim基础配置</h2><blockquote><ol><li>home目录下新建.vim目录</li><li>在.vim下新建vimrc文件</li><li>添加配置内容（map a b）（noremap a b）(set a)（let a）（color）</li></ol></blockquote><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">syntax</span> <span class="keyword">on</span># 语法高亮</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">number</span># 显示行号</span><br><span class="line"><span class="keyword">set</span> relativenumber# 显示相对行号</span><br><span class="line"><span class="keyword">set</span> norelativenumber# 不显示显示相对行号</span><br><span class="line"><span class="keyword">set</span> wrap# 避免超出行显示</span><br><span class="line"><span class="keyword">set</span> showcmd# 右下角显示命令</span><br><span class="line"><span class="keyword">set</span> wildmenu# 命令行模式下<span class="keyword">tab</span>提示</span><br><span class="line"><span class="keyword">set</span> hlsearch# 高亮显示搜索结果</span><br><span class="line">exec <span class="string">"nohlsearch"</span># 退出重新进入后不高亮显示之前的结果</span><br><span class="line"><span class="keyword">set</span> incsearch# 边输入边搜索</span><br><span class="line"><span class="keyword">set</span> ignorecase# 搜索时忽略大小写</span><br><span class="line"><span class="keyword">set</span> smartcase# 如果既含有小写又含有大写，则准确匹配</span><br><span class="line"></span><br><span class="line"># <span class="symbol">&lt;CR&gt;</span>代表回车</span><br><span class="line"><span class="keyword">map</span> S :<span class="keyword">w</span><span class="symbol">&lt;CR&gt;</span># 大S快捷键映射为保存功能</span><br><span class="line"><span class="keyword">map</span> Q :q<span class="symbol">&lt;CR&gt;</span># 大Q快捷键映射为退出功能</span><br><span class="line"><span class="keyword">map</span> R :<span class="keyword">source</span> $MYVIMRC# 大R快捷键映射为刷新该<span class="keyword">vim</span>配置</span><br><span class="line"></span><br><span class="line"><span class="keyword">noremap</span> J <span class="number">5</span><span class="keyword">j</span># 大J快捷键映射为光标向下移动<span class="number">5</span>行</span><br><span class="line"><span class="keyword">noremap</span> K <span class="number">5</span><span class="keyword">k</span># 大K快捷键映射为光标向上移动<span class="number">5</span>行</span><br><span class="line"></span><br><span class="line">color slate# <span class="keyword">vim</span>配色改为slate</span><br></pre></td></tr></table></figure><h2 id="5-vim插件安装"><a href="#5-vim插件安装" class="headerlink" title="5 vim插件安装"></a>5 vim插件安装</h2><h3 id="5-1-插件安装步骤"><a href="#5-1-插件安装步骤" class="headerlink" title="5.1 插件安装步骤"></a>5.1 插件安装步骤</h3><ol><li>找到插件的github地址，然后clone下来放到<code>~/.vim/bundle</code>目录下</li><li>在<code>~/.vimrc</code>中写入<code>Plugin &#39;plugname&#39;</code>，其中plugname为github中的项目名字</li></ol><h3 id="5-2-例子（安装vim-airline插件）"><a href="#5-2-例子（安装vim-airline插件）" class="headerlink" title="5.2 例子（安装vim-airline插件）"></a>5.2 例子（安装vim-airline插件）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.vim/bundle</span><br><span class="line">git clone https://github.com/vim-airline/vim-airline.git</span><br><span class="line">vim ~/.vimrc</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在vimrc中加入一行</span></span><br><span class="line">Plugin 'vim-airline/vim-airline'</span><br></pre></td></tr></table></figure><blockquote><p>也可以先安装vundle（插件管理工具）插件，只需要按照vundle的语法在vimrc中编辑语句后，执行PluginInstall可以自动下载插件，具体可以看vundle的github文档</p></blockquote><h3 id="5-3-vim主题安装"><a href="#5-3-vim主题安装" class="headerlink" title="5.3 vim主题安装"></a>5.3 vim主题安装</h3><ol><li>下载相应的themename.vim到<code>~/.vim/colors</code>目录下</li><li>然后在<code>~/.vimrc</code>中写入<code>color themename</code>即可</li></ol><h2 id="6-附录（-vimrc文件）"><a href="#6-附录（-vimrc文件）" class="headerlink" title="6 附录（.vimrc文件）"></a>6 附录（.vimrc文件）</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> mapleader=<span class="string">" "</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">syntax</span> <span class="keyword">on</span></span><br><span class="line"><span class="keyword">set</span> encoding=utf-<span class="number">8</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">number</span></span><br><span class="line"><span class="keyword">set</span> norelativenumber</span><br><span class="line"><span class="keyword">set</span> wrap</span><br><span class="line"><span class="keyword">set</span> showcmd</span><br><span class="line"><span class="keyword">set</span> wildmenu</span><br><span class="line"><span class="comment">"搜索相关</span></span><br><span class="line"><span class="keyword">set</span> hlsearch</span><br><span class="line">exec <span class="string">"nohlsearch"</span></span><br><span class="line"><span class="keyword">set</span> incsearch</span><br><span class="line"><span class="keyword">set</span> ignorecase</span><br><span class="line"><span class="keyword">set</span> smartcase</span><br><span class="line"><span class="keyword">noremap</span> <span class="symbol">&lt;LEADER&gt;</span><span class="symbol">&lt;CR&gt;</span> :<span class="keyword">nohlsearch</span><span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="comment">"缩进相关</span></span><br><span class="line"><span class="keyword">set</span> smartindent</span><br><span class="line"><span class="keyword">set</span> tabstop=<span class="number">4</span></span><br><span class="line"><span class="keyword">set</span> autoindent</span><br><span class="line"><span class="keyword">set</span> expandtab</span><br><span class="line"><span class="comment">"保存退出快捷键</span></span><br><span class="line"><span class="keyword">map</span> S :<span class="keyword">w</span><span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">map</span> Q :q<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">map</span> R :<span class="keyword">source</span> ~/.vimrc<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="comment">"快速浏览</span></span><br><span class="line"><span class="keyword">noremap</span> J <span class="number">5</span><span class="keyword">j</span></span><br><span class="line"><span class="keyword">noremap</span> K <span class="number">5</span><span class="keyword">k</span></span><br><span class="line"><span class="comment">"分屏相关</span></span><br><span class="line"><span class="keyword">map</span> <span class="keyword">sl</span> :<span class="keyword">set</span> splitright<span class="symbol">&lt;CR&gt;</span>:<span class="keyword">vsplit</span><span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">map</span> <span class="keyword">sh</span> :<span class="keyword">set</span> nosplitright<span class="symbol">&lt;CR&gt;</span>:<span class="keyword">vsplit</span><span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">map</span> sk :<span class="keyword">set</span> splitbelow<span class="symbol">&lt;CR&gt;</span>:<span class="keyword">split</span><span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">map</span> sj :<span class="keyword">set</span> nosplitbelow<span class="symbol">&lt;CR&gt;</span>:<span class="keyword">split</span><span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="comment">"分屏跳转</span></span><br><span class="line"><span class="keyword">map</span> <span class="symbol">&lt;LEADER&gt;</span><span class="keyword">l</span> <span class="symbol">&lt;C-w&gt;</span><span class="keyword">l</span></span><br><span class="line"><span class="keyword">map</span> <span class="symbol">&lt;LEADER&gt;</span>h <span class="symbol">&lt;C-w&gt;</span>h</span><br><span class="line"><span class="keyword">map</span> <span class="symbol">&lt;LEADER&gt;</span><span class="keyword">k</span> <span class="symbol">&lt;C-w&gt;</span><span class="keyword">k</span></span><br><span class="line"><span class="keyword">map</span> <span class="symbol">&lt;LEADER&gt;</span><span class="keyword">j</span> <span class="symbol">&lt;C-w&gt;</span><span class="keyword">j</span></span><br><span class="line"><span class="comment">"分屏大小调节</span></span><br><span class="line"><span class="keyword">map</span> <span class="symbol">&lt;up&gt;</span> :<span class="keyword">res</span> +<span class="number">5</span><span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">map</span> <span class="symbol">&lt;down&gt;</span> :<span class="keyword">res</span> -<span class="number">5</span><span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">map</span> <span class="symbol">&lt;left&gt;</span> :<span class="keyword">vertical</span> <span class="keyword">resize</span>-<span class="number">5</span><span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">map</span> <span class="symbol">&lt;right&gt;</span> :<span class="keyword">vertical</span> <span class="keyword">resize</span>+<span class="number">5</span><span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="comment">"vundle插件相关</span></span><br><span class="line"><span class="keyword">set</span> nocompatible              <span class="comment">" be iMproved, required</span></span><br><span class="line"><span class="keyword">filetype</span> off                  <span class="comment">" required</span></span><br><span class="line"></span><br><span class="line"><span class="comment">" set the runtime path to include Vundle and initialize</span></span><br><span class="line"><span class="keyword">set</span> rtp+=~/.<span class="keyword">vim</span>/bundle/Vundle.<span class="keyword">vim</span></span><br><span class="line"><span class="keyword">call</span> vundle#begin()</span><br><span class="line"><span class="comment">" alternatively, pass a path where Vundle should install plugins</span></span><br><span class="line"><span class="comment">"call vundle#begin('~/some/path/here')</span></span><br><span class="line"></span><br><span class="line"><span class="comment">" let Vundle manage Vundle, required</span></span><br><span class="line">Plugin <span class="string">'VundleVim/Vundle.vim'</span></span><br><span class="line">Plugin <span class="string">'preservim/nerdtree'</span></span><br><span class="line">Plugin <span class="string">'rstacruz/sparkup'</span>, &#123;<span class="string">'rtp'</span>: <span class="string">'vim/'</span>&#125;</span><br><span class="line">Plugin <span class="string">'vim-airline/vim-airline'</span></span><br><span class="line">Plugin <span class="string">'vim-airline/vim-airline-themes'</span></span><br><span class="line">Plugin <span class="string">'connorholyday/vim-snazzy'</span></span><br><span class="line">Plugin <span class="string">'dense-analysis/ale'</span></span><br><span class="line">Plugin <span class="string">'Xuyuanp/nerdtree-git-plugin'</span></span><br><span class="line">Plugin <span class="string">'nathanaelkane/vim-indent-guides'</span></span><br><span class="line">Plugin <span class="string">'ycm-core/YouCompleteMe'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">call</span> vundle#end()            <span class="comment">" required</span></span><br><span class="line"><span class="keyword">filetype</span> plugin <span class="built_in">indent</span> <span class="keyword">on</span>    <span class="comment">" required</span></span><br><span class="line"><span class="comment">" nerdtree相关设置</span></span><br><span class="line"><span class="keyword">let</span> NERDChristmasTree=<span class="number">0</span></span><br><span class="line"><span class="keyword">let</span> NERDTreeChDirMode=<span class="number">2</span></span><br><span class="line"><span class="keyword">let</span> NERDTreeIgnore=[<span class="string">'\~$'</span>]</span><br><span class="line"><span class="keyword">let</span> NERDTreeShowBookmarks=<span class="number">1</span></span><br><span class="line"><span class="keyword">let</span> NERDTreeAutoCenter=<span class="number">1</span></span><br><span class="line"><span class="keyword">let</span> NERDTreeShowLineNumbers=<span class="number">1</span></span><br><span class="line"><span class="keyword">let</span> NERDTreeShowHidden=<span class="number">1</span></span><br><span class="line"><span class="keyword">let</span> NERDTreeWinSize=<span class="number">25</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:nerdtree_tabs_open_on_console_startup</span>=<span class="number">1</span></span><br><span class="line"><span class="keyword">let</span> NERDTreeIgnore=[<span class="string">'\.pyc'</span>,<span class="string">'\~$'</span>,<span class="string">'\.swp'</span>]</span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:NERDTreeGitStatusIndicatorMapCustom</span> = &#123;</span><br><span class="line">    \ <span class="string">"Modified"</span>  : <span class="string">"✹"</span>,</span><br><span class="line">    \ <span class="string">"Staged"</span>    : <span class="string">"✚"</span>,</span><br><span class="line">    \ <span class="string">"Untracked"</span> : <span class="string">"✭"</span>,</span><br><span class="line">    \ <span class="string">"Renamed"</span>   : <span class="string">"➜"</span>,</span><br><span class="line">    \ <span class="string">"Unmerged"</span>  : <span class="string">"═"</span>,</span><br><span class="line">    \ <span class="string">"Deleted"</span>   : <span class="string">"✖"</span>,</span><br><span class="line">    \ <span class="string">"Dirty"</span>     : <span class="string">"✗"</span>,</span><br><span class="line">    \ <span class="string">"Clean"</span>     : <span class="string">"✔︎"</span>,</span><br><span class="line">    \ <span class="string">'Ignored'</span>   : <span class="string">'☒'</span>,</span><br><span class="line">    \ <span class="string">"Unknown"</span>   : <span class="string">"?"</span></span><br><span class="line">    \ &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">autocmd</span> bufenter * <span class="keyword">if</span> (<span class="built_in">winnr</span>(<span class="string">"$"</span>) == <span class="number">1</span> &amp;&amp; <span class="built_in">exists</span>(<span class="string">"b:NERDTree"</span>) &amp;&amp; <span class="variable">b:NERDTree</span>.isTabTree()) | q | <span class="keyword">endif</span></span><br><span class="line"><span class="keyword">map</span> tt :NERDTreeMirror<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">map</span> tt :NERDTreeToggle<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="comment">" airline相关设置</span></span><br><span class="line"><span class="keyword">set</span> laststatus=<span class="number">2</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline_theme</span> = <span class="string">'simple'</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline_powerline_fonts</span> = <span class="number">1</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline</span>#extensions#tabline#enabled = <span class="number">1</span></span><br><span class="line"><span class="comment">" ale相关设置</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">b:ale_linters</span> = [<span class="string">'pyline'</span>]</span><br><span class="line"><span class="keyword">let</span> <span class="variable">b:ale_fixers</span> = [<span class="string">'autopep8'</span>, <span class="string">'yapf'</span>]</span><br><span class="line"><span class="comment">" intent_guides相关设置</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:indent_guides_guide_size</span> = <span class="number">1</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:indent_guides_start_level</span> = <span class="number">2</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:indent_guides_enable_on_vim_startup</span> = <span class="number">1</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:indent_guides_color_change_percent</span> = <span class="number">1</span></span><br><span class="line">silent! <span class="keyword">unmap</span> <span class="symbol">&lt;LEADER&gt;</span>ig</span><br><span class="line"><span class="keyword">autocmd</span> WinEnter * silent! <span class="keyword">unmap</span> <span class="symbol">&lt;LEADER&gt;</span>ig</span><br><span class="line"><span class="comment">" youcompleteme相关设置</span></span><br><span class="line"><span class="keyword">nnoremap</span> gd :YcmCompleter GoToDefinitionElseDeclaration<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">nnoremap</span> g/ :YcmCompleter GetDoc<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">nnoremap</span> gt :YcmCompleter GetType<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">nnoremap</span> <span class="keyword">gr</span> :YcmCompleter GoToReferences<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:ycm_autoclose_preview_window_after_completion</span>=<span class="number">0</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:ycm_autoclose_preview_window_after_insertion</span>=<span class="number">1</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:ycm_use_clangd</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:ycm_python_interpreter_path</span> = <span class="string">"/usr/bin/python3"</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:ycm_python_binary_path</span> = <span class="string">"/usr/bin/python3"</span></span><br><span class="line"><span class="comment">" 主题相关设置</span></span><br><span class="line"><span class="comment">"color snazzy</span></span><br><span class="line"><span class="keyword">colorscheme</span> molokai</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> vim </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux命令大全</title>
      <link href="/2019/12/28/linux%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/"/>
      <url>/2019/12/28/linux%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="linux终端快捷键"><a href="#linux终端快捷键" class="headerlink" title="linux终端快捷键"></a>linux终端快捷键</h2><p><code>ctrl+l</code>: 清屏</p><p><code>ctrl+c</code>: 中止</p><p><code>ctrl+d</code>： 退出</p><a id="more"></a><p><code>ctrl+a</code>: 光标移到命令行的头部</p><p><code>ctrl+e</code>: 光标移到命令行的尾部</p><p><code>ctrl+u</code>: 删除光标前所有字符</p><p><code>ctrl+k</code>: 删除光标后所有字符</p><p><code>ctrl+y</code>: 撤销</p><p><code>ctrl+r</code>: 搜索历史命令</p><p><code>ctrl+z</code>：暂停前台进程</p><p><code>esc+.</code>: 上一条命令的最后一个参数</p><p><code>up/down</code>：查看历史命令</p><p><code>ctrl+R</code>：搜索历史命令</p><h2 id="shell命令"><a href="#shell命令" class="headerlink" title="shell命令"></a>shell命令</h2><h3 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h3><h4 id="histroy"><a href="#histroy" class="headerlink" title="histroy/!"></a>histroy/!</h4><p><code>history</code>: 历史命令</p><p><code>!20</code>：执行第20条历史命令</p><p><code>!str</code>：执行历史最近中以str开头的命令</p><p><code>!$</code>：上一个命令的最后一个参数</p><p><code>!!</code>：执行上一个命令</p><h4 id="man"><a href="#man" class="headerlink" title="man"></a>man</h4><p><code>man command</code>: command手册</p><p><code>man -f command</code>: 查看command的所在所有章节</p><p><code>man 1 command</code>: 查看第1章节中的command手册</p><h4 id="alias"><a href="#alias" class="headerlink" title="alias"></a>alias</h4><p><code>alias ll=ls -l</code>: 别名</p><p><code>unalias ll</code>: 取消别名</p><ul><li><p>查看命令的别名</p><p>  <code>type -a ls</code>: 查看所有<code>ls</code>命令的类型</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 上述命令的输出</span></span><br><span class="line">ls is aliased to `ls --color=auto'</span><br><span class="line">ls is /bin/ls</span><br></pre></td></tr></table></figure><p>  <code>ls</code>： 系统默认使用别名<br>  <code>\ls</code>: 使用原ls命令</p></li></ul><h4 id="echo"><a href="#echo" class="headerlink" title="echo"></a>echo</h4><p><code>echo &quot;123&quot;</code>：返回或者输出123，会输出换行</p><p><code>echo -n &quot;123&quot;</code>：不换行输出</p><h4 id="which-whereis"><a href="#which-whereis" class="headerlink" title="which/whereis"></a>which/whereis</h4><p><code>which command</code>: 查看命令的目录（根据<code>PATH</code>目录）</p><p><code>whereis command</code>: 整个文件索引数据库查找命令</p><h3 id="用户操作"><a href="#用户操作" class="headerlink" title="用户操作"></a>用户操作</h3><p><code>id username</code>: 查看用户</p><p><code>whoami</code>: 显示当前用户</p><p><code>useradd cetrol</code>: 添加用户</p><h4 id="groupadd-groupdel-useradd-userdel"><a href="#groupadd-groupdel-useradd-userdel" class="headerlink" title="groupadd/groupdel/useradd/userdel"></a>groupadd/groupdel/useradd/userdel</h4><p><code>groupadd groupname</code> 添加</p><p><code>userdel [-r] username</code>: 删除用户（去掉home目录）</p><h4 id="passwd-gpasswd"><a href="#passwd-gpasswd" class="headerlink" title="passwd/gpasswd"></a>passwd/gpasswd</h4><p><code>passwd username</code>: 为用户设置密码</p><p><code>gpasswd -a username groupname</code>: 将用户添加到组</p><p><code>gpasswd -d username groupname</code>: 将用户移除组</p><h3 id="目录与文件操作"><a href="#目录与文件操作" class="headerlink" title="目录与文件操作"></a>目录与文件操作</h3><p><code>pwd</code>: 当前工作目录</p><h4 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h4><p><code>ls</code>：当前目录内容</p><p><code>ls -a</code>: list all 所有，包含隐藏文件</p><p><code>ls dir</code>: dir目录下的内容</p><p><code>ll -h</code>: 人性化显示</p><p><code>ll -t</code>: 按照时间排序，最新在前</p><p><code>ll -rt</code>: reverse，逆序</p><p><code>ll dir</code>: 查看目录下所有文件的详情</p><p><code>ll -d dir</code>: 只查看目录的详情</p><h4 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h4><p><code>cd</code>: 到<code>home</code>目录</p><p><code>cd ~</code>: 到<code>home</code>目录</p><p><code>cd dir</code>: 到<code>dir</code>目录</p><p><code>cd -</code>: 回到上一目录</p><h4 id="mkdir"><a href="#mkdir" class="headerlink" title="mkdir"></a>mkdir</h4><p><code>mkdir dir1, dir2</code>: 创建目录</p><p><code>mkdir -v dir</code>: verbose，显示详细信息</p><p><code>mkdir -p dir</code>: 如果父目录不存在，会自动创建父目录</p><h4 id="touch"><a href="#touch" class="headerlink" title="touch"></a>touch</h4><p><code>touch file1 file2</code>: 创建文件</p><p><code>touch file{1..20}</code>: 创建多个文件</p><h4 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h4><p><code>cp file1 file2</code>: 拷贝文件</p><p><code>cp -r dir1 dir2</code>: 递归拷贝目录</p><h4 id="mv"><a href="#mv" class="headerlink" title="mv"></a>mv</h4><p><code>mv file1 file2</code>: 剪切文件</p><h4 id="rm"><a href="#rm" class="headerlink" title="rm"></a>rm</h4><p><code>rm -rf dir</code>: 递归删除目录</p><h4 id="chmod-chown-chgrp"><a href="#chmod-chown-chgrp" class="headerlink" title="chmod/chown/chgrp"></a>chmod/chown/chgrp</h4><div class="table-container"><table><thead><tr><th style="text-align:center">u</th><th style="text-align:center">g</th><th style="text-align:center">o</th><th style="text-align:center"></th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center">rwx</td><td style="text-align:center">rw-</td><td style="text-align:center">r—</td><td style="text-align:center">user</td><td style="text-align:center">group</td></tr><tr><td style="text-align:center">属主权限</td><td style="text-align:center">属组权限</td><td style="text-align:center">其他人权限</td><td style="text-align:center">属主</td><td style="text-align:center">属组</td></tr></tbody></table></div><p><code>chown [-r] user file/dir</code>: 改变file的所属组（递归修改目录）</p><p><code>chgrp [-r] group file/dir</code>: 改变file的所属组（递归修改目录）</p><p><code>chown [-r] user.group file/dir</code>: 同时修改主和组</p><p><code>chmod u/g/o+w/r/x file</code>: 相应的u/g/o添加w/r/x权限</p><p><code>chmod [a]+w/r/x file</code>: 所有组添加w/r/x权限</p><p><code>chmod ug=rw file</code>: u和g添加rw权限</p><p><code>chmod o=-</code>: o去掉所有权限</p><p><code>chmod 777 file</code>: 所有组添加rwx权限</p><h4 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h4><p><code>tar -czf test.tar.gz dir</code>: 调用gzip将<code>dir</code>目录打包并压缩为<code>test.tar.gz</code></p><p><code>tar -cjf test.tar.bz2 dir</code>: 调用bzip2将<code>dir</code>目录打包并压缩为<code>test.tar.bz2</code></p><p><code>tar -cJf test.tar.xz dir</code>: 调用xz将<code>dir</code>目录打包并压缩为<code>test.tar.xz</code></p><p><code>tar -tf test.tar.xz</code>: 显示压缩包中的内容</p><p><code>tar -xzvf test.tar.gz</code>:  指定使用gzip解压</p><p><code>tar -xvf test.tar.gz</code>: 自行判断解压工具解压</p><p><code>tar -xvf test.tar.gz -C dir</code>: 解压后重定向到<code>dir</code>目录下</p><p><code>tar -czf - /etc | tar -xzf - -C dir</code>: 将/etc打包后保存在内存中，然后通过管道解压后<code>dir</code>目录下；相当于复制文件到另一个目录（许多小文件复制时速度快）</p><h4 id="du"><a href="#du" class="headerlink" title="du"></a>du</h4><p><code>du -h dir</code>: 查看目录<code>dir</code>下所有文件夹的大小</p><p><code>du -sh dir</code>: 查看目录<code>dir</code>总大小</p><h3 id="文件增删改查"><a href="#文件增删改查" class="headerlink" title="文件增删改查"></a>文件增删改查</h3><h4 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h4><p><code>cat file</code>: 查看文本文件</p><p><code>cat -n file</code>: 显示行号</p><h4 id="head-tail"><a href="#head-tail" class="headerlink" title="head/tail"></a>head/tail</h4><p><code>head -5 file</code>: 查看头5行</p><p><code>tail -5 file</code>: 查看尾5行</p><p><code>tail -f file</code>: 动态查看</p><h4 id="vi-vim"><a href="#vi-vim" class="headerlink" title="vi/vim"></a>vi/vim</h4><p><code>vi file</code>: 编辑文件</p><h4 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h4><p><code>sort file</code>: 按照字典序递增排序</p><p><code>sort -r file</code>: 递减排序</p><p><code>sort -n file</code>: 按照数字大小排序</p><p><code>sort -t&quot;:&quot; -k3 -n /etc/passwd</code>: 以<code>:</code>分割后按照第3列排序</p><h4 id="uniq"><a href="#uniq" class="headerlink" title="uniq"></a>uniq</h4><p><code>uniq</code>: 去重（只能把接近的去掉，所以一般先<code>sort</code>）</p><p><code>uniq -c</code>: 去重，并显示个数</p><h4 id="wc"><a href="#wc" class="headerlink" title="wc"></a>wc</h4><p><code>wc -l</code>: 统计行数</p><h4 id="tr"><a href="#tr" class="headerlink" title="tr"></a>tr</h4><blockquote><p>tr(translate) 可以用来替换、删除文本字符内容</p></blockquote><p><code>tr -d a file</code>: 将文本中所有字符<code>a</code>删掉</p><p><code>tr -d a-z file</code>: 将文本中所有小写字母删掉</p><p><code>tr -d ab file</code>: 将文本中字符<code>a</code>和<code>b</code>删掉</p><p><code>tr -s a file</code>: 将文本中连续出现多个的字符<code>a</code>压缩成单个字符<code>a</code></p><p><code>tr -s ab file</code>: 将文本中连续出现多个字符<code>a</code>，多个字符<code>b</code>分别压缩成单个字符<code>a</code>和<code>b</code></p><p><code>tr -s a b file</code>: 将文本中连续出现多个字符<code>a</code>压缩并替换成单个字符<code>b</code></p><p><code>tr a b file</code>: 将文本中的每个字符<code>a</code>替换成<code>b</code></p><p><code>tr -s ab c file</code>: 将文本中连续出现多个字符<code>a</code>, 多个字符<code>b</code>压缩并替换成单个字符<code>c</code></p><p><code>tr ab c file</code>: 将文本中每个字符<code>a</code>,<code>b</code>替换成<code>c</code></p><p><code>tr ab cd file</code>: 将文本中每个字符<code>a</code>,<code>b</code>分别替换成<code>c</code>和<code>d</code></p><p><code>tr -s a-z A-Z file</code>: 将文本中连续出现多个字符<code>a</code>, 多个字符<code>b</code>分别压缩并替换成单个字符<code>c</code>和单个字符<code>d</code></p><p><code>tr a-z A-Z file</code>: 将文本中每个字符<code>a</code>, <code>b</code>分别替换成<code>c</code>和<code>d</code></p><p><code>tr -c -d &#39;a\n&#39; file</code>: 将文本中除了<code>a</code>和<code>\n</code>外的字符都删掉</p><h4 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h4><blockquote><p>awk是一种编程语言，用与逐行处理文本和数据</p></blockquote><p><code>awk -F&quot;:&quot; &#39;{print $1}&#39; /etc/passwd</code>: 以<code>:</code>分割输出第1列</p><p><code>awk &#39;BEGIN{} {} END{}&#39;</code>：文件处理前 行处理 文件处理后</p><p><code>awk &#39;BEGIN{FS=&quot;:&quot;,OFS=&quot;---&quot;} {print $1,$2}&#39;</code>：输入字段以<code>:</code>分割，输出字段之间<code>---</code>输出，<code>FS</code>为输入分割符，<code>OFS</code>为输出字段分割符，<code>OFS</code>默认值为空格</p><p><code>awk &#39;BEGIN{RS=&quot;:&quot;,ORS=&quot;---&quot;} {print $1,$2}&#39;</code>：输入行以<code>:</code>分割，输出行之间<code>---</code>输出，<code>RS</code>为记录分割符，<code>ORS</code>为输出记录分割符，<code>RS</code>和<code>ORS</code>默认值为换行符</p><p><code>awk pattern filename</code>：正则匹配输出</p><p><code>awk &#39;/root/{action}&#39; filename</code>：匹配到<code>root</code>的行再执行<code>action</code></p><p><code>awk &#39;{print NR,FNR}&#39;</code>：<code>NR</code>表示总的记录行号，FNR表示当前文件的记录行号</p><p><code>awk &#39;{print NF}&#39;</code>：<code>NF</code>表示字段的个数</p><p><code>awk &#39;{printf &quot;%-15s %-d %-f&quot;, $1,$2,$3}&#39;</code>：<code>printf</code>格式化输出，<code>%s</code>表示字符串，<code>%d</code>表示整形数据，<code>%f</code>表示浮点数，<code>-</code>表示左对齐，<code>15</code>表示长度为15</p><p><code>awk &#39;$0~/root/&#39; /etc/passwd</code>：正则匹配行，等效于<code>awk &#39;/root/ /etc/passwd&#39;</code></p><p><code>awk &#39;$0!~/root/&#39; /etc/passwd</code>：正则不匹配，等效于<code>awk &#39;!/root/ /etc/passwd&#39;</code></p><p><code>awk &#39;$1==&quot;root&quot;&#39; /etc/passwd</code>：关系运算符</p><p><code>awk &#39;$1&gt;100&#39; /etc/passwd</code>：关系运算符</p><p><code>awk &#39;{if($3&gt;100){print $3} else if(){} else{print $1}}&#39;</code>：条件运算符</p><p><code>awk &#39;{$1*10}&#39;</code>：算术运算符</p><p><code>awk &#39;{if($1&gt;10 &amp;&amp; $2&lt;10){print $0}}&#39;</code>：条件运算符</p><p><code>awk {length($1)==10 {print $1}}</code>：<code>length</code>函数表示字符串长度</p><p><code>awk &#39;{i=1; while(i&lt;=7) {print $i; i++}}&#39;</code>：while循环</p><p><code>awk &#39;{for(i=1;i&lt;=NF;i++) {print $i}}&#39;</code>：for循环</p><p><code>awk &#39;{color[++i]}=$1&#39; END{for(i=1;i&lt;i;i++) {print i,color[i]}}</code>：数组</p><p><code>awk &#39;{color[++i]}=$1&#39; END{(for i in color) {print i,color[i]}}</code>：数组，<code>for</code>循环使用<code>in</code>遍历获取的是索引</p><h4 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h4><blockquote><p>sed是一种非交互式编辑器，一次处理一行内容</p></blockquote><p><code>sed action file</code>：从文件<code>file</code>中每次读入一行，执行<code>action</code>动作，不会修改文件内容，只做输出</p><p><code>sed -i action file</code>：会修改文件内容</p><p><code>sed &quot;d&quot; file</code>：删除输出（相当于什么都不输出）</p><p><code>sed &quot;4d&quot; file</code>：删除第四行</p><p><code>sed &quot;3{d;}&quot;</code>：<code>{}</code>里面的命令按照<code>;</code>分割，可以执行多个目录</p><p><code>sed &quot;4,7d&quot; file</code>：删除第4到7行</p><p><code>sed &quot;4,$d&quot; file</code>：删除第4到最后一行</p><p><code>sed -r &quot;0~2d&quot;</code>：从0开始，每2行删除，（相当于删除偶数行）</p><p><code>sed -r /root/,5d file</code>：删除从root到第5行</p><p><code>sed -r /root/,+5d file</code>：删除root，再删其后5行</p><p><code>sed -r /root/!d file</code>：删除非root行</p><p><code>sed &quot;p&quot; file</code>：打印输出（默认）</p><p><code>sed &quot;4p&quot; file</code>：只打印第4行输出（默认）</p><p><code>sed -r [s]/sth./sth./[gi]</code>：使用正则匹配</p><p><code>sed -r &quot;s/red/yellow/&quot; file</code>：查找<code>red</code>并替换为<code>yellow</code>，只替换每一行第一个</p><p><code>sed -r &quot;s/red/yellow/g file&quot;</code>：加上<code>g</code>，表示global，替换所有</p><p><code>sed -r &quot;s/red/yellow/g file&quot;</code>：加上<code>i</code>，表示ignore-case，忽略大小写</p><p><code>sed -r &quot;s#red#yellow#g file&quot;</code>：<code>/</code>其实可以替换成任意字符</p><p><code>sed -r &quot;3,5s/red/yellow/g file&quot;</code>：只有3到5行替换</p><p><code>sed -r &quot;s/(.*)/#&amp;/ file&quot;</code>：所有行前面加入<code>#</code>，<code>(.*)</code>表示匹配行所有内容，<code>&amp;</code>表示前面匹配的所有内容</p><p><code>sed -r &quot;2r/new_file&quot; file</code>：读到第2行时读取文件内容，<code>r</code>表示读入</p><p><code>sed -r &quot;2w/new_file&quot; file</code>：读到第2行时写入到新文件，<code>w</code>表示读入</p><p><code>sed -r &quot;2a/new_file&quot; file</code>：读到第2行时追加新内容或到新文件，<code>a</code>表示追加（行后）</p><p><code>sed -r &quot;2i/new_file&quot; file</code>：读到第2行时插入新内容或到新文件，<code>i</code>表示插入（行前）</p><p><code>sed -r &quot;/root/{n;d} file&quot;</code>：找到root行，然后去下一行并删除 ，<code>n</code>表示下一行</p><h3 id="时间相关命令"><a href="#时间相关命令" class="headerlink" title="时间相关命令"></a>时间相关命令</h3><h4 id="date"><a href="#date" class="headerlink" title="date"></a>date</h4><p><code>date +%F</code>:  格式化输出时间</p><h4 id="time"><a href="#time" class="headerlink" title="time"></a>time</h4><p><code>time command</code>: 显示命令执行的时间</p><h3 id="进程相关命令"><a href="#进程相关命令" class="headerlink" title="进程相关命令"></a>进程相关命令</h3><h4 id="ps-top"><a href="#ps-top" class="headerlink" title="ps/top"></a>ps/top</h4><p><code>ps aux</code>: 查看进程运行状态(快照模式)（process state）</p><p><code>ps aux --sort [-]%cpu</code>: 以cpu占用排序查看进程状态</p><p><code>ps auxf</code>: 加上f，显示进程的层级关系</p><p><code>ps -ef</code>: 查看PID（进程ID）和PPID（进程父ID）</p><p><code>top</code>: 动态模式</p><h4 id="kill"><a href="#kill" class="headerlink" title="kill"></a>kill</h4><p><code>kill -1 PID</code>: 1为重启信号</p><p><code>kill [-15] PID</code>:  默认为15即停止信号</p><p><code>kill -9 PID</code>: 9为强制关闭信号</p><h4 id="fg-bg-jobs"><a href="#fg-bg-jobs" class="headerlink" title="fg/bg/jobs"></a>fg/bg/jobs</h4><p><code>jobs</code>：查看所有后台进程</p><p><code>fg pid</code>：将后台pid任务切换至前台运行</p><p><code>bg pid</code>：将前台pid任务切换至后台运行</p><h3 id="硬件相关命令"><a href="#硬件相关命令" class="headerlink" title="硬件相关命令"></a>硬件相关命令</h3><h4 id="lscpu"><a href="#lscpu" class="headerlink" title="lscpu"></a>lscpu</h4><p><code>lscpu</code>: 查看cpu信息</p><h4 id="lsblk"><a href="#lsblk" class="headerlink" title="lsblk"></a>lsblk</h4><p><code>lsblk</code>: 显示硬盘分区</p><h4 id="fdisk-gdisk-partprobe"><a href="#fdisk-gdisk-partprobe" class="headerlink" title="fdisk/gdisk/partprobe"></a>fdisk/gdisk/partprobe</h4><p><code>fdisk</code>: MBR分区工具</p><p><code>fdisk /dev/sda</code>: 硬盘分区工具</p><p><code>fdisk -l /dev/sda</code>: 查看分区信息</p><p><code>gdisk</code>: GPT分区工具</p><p><code>gdisk /dev/sda</code>: 硬盘分区工具</p><p><code>gdisk -l /dev/sda</code>: 查看分区信息</p><p><code>partprobe</code>：让kernel读取分区信息</p><h4 id="mkfs"><a href="#mkfs" class="headerlink" title="mkfs"></a>mkfs</h4><p><code>mkfs</code>: 创建文件系统（格式化）</p><p><code>mkfs.ext4 /dev/sda1</code>: 将硬盘sda的分区1格式化为ext4格式</p><h4 id="mount-umount"><a href="#mount-umount" class="headerlink" title="mount/umount"></a>mount/umount</h4><p><code>mount /dev/sda1 dir</code> 将设备挂载到目录下<code>dir</code>下</p><blockquote><p>mount命令只是临时挂载，长期挂载需在/etc/fstab文件中设置</p></blockquote><p><code>mount -a</code>: 从<code>/etc/fstab</code>中查找并挂载所有</p><p><code>umount /dev/sda1</code>: </p><h4 id="df"><a href="#df" class="headerlink" title="df"></a>df</h4><p><code>df</code>: 查看分区信息</p><p><code>df -T</code>: 显示分区文件系统格式</p><p><code>df -h</code>: 以<code>G,T</code>显示分区大小</p><h3 id="管道相关命令"><a href="#管道相关命令" class="headerlink" title="管道相关命令"></a>管道相关命令</h3><h4 id="gt-gt-gt-lt-lt-lt"><a href="#gt-gt-gt-lt-lt-lt" class="headerlink" title="&gt;/&gt;&gt;/&lt;/&lt;&lt;"></a>&gt;/&gt;&gt;/&lt;/&lt;&lt;</h4><div class="table-container"><table><thead><tr><th>描述符</th><th>含义</th><th>对应文件</th></tr></thead><tbody><tr><td>0</td><td>标准输入</td><td>键盘设备文件</td></tr><tr><td>1</td><td>标准输出</td><td>终端设备文件</td></tr><tr><td>2</td><td>标准错误</td><td>终端设备文件</td></tr></tbody></table></div><p><code>ls 1&gt;out.txt 2&gt;err.txt</code>: 标准输出到<code>out.txt</code>，错误输出到<code>err.txt</code></p><p><code>ls &gt;out.txt</code>: 等效于<code>ls 1&gt;out.txt</code>: 标准输出到<code>out.txt</code></p><p><code>ls &gt;&gt;out.txt</code>: 追加到文件</p><p><code>ls &amp;&gt;out.txt</code>: 混合输出（包括标准输出和错误输出）</p><p><code>ls 2&gt;&amp;1</code>: 错误输出（2）到标准输出（设备描述符1）中</p><p><code>ls &amp;&gt;/dev/null</code>: 混合输出到空设备（垃圾桶）</p><p><code>ls 2&gt;/dev/null</code>: 错误输出到空设备</p><p><code>cat &gt;out.txt</code>: 将终端输入重定向到<code>out.txt</code></p><p><code>cat &gt;out.txt &lt;&lt;EOF</code>: 输入直到遇到<code>EOF</code>结束输入</p><p><code>grep &#39;root&#39; &lt; /etc/passwd</code>: 输入重定向，<code>grep &#39;root&#39;</code>的输入重定向到<code>/etc/passwd</code></p><h4 id="mkfifo"><a href="#mkfifo" class="headerlink" title="|/mkfifo"></a>|/mkfifo</h4><p><code>|</code>: 匿名管道</p><p><code>command 1 | command 2</code>: 管道，命令1的输出重定向为命令2的输入</p><p><code>mkfifo /tmp/fifo1</code>：命名管道，可以跨终端传输数据</p><h4 id="tee"><a href="#tee" class="headerlink" title="tee"></a>tee</h4><p><code>ls -l | tee result.txt</code>：<code>ls -l</code>的结果不仅输出到<code>result.txt</code>中，而且会显示到屏幕上</p><p><code>ls -l | tee -a result.txt</code>：追加</p><h3 id="搜索相关命令"><a href="#搜索相关命令" class="headerlink" title="搜索相关命令"></a>搜索相关命令</h3><h4 id="locate-find"><a href="#locate-find" class="headerlink" title="locate/find"></a>locate/find</h4><p><code>locate string</code>: 从数据库中查找包含<code>string</code>的文件</p><blockquote><p>数据库为/var/lib/mlocate/mlocate.db，可以使用<code>updatedb</code>命令手动更新该数据库</p></blockquote><p><code>find dir</code>: 查找<code>dir</code> 目录下所有文件（显示所有文件）</p><p><code>find dir [-name] &quot;string&quot;</code>: 查找<code>dir</code>目录下包含<code>string</code>的所有文件</p><p><code>find dir -iname &quot;string&quot;</code>: 查找文件，忽略大小写</p><p><code>find dir -size +5M: 查找大于</code>5M`的文件</p><p><code>find dir -maxdepth 3 -a -name &quot;string&quot;</code>:  查找文件且深度为3（<code>-a</code>表示and，<code>-o</code>表示or）</p><p><code>find dir -mtime +5</code>: 修改时间超过5天内的文件</p><p><code>find dir -user username</code>: 用户为<code>username</code>的文件</p><p><code>find dir -group groupname</code>: 查看组为<code>groupname</code>的文件</p><p><code>find dir -nouser -o -nogroup</code>: 没用户没组的文件</p><p><code>find dir ! -user username</code>:  <code>!</code>表示取反</p><p><code>find dir -type d</code>: 查找为<code>d</code>（目录）的文件</p><p><code>find dir -perm 666</code>: 查找权限大于等于666的文件</p><p><code>find dir -regex &#39;regular expression&#39;</code>: 以正则表达式查找 </p><p><code>find {sth} -delete</code>: 查找后删除</p><p><code>find {sth} -print/-ls</code>: 查找后打印（<code>ls</code>更详细）</p><p><code>find {sth} -exec/-ok command \;</code> : 查找后执行<code>command</code> shell命令（<code>-ok</code>有交互，会询问是否如此操作）</p><h3 id="grep正则命令"><a href="#grep正则命令" class="headerlink" title="grep正则命令"></a>grep正则命令</h3><h4 id="grep-egrep"><a href="#grep-egrep" class="headerlink" title="grep/egrep"></a>grep/egrep</h4><p><code>grep pattern file1 [file2]</code>：从文件中过滤出匹配到模式的字符串</p><p><code>grep -q pattern file1</code>：不打印结果，只返回输出码（0表示找到，1表示没找到，2表示文件不存在）</p><p><code>grep -v</code>：取反，未匹配到的打印输出</p><p><code>grep -i</code>：忽略大小写</p><p><code>grep -o</code>：只输出匹配到的内容</p><p><code>grep -n</code>：输出匹配到的行号</p><p><code>grep -r[-R] dir</code>：递归遍历<code>dir</code>目录匹配</p><p><code>grep -E(egrep)</code>：<code>egrep</code>可以直接使用扩展元字符<code>?</code>，<code>+</code>，<code>{}</code>，<code>|</code>，<code>()</code>，但是在<code>grep</code>中需要使用<code>\</code>转义才能使用扩展元字符</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><h4 id="screen"><a href="#screen" class="headerlink" title="screen"></a>screen</h4><p><code>screen -S session_name</code>: 新开一个名字叫session_name的screen作业</p><p><code>screen -ls</code>: 查看所有screen作业</p><p><code>screen -r</code>: 恢复上一次的作业</p><p><code>screen -r session_name</code>: 恢复session_name的作业（attached）</p><p><code>screen -d</code>: 离线当前作业（detached）</p><p><code>ctrl+a d</code>：离线当前作业</p><p><code>screen -d session_name</code>: 离线session_name作业（detached）</p><p><code>exit</code>: 在attached的screen作业下输入该命令，终止该screen作业</p><p><code>kill pid</code>: <code>pid</code>为screen的进程id，终止该screen作业</p><p><code>screen -wipe</code>: 清理掉没用的（deaded）screen作业</p><h4 id="seq"><a href="#seq" class="headerlink" title="seq"></a>seq</h4><p><code>seq 10</code>：产生1到10的序列</p><p><code>seq 2 10</code>：产生从2到10的序列</p><p><code>seq 1 2 10</code>：产生从1到10的序列，递增为2</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WSL和windows的zsh终端配置教程</title>
      <link href="/2019/12/23/WSL%E5%92%8Cwindows%E7%9A%84zsh%E7%BB%88%E7%AB%AF%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/"/>
      <url>/2019/12/23/WSL%E5%92%8Cwindows%E7%9A%84zsh%E7%BB%88%E7%AB%AF%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="1-WSL终端配置"><a href="#1-WSL终端配置" class="headerlink" title="1 WSL终端配置"></a>1 WSL终端配置</h2><hr><h3 id="1-1-更换配色"><a href="#1-1-更换配色" class="headerlink" title="1.1 更换配色"></a>1.1 更换配色</h3><p>背景rgb（0，43，53），文字rgb(147,161,161)</p><h3 id="1-2-下载并安装字体FiraCode，右键属性选择字体为FiraCode"><a href="#1-2-下载并安装字体FiraCode，右键属性选择字体为FiraCode" class="headerlink" title="1.2 下载并安装字体FiraCode，右键属性选择字体为FiraCode"></a>1.2 下载并安装字体FiraCode，右键属性选择字体为FiraCode</h3><a id="more"></a><h3 id="1-3-下载zsh"><a href="#1-3-下载zsh" class="headerlink" title="1.3 下载zsh"></a>1.3 下载zsh</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install zsh</span><br></pre></td></tr></table></figure><h3 id="1-4-重启wsl安装zsh"><a href="#1-4-重启wsl安装zsh" class="headerlink" title="1.4 重启wsl安装zsh"></a>1.4 重启wsl安装zsh</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"</span><br></pre></td></tr></table></figure><h3 id="1-5-配置"><a href="#1-5-配置" class="headerlink" title="1.5 配置"></a>1.5 配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 自定义主题</span></span><br><span class="line">cp ~/.oh-my-zsh/themes/agnoster.zsh-theme ~/.oh-my-zsh/custom/themes/agnoster_wsl.zsh-theme</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 找到下面内容，并将blue替换为0.75</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Dir: current working directory</span></span><br><span class="line">prompt_dir() &#123;</span><br><span class="line">  prompt_segment blue $CURRENT_FG '%~'</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置主题</span></span><br><span class="line">vim ~/.zshrc</span><br><span class="line">ZSH_THEME="agnoster_wsl"</span><br><span class="line"><span class="meta">#</span><span class="bash"> 隐藏用户名+主机名</span></span><br><span class="line">DEFAULTUSER='cetrol</span><br></pre></td></tr></table></figure><h2 id="2-powershell终端配置"><a href="#2-powershell终端配置" class="headerlink" title="2 powershell终端配置"></a>2 powershell终端配置</h2><hr><h3 id="2-1-管理员运行powershell"><a href="#2-1-管理员运行powershell" class="headerlink" title="2.1 管理员运行powershell"></a>2.1 管理员运行powershell</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 允许powershell运行任何脚本</span></span><br><span class="line"><span class="built_in">Set-ExecutionPolicy</span> Bypass</span><br></pre></td></tr></table></figure><h3 id="2-2-下载chocolatey安装包管理工具"><a href="#2-2-下载chocolatey安装包管理工具" class="headerlink" title="2.2 下载chocolatey安装包管理工具"></a>2.2 下载chocolatey安装包管理工具</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set-ExecutionPolicy</span> Bypass -Scope <span class="keyword">Process</span> -Force; iex ((<span class="built_in">New-Object</span> System.Net.WebClient).DownloadString(<span class="string">'https://chocolatey.org/install.ps1'</span>))</span><br></pre></td></tr></table></figure><h3 id="2-3-安装colortools修改配色"><a href="#2-3-安装colortools修改配色" class="headerlink" title="2.3 安装colortools修改配色"></a>2.3 安装colortools修改配色</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">choco install colortool</span><br><span class="line"><span class="comment"># 查看所有配色</span></span><br><span class="line">colortool -s</span><br><span class="line"><span class="comment"># 设置配色</span></span><br><span class="line">colortool 配色名字</span><br></pre></td></tr></table></figure><h3 id="2-4-安装oh-my-posh"><a href="#2-4-安装oh-my-posh" class="headerlink" title="2.4 安装oh-my-posh"></a>2.4 安装oh-my-posh</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Install-Module</span> posh-git -Scope CurrentUser</span><br><span class="line"><span class="built_in">Install-Module</span> oh-my-posh -Scope CurrentUser</span><br></pre></td></tr></table></figure><h3 id="2-5-设置主题（熟悉的用户直接到第7步即可）"><a href="#2-5-设置主题（熟悉的用户直接到第7步即可）" class="headerlink" title="2.5 设置主题（熟悉的用户直接到第7步即可）"></a>2.5 设置主题（熟悉的用户直接到第7步即可）</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> posh-git</span><br><span class="line"><span class="built_in">Import-Module</span> oh-my-posh</span><br><span class="line">Set-Theme Agnoster</span><br></pre></td></tr></table></figure><h3 id="2-6-隐藏用户名主机名"><a href="#2-6-隐藏用户名主机名" class="headerlink" title="2.6 隐藏用户名主机名"></a>2.6 隐藏用户名主机名</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$DefaultUser</span> = <span class="string">'cetrol'</span></span><br></pre></td></tr></table></figure><h3 id="2-7-配置字体"><a href="#2-7-配置字体" class="headerlink" title="2.7 配置字体"></a>2.7 配置字体</h3><ul><li><p>下载<a href="https://github.com/powerline/fonts/tree/master/DejaVuSansMono" target="_blank" rel="noopener">powerline字体</a>并安装</p></li><li><p>在powershell中运行下面代码后，右键属性里才可以看到安装的字体</p></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Install-Module</span> -Name PSReadLine -Force -SkipPublisherCheck</span><br><span class="line"><span class="keyword">if</span> (!(<span class="built_in">Test-Path</span> -Path <span class="variable">$PROFILE</span> )) &#123; <span class="built_in">New-Item</span> -Type File -Path <span class="variable">$PROFILE</span> -Force &#125;</span><br><span class="line"><span class="string">@"</span></span><br><span class="line"><span class="string">#requires -Version 2 -Modules posh-git</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">function Write-Theme &#123;</span></span><br><span class="line"><span class="string">    param(</span></span><br><span class="line"><span class="string">        [bool]</span></span><br><span class="line"><span class="string">        `$lastCommandFailed,</span></span><br><span class="line"><span class="string">        [string]</span></span><br><span class="line"><span class="string">        `$with</span></span><br><span class="line"><span class="string">    )</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">    `$lastColor = `$sl.Colors.PromptBackgroundColor</span></span><br><span class="line"><span class="string">    `$prompt = Write-Prompt -Object `$sl.PromptSymbols.StartSymbol -ForegroundColor `$sl.Colors.PromptForegroundColor -BackgroundColor `$sl.Colors.SessionInfoBackgroundColor</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">    #check the last command state and indicate if failed</span></span><br><span class="line"><span class="string">    If (`$lastCommandFailed) &#123;</span></span><br><span class="line"><span class="string">        `$prompt += Write-Prompt -Object "`$(`$sl.PromptSymbols.FailedCommandSymbol) " -ForegroundColor `$sl.Colors.CommandFailedIconForegroundColor -BackgroundColor `$sl.Colors.SessionInfoBackgroundColor</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">    #check for elevated prompt</span></span><br><span class="line"><span class="string">    If (Test-Administrator) &#123;</span></span><br><span class="line"><span class="string">        `$prompt += Write-Prompt -Object "`$(`$sl.PromptSymbols.ElevatedSymbol) " -ForegroundColor `$sl.Colors.AdminIconForegroundColor -BackgroundColor `$sl.Colors.SessionInfoBackgroundColor</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">    `$user = [System.Environment]::UserName</span></span><br><span class="line"><span class="string">    `$computer = [System.Environment]::MachineName</span></span><br><span class="line"><span class="string">    `$path = Get-FullPath -dir `$pwd</span></span><br><span class="line"><span class="string">    if (Test-NotDefaultUser(`$user)) &#123;</span></span><br><span class="line"><span class="string">        `$prompt += Write-Prompt -Object "`$user@`$computer " -ForegroundColor `$sl.Colors.SessionInfoForegroundColor -BackgroundColor `$sl.Colors.SessionInfoBackgroundColor</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">    if (Test-VirtualEnv) &#123;</span></span><br><span class="line"><span class="string">        `$prompt += Write-Prompt -Object "`$(`$sl.PromptSymbols.SegmentForwardSymbol) " -ForegroundColor `$sl.Colors.SessionInfoBackgroundColor -BackgroundColor `$sl.Colors.VirtualEnvBackgroundColor</span></span><br><span class="line"><span class="string">        `$prompt += Write-Prompt -Object "`$(`$sl.PromptSymbols.VirtualEnvSymbol) `$(Get-VirtualEnvName) " -ForegroundColor `$sl.Colors.VirtualEnvForegroundColor -BackgroundColor `$sl.Colors.VirtualEnvBackgroundColor</span></span><br><span class="line"><span class="string">        `$prompt += Write-Prompt -Object "`$(`$sl.PromptSymbols.SegmentForwardSymbol) " -ForegroundColor `$sl.Colors.VirtualEnvBackgroundColor -BackgroundColor `$sl.Colors.PromptBackgroundColor</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    else &#123;</span></span><br><span class="line"><span class="string">        `$prompt += Write-Prompt -Object "`$(`$sl.PromptSymbols.SegmentForwardSymbol) " -ForegroundColor `$sl.Colors.SessionInfoBackgroundColor -BackgroundColor `$sl.Colors.PromptBackgroundColor</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">    ## Writes the drive portion</span></span><br><span class="line"><span class="string">    `$prompt += Write-Prompt -Object "`$path " -ForegroundColor `$sl.Colors.PromptForegroundColor -BackgroundColor `$sl.Colors.PromptBackgroundColor</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">    `$status = Get-VCSStatus</span></span><br><span class="line"><span class="string">    if (`$status) &#123;</span></span><br><span class="line"><span class="string">        `$themeInfo = Get-VcsInfo -status (`$status)</span></span><br><span class="line"><span class="string">        `$lastColor = `$themeInfo.BackgroundColor</span></span><br><span class="line"><span class="string">        `$prompt += Write-Prompt -Object `$(`$sl.PromptSymbols.SegmentForwardSymbol) -ForegroundColor `$sl.Colors.PromptBackgroundColor -BackgroundColor `$lastColor</span></span><br><span class="line"><span class="string">        `$prompt += Write-Prompt -Object " `$(`$themeInfo.VcInfo) " -BackgroundColor `$lastColor -ForegroundColor `$sl.Colors.GitForegroundColor</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">    ## Writes the postfix to the prompt</span></span><br><span class="line"><span class="string">    `$prompt += Write-Prompt -Object `$sl.PromptSymbols.SegmentForwardSymbol -ForegroundColor `$lastColor</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">    `$timeStamp = Get-Date -UFormat %r</span></span><br><span class="line"><span class="string">    `$timestamp = "[`$timeStamp]"</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">    `$prompt += Set-CursorForRightBlockWrite -textLength (`$timestamp.Length + 1)</span></span><br><span class="line"><span class="string">    `$prompt += Write-Prompt `$timeStamp -ForegroundColor `$sl.Colors.PromptForegroundColor</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">    `$prompt += Set-Newline</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">    if (`$with) &#123;</span></span><br><span class="line"><span class="string">        `$prompt += Write-Prompt -Object "`$(`$with.ToUpper()) " -BackgroundColor `$sl.Colors.WithBackgroundColor -ForegroundColor `$sl.Colors.WithForegroundColor</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    `$prompt += Write-Prompt -Object (`$sl.PromptSymbols.PromptIndicator) -ForegroundColor `$sl.Colors.PromptBackgroundColor</span></span><br><span class="line"><span class="string">    `$prompt += ' '</span></span><br><span class="line"><span class="string">    `$prompt</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">`$sl = `$global:ThemeSettings #local settings</span></span><br><span class="line"><span class="string">`$sl.PromptSymbols.StartSymbol = ''</span></span><br><span class="line"><span class="string">`$sl.PromptSymbols.PromptIndicator = [char]::ConvertFromUtf32(0x276F)</span></span><br><span class="line"><span class="string">`$sl.PromptSymbols.SegmentForwardSymbol = [char]::ConvertFromUtf32(0xE0B0)</span></span><br><span class="line"><span class="string">`$sl.Colors.PromptForegroundColor = [ConsoleColor]::White</span></span><br><span class="line"><span class="string">`$sl.Colors.PromptSymbolColor = [ConsoleColor]::White</span></span><br><span class="line"><span class="string">`$sl.Colors.PromptHighlightColor = [ConsoleColor]::DarkBlue</span></span><br><span class="line"><span class="string">`$sl.Colors.GitForegroundColor = [ConsoleColor]::Black</span></span><br><span class="line"><span class="string">`$sl.Colors.WithForegroundColor = [ConsoleColor]::DarkRed</span></span><br><span class="line"><span class="string">`$sl.Colors.WithBackgroundColor = [ConsoleColor]::Magenta</span></span><br><span class="line"><span class="string">`$sl.Colors.VirtualEnvBackgroundColor = [System.ConsoleColor]::Red</span></span><br><span class="line"><span class="string">`$sl.Colors.VirtualEnvForegroundColor = [System.ConsoleColor]::White</span></span><br><span class="line"><span class="string">"@</span>&gt;<span class="variable">$env:userprofile</span><span class="string">"\Documents\WindowsPowerShell\Modules\oh-my-posh\2.0.263\Themes\Paradox.psm1"</span>       <span class="comment"># 建议自己把代码放到记事本然后替换路径，此条路径要改。。</span></span><br><span class="line"><span class="string">@"</span></span><br><span class="line"><span class="string">chcp 65001</span></span><br><span class="line"><span class="string">Set-PSReadlineOption -EditMode Emacs</span></span><br><span class="line"><span class="string">function which(<span class="variable">$name</span>) &#123; Get-Command <span class="variable">$name</span> | Select-Object Definition &#125;</span></span><br><span class="line"><span class="string">function rmrf(<span class="variable">$item</span>) &#123; Remove-Item <span class="variable">$item</span> -Recurse -Force &#125;</span></span><br><span class="line"><span class="string">function mkfile(<span class="variable">$file</span>) &#123; "" | Out-File <span class="variable">$file</span> -Encoding ASCII &#125;</span></span><br><span class="line"><span class="string">Import-Module posh-git</span></span><br><span class="line"><span class="string">Import-Module oh-my-posh</span></span><br><span class="line"><span class="string">Set-Theme Agnoster</span></span><br><span class="line"><span class="string"><span class="variable">$DefaultUser</span> = 'cetrol'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## Chocolatey profile</span></span><br><span class="line"><span class="string"><span class="variable">$ChocolateyProfile</span> = "<span class="variable">$env:ChocolateyInstall</span>\helpers\chocolateyProfile.psm1"</span></span><br><span class="line"><span class="string">if (Test-Path(<span class="variable">$ChocolateyProfile</span>)) &#123;</span></span><br><span class="line"><span class="string">  Import-Module "<span class="variable">$ChocolateyProfile</span>"</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="3-Vscode终端配置"><a href="#3-Vscode终端配置" class="headerlink" title="3 Vscode终端配置"></a>3 Vscode终端配置</h2><hr><ul><li>设置-&gt;用户-&gt;功能-&gt;终端  设置可以正确显示Agnoster的字体，比如fira code retina字体</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> zsh </tag>
            
            <tag> WSL </tag>
            
            <tag> windows </tag>
            
            <tag> 终端美化 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
